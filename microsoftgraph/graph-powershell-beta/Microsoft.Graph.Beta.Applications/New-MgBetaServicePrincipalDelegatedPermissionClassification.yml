### YamlMime:PowershellCmdlet
summary: |-
  Classify a delegated permission by adding a delegatedPermissionClassification to the servicePrincipal representing the API.

  > [!NOTE]
  > To view the v1.0 release of this cmdlet, view [New-MgServicePrincipalDelegatedPermissionClassification](/powershell/module/Microsoft.Graph.Applications/New-MgServicePrincipalDelegatedPermissionClassification?view=graph-powershell-v1.0)
module: Microsoft.Graph.Beta.Applications
notes: |-
  ALIASES

  COMPLEX PARAMETER PROPERTIES

  To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.


  `BODYPARAMETER <IMicrosoftGraphDelegatedPermissionClassification>`: delegatedPermissionClassification
    - `[(Any) <Object>]`: This indicates any property can be added to this object.
    - `[Id <String>]`: The unique identifier for an entity. Read-only.
    - `[Classification <String>]`: permissionClassificationType
    - `[PermissionId <String>]`: The unique identifier (id) for the delegated permission listed in the publishedPermissionScopes collection of the servicePrincipal. Required on create. Does not support $filter.
    - `[PermissionName <String>]`: The claim value (value) for the delegated permission listed in the publishedPermissionScopes collection of the servicePrincipal. Does not support $filter.

  `INPUTOBJECT <IApplicationsIdentity>`: Identity Parameter
    - `[AppManagementPolicyId <String>]`: The unique identifier of appManagementPolicy
    - `[AppRoleAssignmentId <String>]`: The unique identifier of appRoleAssignment
    - `[ApplicationId <String>]`: The unique identifier of application
    - `[ApplicationTemplateId <String>]`: The unique identifier of applicationTemplate
    - `[ClaimsMappingPolicyId <String>]`: The unique identifier of claimsMappingPolicy
    - `[ConnectorGroupId <String>]`: The unique identifier of connectorGroup
    - `[ConnectorId <String>]`: The unique identifier of connector
    - `[DelegatedPermissionClassificationId <String>]`: The unique identifier of delegatedPermissionClassification
    - `[DirectoryDefinitionId <String>]`: The unique identifier of directoryDefinition
    - `[DirectoryObjectId <String>]`: The unique identifier of directoryObject
    - `[EndpointId <String>]`: The unique identifier of endpoint
    - `[ExtensionPropertyId <String>]`: The unique identifier of extensionProperty
    - `[FederatedIdentityCredentialId <String>]`: The unique identifier of federatedIdentityCredential
    - `[GroupId <String>]`: The unique identifier of group
    - `[HomeRealmDiscoveryPolicyId <String>]`: The unique identifier of homeRealmDiscoveryPolicy
    - `[LicenseDetailsId <String>]`: The unique identifier of licenseDetails
    - `[OAuth2PermissionGrantId <String>]`: The unique identifier of oAuth2PermissionGrant
    - `[OnPremisesAgentGroupId <String>]`: The unique identifier of onPremisesAgentGroup
    - `[OnPremisesAgentGroupId1 <String>]`: The unique identifier of onPremisesAgentGroup
    - `[OnPremisesAgentId <String>]`: The unique identifier of onPremisesAgent
    - `[OnPremisesPublishingProfileId <String>]`: The unique identifier of onPremisesPublishingProfile
    - `[PublishedResourceId <String>]`: The unique identifier of publishedResource
    - `[ServicePrincipalId <String>]`: The unique identifier of servicePrincipal
    - `[SynchronizationJobId <String>]`: The unique identifier of synchronizationJob
    - `[SynchronizationTemplateId <String>]`: The unique identifier of synchronizationTemplate
    - `[TokenIssuancePolicyId <String>]`: The unique identifier of tokenIssuancePolicy
    - `[TokenLifetimePolicyId <String>]`: The unique identifier of tokenLifetimePolicy
    - `[UserId <String>]`: The unique identifier of user
inputs:
- name: <xref href="Microsoft.Graph.Beta.PowerShell.Models.IApplicationsIdentity" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="Microsoft.Graph.Beta.PowerShell.Models.IMicrosoftGraphDelegatedPermissionClassification" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.Graph.Beta.PowerShell.Models.IMicrosoftGraphDelegatedPermissionClassification" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: New-MgServicePrincipalDelegatedPermissionClassification
  href: /powershell/module/Microsoft.Graph.Applications/New-MgServicePrincipalDelegatedPermissionClassification?view=graph-powershell-v1.0
syntaxes:
- >-
  New-MgBetaServicePrincipalDelegatedPermissionClassification -ServicePrincipalId <String>

   [-AdditionalProperties <Hashtable>] [-Classification <String>] [-Id <String>] [-PermissionId <String>]

   [-PermissionName <String>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  New-MgBetaServicePrincipalDelegatedPermissionClassification -ServicePrincipalId <String>

   -BodyParameter <IMicrosoftGraphDelegatedPermissionClassification> [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  New-MgBetaServicePrincipalDelegatedPermissionClassification -InputObject <IApplicationsIdentity>

   [-AdditionalProperties <Hashtable>] [-Classification <String>] [-Id <String>] [-PermissionId <String>]

   [-PermissionName <String>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  New-MgBetaServicePrincipalDelegatedPermissionClassification -InputObject <IApplicationsIdentity>

   -BodyParameter <IMicrosoftGraphDelegatedPermissionClassification> [-WhatIf] [-Confirm] [<CommonParameters>]
examples:
- title: 'Example 1: Code snippet'
  code: |-
    Import-Module Microsoft.Graph.Beta.Applications

    $params = @{
    	permissionId = "e1fe6dd8-ba31-4d61-89e7-88639da4683d"
    	permissionName = "User.Read"
    	classification = "low"
    }

    New-MgBetaServicePrincipalDelegatedPermissionClassification -ServicePrincipalId $servicePrincipalId -BodyParameter $params
  description: |-
    This example shows how to use the New-MgBetaServicePrincipalDelegatedPermissionClassification Cmdlet.

    To learn about permissions for this resource, see the [permissions reference](/graph/permissions-reference).
  summary: ""
parameters:
- type: <xref href="Hashtable" data-throw-if-not-resolved="False" />
  name: AdditionalProperties
  description: |+
    Additional Parameters

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="IMicrosoftGraphDelegatedPermissionClassification" data-throw-if-not-resolved="False" />
  name: BodyParameter
  isRequired: true
  description: |+
    delegatedPermissionClassification
    To construct, see NOTES section for BODYPARAMETER properties and create a hash table.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Classification
  description: |+
    permissionClassificationType

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: None
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Id
  description: |+
    The unique identifier for an entity.
    Read-only.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="IApplicationsIdentity" data-throw-if-not-resolved="False" />
  name: InputObject
  isRequired: true
  description: |+
    Identity Parameter
    To construct, see NOTES section for INPUTOBJECT properties and create a hash table.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: PermissionId
  description: |+
    The unique identifier (id) for the delegated permission listed in the publishedPermissionScopes collection of the servicePrincipal.
    Required on create.
    Does not support $filter.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: PermissionName
  description: |+
    The claim value (value) for the delegated permission listed in the publishedPermissionScopes collection of the servicePrincipal.
    Does not support $filter.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: ServicePrincipalId
  isRequired: true
  description: |+
    The unique identifier of servicePrincipal

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: None
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: Microsoft.Graph.Beta.Applications.New-MgBetaServicePrincipalDelegatedPermissionClassification
name: New-MgBetaServicePrincipalDelegatedPermissionClassification
description: |-
  Classify a delegated permission by adding a delegatedPermissionClassification to the servicePrincipal representing the API.
metadata:
  external help file: Microsoft.Graph.Beta.Applications-help.xml
  Module Name: Microsoft.Graph.Beta.Applications
  online version: https://learn.microsoft.com/powershell/module/microsoft.graph.beta.applications/new-mgbetaserviceprincipaldelegatedpermissionclassification
  schema: 2.0.0
