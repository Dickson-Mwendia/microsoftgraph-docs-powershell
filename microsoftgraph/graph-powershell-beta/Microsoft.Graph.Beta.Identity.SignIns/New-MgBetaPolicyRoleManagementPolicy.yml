### YamlMime:PowershellCmdlet
summary: |-
  Create new navigation property to roleManagementPolicies for policies

  > [!NOTE]
  > To view the v1.0 release of this cmdlet, view [New-MgPolicyRoleManagementPolicy](/powershell/module/Microsoft.Graph.Identity.SignIns/New-MgPolicyRoleManagementPolicy?view=graph-powershell-v1.0)
module: Microsoft.Graph.Beta.Identity.SignIns
notes: |-
  ALIASES

  COMPLEX PARAMETER PROPERTIES

  To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.


  `BODYPARAMETER <IMicrosoftGraphUnifiedRoleManagementPolicy>`: unifiedRoleManagementPolicy
    - `[(Any) <Object>]`: This indicates any property can be added to this object.
    - `[Id <String>]`: The unique identifier for an entity. Read-only.
    - `[Description <String>]`: Description for the policy.
    - `[DisplayName <String>]`: Display name for the policy.
    - `[EffectiveRules <IMicrosoftGraphUnifiedRoleManagementPolicyRule[]>]`: The list of effective rules like approval rules and expiration rules evaluated based on inherited referenced rules. For example, if there is a tenant-wide policy to enforce enabling an approval rule, the effective rule will be to enable approval even if the policy has a rule to disable approval. Supports $expand.
      - `[Id <String>]`: The unique identifier for an entity. Read-only.
      - `[Target <IMicrosoftGraphUnifiedRoleManagementPolicyRuleTarget>]`: unifiedRoleManagementPolicyRuleTarget
        - `[(Any) <Object>]`: This indicates any property can be added to this object.
        - `[Caller <String>]`: The type of caller that's the target of the policy rule. Allowed values are: None, Admin, EndUser.
        - `[EnforcedSettings <String[]>]`: The list of role settings that are enforced and cannot be overridden by child scopes. Use All for all settings.
        - `[InheritableSettings <String[]>]`: The list of role settings that can be inherited by child scopes. Use All for all settings.
        - `[Level <String>]`: The role assignment type that's the target of policy rule. Allowed values are: Eligibility, Assignment.
        - `[Operations <String[]>]`: The role management operations that are the target of the policy rule. Allowed values are: All, Activate, Deactivate, Assign, Update, Remove, Extend, Renew.
        - `[TargetObjects <IMicrosoftGraphDirectoryObject[]>]`: 
          - `[Id <String>]`: The unique identifier for an entity. Read-only.
          - `[DeletedDateTime <DateTime?>]`: Date and time when this object was deleted. Always null when the object hasn't been deleted.
    - `[IsOrganizationDefault <Boolean?>]`: This can only be set to true for a single tenant-wide policy which will apply to all scopes and roles. Set the scopeId to / and scopeType to Directory. Supports $filter (eq, ne).
    - `[LastModifiedBy <IMicrosoftGraphIdentity>]`: identity
      - `[(Any) <Object>]`: This indicates any property can be added to this object.
      - `[DisplayName <String>]`: The display name of the identity. Note that this might not always be available or up to date. For example, if a user changes their display name, the API might show the new value in a future response, but the items associated with the user won't show up as having changed when using delta.
      - `[Id <String>]`: Unique identifier for the identity.
    - `[LastModifiedDateTime <DateTime?>]`: The time when the role setting was last modified.
    - `[Rules <IMicrosoftGraphUnifiedRoleManagementPolicyRule[]>]`: The collection of rules like approval rules and expiration rules. Supports $expand.
    - `[ScopeId <String>]`: The identifier of the scope where the policy is created. Can be / for the tenant or a group ID. Required.
    - `[ScopeType <String>]`: The type of the scope where the policy is created. One of Directory, DirectoryRole, Group. Required.

  `EFFECTIVERULES <IMicrosoftGraphUnifiedRoleManagementPolicyRule[]>`: The list of effective rules like approval rules and expiration rules evaluated based on inherited referenced rules. For example, if there is a tenant-wide policy to enforce enabling an approval rule, the effective rule will be to enable approval even if the policy has a rule to disable approval. Supports $expand.
    - `[Id <String>]`: The unique identifier for an entity. Read-only.
    - `[Target <IMicrosoftGraphUnifiedRoleManagementPolicyRuleTarget>]`: unifiedRoleManagementPolicyRuleTarget
      - `[(Any) <Object>]`: This indicates any property can be added to this object.
      - `[Caller <String>]`: The type of caller that's the target of the policy rule. Allowed values are: None, Admin, EndUser.
      - `[EnforcedSettings <String[]>]`: The list of role settings that are enforced and cannot be overridden by child scopes. Use All for all settings.
      - `[InheritableSettings <String[]>]`: The list of role settings that can be inherited by child scopes. Use All for all settings.
      - `[Level <String>]`: The role assignment type that's the target of policy rule. Allowed values are: Eligibility, Assignment.
      - `[Operations <String[]>]`: The role management operations that are the target of the policy rule. Allowed values are: All, Activate, Deactivate, Assign, Update, Remove, Extend, Renew.
      - `[TargetObjects <IMicrosoftGraphDirectoryObject[]>]`: 
        - `[Id <String>]`: The unique identifier for an entity. Read-only.
        - `[DeletedDateTime <DateTime?>]`: Date and time when this object was deleted. Always null when the object hasn't been deleted.

  `LASTMODIFIEDBY <IMicrosoftGraphIdentity>`: identity
    - `[(Any) <Object>]`: This indicates any property can be added to this object.
    - `[DisplayName <String>]`: The display name of the identity. Note that this might not always be available or up to date. For example, if a user changes their display name, the API might show the new value in a future response, but the items associated with the user won't show up as having changed when using delta.
    - `[Id <String>]`: Unique identifier for the identity.

  `RULES <IMicrosoftGraphUnifiedRoleManagementPolicyRule[]>`: The collection of rules like approval rules and expiration rules. Supports $expand.
    - `[Id <String>]`: The unique identifier for an entity. Read-only.
    - `[Target <IMicrosoftGraphUnifiedRoleManagementPolicyRuleTarget>]`: unifiedRoleManagementPolicyRuleTarget
      - `[(Any) <Object>]`: This indicates any property can be added to this object.
      - `[Caller <String>]`: The type of caller that's the target of the policy rule. Allowed values are: None, Admin, EndUser.
      - `[EnforcedSettings <String[]>]`: The list of role settings that are enforced and cannot be overridden by child scopes. Use All for all settings.
      - `[InheritableSettings <String[]>]`: The list of role settings that can be inherited by child scopes. Use All for all settings.
      - `[Level <String>]`: The role assignment type that's the target of policy rule. Allowed values are: Eligibility, Assignment.
      - `[Operations <String[]>]`: The role management operations that are the target of the policy rule. Allowed values are: All, Activate, Deactivate, Assign, Update, Remove, Extend, Renew.
      - `[TargetObjects <IMicrosoftGraphDirectoryObject[]>]`: 
        - `[Id <String>]`: The unique identifier for an entity. Read-only.
        - `[DeletedDateTime <DateTime?>]`: Date and time when this object was deleted. Always null when the object hasn't been deleted.
inputs:
- name: <xref href="Microsoft.Graph.Beta.PowerShell.Models.IMicrosoftGraphUnifiedRoleManagementPolicy" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.Graph.Beta.PowerShell.Models.IMicrosoftGraphUnifiedRoleManagementPolicy" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: New-MgPolicyRoleManagementPolicy
  href: /powershell/module/Microsoft.Graph.Identity.SignIns/New-MgPolicyRoleManagementPolicy?view=graph-powershell-v1.0
syntaxes:
- >-
  New-MgBetaPolicyRoleManagementPolicy [-AdditionalProperties <Hashtable>] [-Description <String>]

   [-DisplayName <String>] [-EffectiveRules <IMicrosoftGraphUnifiedRoleManagementPolicyRule[]>] [-Id <String>]

   [-IsOrganizationDefault] [-LastModifiedBy <IMicrosoftGraphIdentity>] [-LastModifiedDateTime <DateTime>]

   [-Rules <IMicrosoftGraphUnifiedRoleManagementPolicyRule[]>] [-ScopeId <String>] [-ScopeType <String>]

   [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  New-MgBetaPolicyRoleManagementPolicy -BodyParameter <IMicrosoftGraphUnifiedRoleManagementPolicy> [-WhatIf]

   [-Confirm] [<CommonParameters>]
examples:
- title: 'Example 1: Retrieve the role management policies that apply to Azure AD roles'
  code: |-
    Import-Module Microsoft.Graph.Beta.Identity.SignIns

    Get-MgBetaPolicyRoleManagementPolicy -Filter "scopeId eq '/' and scopeType eq 'DirectoryRole'"
  description: |-
    This example shows how to use the New-MgBetaBetaPolicyRoleManagementPolicy Cmdlet.

    To learn about permissions for this resource, see the [permissions reference](/graph/permissions-reference).
  summary: ""
- title: 'Example 2: Retrieve the role management policies that apply to the directory and expand the associated rules'
  code: |-
    Import-Module Microsoft.Graph.Beta.Identity.SignIns

    Get-MgBetaPolicyRoleManagementPolicy -Filter "scopeId eq '/' and scopeType eq 'Directory'" -ExpandProperty "rules"
  description: |-
    This example shows how to use the New-MgBetaBetaPolicyRoleManagementPolicy Cmdlet.

    To learn about permissions for this resource, see the [permissions reference](/graph/permissions-reference).
  summary: ""
parameters:
- type: <xref href="Hashtable" data-throw-if-not-resolved="False" />
  name: AdditionalProperties
  description: |+
    Additional Parameters

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="IMicrosoftGraphUnifiedRoleManagementPolicy" data-throw-if-not-resolved="False" />
  name: BodyParameter
  isRequired: true
  description: |+
    unifiedRoleManagementPolicy
    To construct, see NOTES section for BODYPARAMETER properties and create a hash table.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: None
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Description
  description: |+
    Description for the policy.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: DisplayName
  description: |+
    Display name for the policy.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="IMicrosoftGraphUnifiedRoleManagementPolicyRule" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: EffectiveRules
  description: |+
    The list of effective rules like approval rules and expiration rules evaluated based on inherited referenced rules.
    For example, if there is a tenant-wide policy to enforce enabling an approval rule, the effective rule will be to enable approval even if the policy has a rule to disable approval.
    Supports $expand.
    To construct, see NOTES section for EFFECTIVERULES properties and create a hash table.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Id
  description: |+
    The unique identifier for an entity.
    Read-only.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: IsOrganizationDefault
  description: |+
    This can only be set to true for a single tenant-wide policy which will apply to all scopes and roles.
    Set the scopeId to / and scopeType to Directory.
    Supports $filter (eq, ne).

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="IMicrosoftGraphIdentity" data-throw-if-not-resolved="False" />
  name: LastModifiedBy
  description: |+
    identity
    To construct, see NOTES section for LASTMODIFIEDBY properties and create a hash table.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="DateTime" data-throw-if-not-resolved="False" />
  name: LastModifiedDateTime
  description: |+
    The time when the role setting was last modified.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="IMicrosoftGraphUnifiedRoleManagementPolicyRule" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Rules
  description: |+
    The collection of rules like approval rules and expiration rules.
    Supports $expand.
    To construct, see NOTES section for RULES properties and create a hash table.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: ScopeId
  description: |+
    The identifier of the scope where the policy is created.
    Can be / for the tenant or a group ID.
    Required.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: ScopeType
  description: |+
    The type of the scope where the policy is created.
    One of Directory, DirectoryRole, Group.
    Required.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: None
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: Microsoft.Graph.Beta.Identity.SignIns.New-MgBetaPolicyRoleManagementPolicy
name: New-MgBetaPolicyRoleManagementPolicy
description: |-
  Create new navigation property to roleManagementPolicies for policies
metadata:
  external help file: Microsoft.Graph.Beta.Identity.SignIns-help.xml
  Module Name: Microsoft.Graph.Beta.Identity.SignIns
  online version: https://learn.microsoft.com/powershell/module/microsoft.graph.beta.identity.signins/new-mgbetapolicyrolemanagementpolicy
  schema: 2.0.0
