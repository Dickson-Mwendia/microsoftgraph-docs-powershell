### YamlMime:PowershellCmdlet
summary: |-
  Create a delegated permission grant, represented by an oAuth2PermissionGrant object.
  A delegated permission grant authorizes a client service principal (representing a client application) to access a resource service principal (representing an API), on behalf of a signed-in user, for the level of access limited by the delegated permissions which were granted.

  > [!NOTE]
  > To view the v1.0 release of this cmdlet, view [New-MgOauth2PermissionGrant](/powershell/module/Microsoft.Graph.Identity.SignIns/New-MgOauth2PermissionGrant?view=graph-powershell-v1.0)
module: Microsoft.Graph.Beta.Identity.SignIns
notes: |-
  ALIASES

  COMPLEX PARAMETER PROPERTIES

  To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.


  `BODYPARAMETER <IMicrosoftGraphOAuth2PermissionGrant>`: oAuth2PermissionGrant
    - `[(Any) <Object>]`: This indicates any property can be added to this object.
    - `[Id <String>]`: The unique identifier for an entity. Read-only.
    - `[ClientId <String>]`: The id of the client service principal for the application which is authorized to act on behalf of a signed-in user when accessing an API. Required. Supports $filter (eq only).
    - `[ConsentType <String>]`: Indicates whether authorization is granted for the client application to impersonate all users or only a specific user. AllPrincipals indicates authorization to impersonate all users. Principal indicates authorization to impersonate a specific user. Consent on behalf of all users can be granted by an administrator. Non-admin users may be authorized to consent on behalf of themselves in some cases, for some delegated permissions. Required. Supports $filter (eq only).
    - `[ExpiryTime <DateTime?>]`: Currently, the end time value is ignored, but a value is required when creating an oAuth2PermissionGrant. Required.
    - `[PrincipalId <String>]`: The id of the user on behalf of whom the client is authorized to access the resource, when consentType is Principal. If consentType is AllPrincipals this value is null. Required when consentType is Principal. Supports $filter (eq only).
    - `[ResourceId <String>]`: The id of the resource service principal to which access is authorized. This identifies the API which the client is authorized to attempt to call on behalf of a signed-in user. Supports $filter (eq only).
    - `[Scope <String>]`: A space-separated list of the claim values for delegated permissions which should be included in access tokens for the resource application (the API). For example, openid User.Read GroupMember.Read.All. Each claim value should match the value field of one of the delegated permissions defined by the API, listed in the publishedPermissionScopes property of the resource service principal. Must not exceed 3850 characters in length.
    - `[StartTime <DateTime?>]`: Currently, the start time value is ignored, but a value is required when creating an oAuth2PermissionGrant. Required.
inputs:
- name: <xref href="Microsoft.Graph.Beta.PowerShell.Models.IMicrosoftGraphOAuth2PermissionGrant" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.Graph.Beta.PowerShell.Models.IMicrosoftGraphOAuth2PermissionGrant" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: New-MgOauth2PermissionGrant
  href: /powershell/module/Microsoft.Graph.Identity.SignIns/New-MgOauth2PermissionGrant?view=graph-powershell-v1.0
syntaxes:
- >-
  New-MgBetaOauth2PermissionGrant [-AdditionalProperties <Hashtable>] [-ClientId <String>]

   [-ConsentType <String>] [-ExpiryTime <DateTime>] [-Id <String>] [-PrincipalId <String>] [-ResourceId <String>]

   [-Scope <String>] [-StartTime <DateTime>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  New-MgBetaOauth2PermissionGrant -BodyParameter <IMicrosoftGraphOAuth2PermissionGrant> [-WhatIf] [-Confirm]

   [<CommonParameters>]
examples:
- title: 'Example 1: Code snippet'
  code: |-
    Import-Module Microsoft.Graph.Beta.Identity.SignIns

    $params = @{
    	clientId = "ef969797-201d-4f6b-960c-e9ed5f31dab5"
    	consentType = "AllPrincipals"
    	resourceId = "943603e4-e787-4fe9-93d1-e30f749aae39"
    	scope = "DelegatedPermissionGrant.ReadWrite.All"
    	startTime = [System.DateTime]::Parse("2022-03-17T00:00:00Z")
    	expiryTime = [System.DateTime]::Parse("2023-03-17T00:00:00Z")
    }

    New-MgBetaOauth2PermissionGrant -BodyParameter $params
  description: |-
    This example shows how to use the New-MgBetaOauth2PermissionGrant Cmdlet.

    To learn about permissions for this resource, see the [permissions reference](/graph/permissions-reference).
  summary: ""
parameters:
- type: <xref href="Hashtable" data-throw-if-not-resolved="False" />
  name: AdditionalProperties
  description: |+
    Additional Parameters

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="IMicrosoftGraphOAuth2PermissionGrant" data-throw-if-not-resolved="False" />
  name: BodyParameter
  isRequired: true
  description: |+
    oAuth2PermissionGrant
    To construct, see NOTES section for BODYPARAMETER properties and create a hash table.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: ClientId
  description: |+
    The id of the client service principal for the application which is authorized to act on behalf of a signed-in user when accessing an API.
    Required.
    Supports $filter (eq only).

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: None
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: ConsentType
  description: |+
    Indicates whether authorization is granted for the client application to impersonate all users or only a specific user.
    AllPrincipals indicates authorization to impersonate all users.
    Principal indicates authorization to impersonate a specific user.
    Consent on behalf of all users can be granted by an administrator.
    Non-admin users may be authorized to consent on behalf of themselves in some cases, for some delegated permissions.
    Required.
    Supports $filter (eq only).

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="DateTime" data-throw-if-not-resolved="False" />
  name: ExpiryTime
  description: |+
    Currently, the end time value is ignored, but a value is required when creating an oAuth2PermissionGrant.
    Required.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Id
  description: |+
    The unique identifier for an entity.
    Read-only.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: PrincipalId
  description: |+
    The id of the user on behalf of whom the client is authorized to access the resource, when consentType is Principal.
    If consentType is AllPrincipals this value is null.
    Required when consentType is Principal.
    Supports $filter (eq only).

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: ResourceId
  description: |+
    The id of the resource service principal to which access is authorized.
    This identifies the API which the client is authorized to attempt to call on behalf of a signed-in user.
    Supports $filter (eq only).

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Scope
  description: |+
    A space-separated list of the claim values for delegated permissions which should be included in access tokens for the resource application (the API).
    For example, openid User.Read GroupMember.Read.All.
    Each claim value should match the value field of one of the delegated permissions defined by the API, listed in the publishedPermissionScopes property of the resource service principal.
    Must not exceed 3850 characters in length.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="DateTime" data-throw-if-not-resolved="False" />
  name: StartTime
  description: |+
    Currently, the start time value is ignored, but a value is required when creating an oAuth2PermissionGrant.
    Required.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: None
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: Microsoft.Graph.Beta.Identity.SignIns.New-MgBetaOauth2PermissionGrant
name: New-MgBetaOauth2PermissionGrant
description: |-
  Create a delegated permission grant, represented by an oAuth2PermissionGrant object.
  A delegated permission grant authorizes a client service principal (representing a client application) to access a resource service principal (representing an API), on behalf of a signed-in user, for the level of access limited by the delegated permissions which were granted.
metadata:
  external help file: Microsoft.Graph.Beta.Identity.SignIns-help.xml
  Module Name: Microsoft.Graph.Beta.Identity.SignIns
  online version: https://learn.microsoft.com/powershell/module/microsoft.graph.beta.identity.signins/new-mgbetaoauth2permissiongrant
  schema: 2.0.0
