### YamlMime:PowershellCmdlet
summary: |-
  Update the navigation property roleManagementPolicyAssignments in policies

  > [!NOTE]
  > To view the v1.0 release of this cmdlet, view [Update-MgPolicyRoleManagementPolicyAssignment](/powershell/module/Microsoft.Graph.Identity.SignIns/Update-MgPolicyRoleManagementPolicyAssignment?view=graph-powershell-v1.0)
module: Microsoft.Graph.Beta.Identity.SignIns
notes: |-
  ALIASES

  COMPLEX PARAMETER PROPERTIES

  To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.


  `BODYPARAMETER <IMicrosoftGraphUnifiedRoleManagementPolicyAssignment>`: unifiedRoleManagementPolicyAssignment
    - `[(Any) <Object>]`: This indicates any property can be added to this object.
    - `[Id <String>]`: The unique identifier for an entity. Read-only.
    - `[Policy <IMicrosoftGraphUnifiedRoleManagementPolicy>]`: unifiedRoleManagementPolicy
      - `[(Any) <Object>]`: This indicates any property can be added to this object.
      - `[Id <String>]`: The unique identifier for an entity. Read-only.
      - `[Description <String>]`: Description for the policy.
      - `[DisplayName <String>]`: Display name for the policy.
      - `[EffectiveRules <IMicrosoftGraphUnifiedRoleManagementPolicyRule[]>]`: The list of effective rules like approval rules and expiration rules evaluated based on inherited referenced rules. For example, if there is a tenant-wide policy to enforce enabling an approval rule, the effective rule will be to enable approval even if the policy has a rule to disable approval. Supports $expand.
        - `[Id <String>]`: The unique identifier for an entity. Read-only.
        - `[Target <IMicrosoftGraphUnifiedRoleManagementPolicyRuleTarget>]`: unifiedRoleManagementPolicyRuleTarget
          - `[(Any) <Object>]`: This indicates any property can be added to this object.
          - `[Caller <String>]`: The type of caller that's the target of the policy rule. Allowed values are: None, Admin, EndUser.
          - `[EnforcedSettings <String[]>]`: The list of role settings that are enforced and cannot be overridden by child scopes. Use All for all settings.
          - `[InheritableSettings <String[]>]`: The list of role settings that can be inherited by child scopes. Use All for all settings.
          - `[Level <String>]`: The role assignment type that's the target of policy rule. Allowed values are: Eligibility, Assignment.
          - `[Operations <String[]>]`: The role management operations that are the target of the policy rule. Allowed values are: All, Activate, Deactivate, Assign, Update, Remove, Extend, Renew.
          - `[TargetObjects <IMicrosoftGraphDirectoryObject[]>]`: 
            - `[Id <String>]`: The unique identifier for an entity. Read-only.
            - `[DeletedDateTime <DateTime?>]`: Date and time when this object was deleted. Always null when the object hasn't been deleted.
      - `[IsOrganizationDefault <Boolean?>]`: This can only be set to true for a single tenant-wide policy which will apply to all scopes and roles. Set the scopeId to / and scopeType to Directory. Supports $filter (eq, ne).
      - `[LastModifiedBy <IMicrosoftGraphIdentity>]`: identity
        - `[(Any) <Object>]`: This indicates any property can be added to this object.
        - `[DisplayName <String>]`: The display name of the identity. Note that this might not always be available or up to date. For example, if a user changes their display name, the API might show the new value in a future response, but the items associated with the user won't show up as having changed when using delta.
        - `[Id <String>]`: Unique identifier for the identity.
      - `[LastModifiedDateTime <DateTime?>]`: The time when the role setting was last modified.
      - `[Rules <IMicrosoftGraphUnifiedRoleManagementPolicyRule[]>]`: The collection of rules like approval rules and expiration rules. Supports $expand.
      - `[ScopeId <String>]`: The identifier of the scope where the policy is created. Can be / for the tenant or a group ID. Required.
      - `[ScopeType <String>]`: The type of the scope where the policy is created. One of Directory, DirectoryRole, Group. Required.
    - `[PolicyId <String>]`: The id of the policy. Inherited from entity.
    - `[RoleDefinitionId <String>]`: For Azure AD roles policy, it's the identifier of the role definition object where the policy applies. For PIM for groups membership and ownership, it's either member or owner. Supports $filter (eq).
    - `[ScopeId <String>]`: The identifier of the scope where the policy is assigned.  Can be / for the tenant or a group ID. Required.
    - `[ScopeType <String>]`: The type of the scope where the policy is assigned. One of Directory, DirectoryRole, Group. Required.

  `INPUTOBJECT <IIdentitySignInsIdentity>`: Identity Parameter
    - `[ActivityBasedTimeoutPolicyId <String>]`: The unique identifier of activityBasedTimeoutPolicy
    - `[AppManagementPolicyId <String>]`: The unique identifier of appManagementPolicy
    - `[AuthenticationCombinationConfigurationId <String>]`: The unique identifier of authenticationCombinationConfiguration
    - `[AuthenticationContextClassReferenceId <String>]`: The unique identifier of authenticationContextClassReference
    - `[AuthenticationEventListenerId <String>]`: The unique identifier of authenticationEventListener
    - `[AuthenticationEventsFlowId <String>]`: The unique identifier of authenticationEventsFlow
    - `[AuthenticationMethodConfigurationId <String>]`: The unique identifier of authenticationMethodConfiguration
    - `[AuthenticationMethodId <String>]`: The unique identifier of authenticationMethod
    - `[AuthenticationMethodModeDetailId <String>]`: The unique identifier of authenticationMethodModeDetail
    - `[AuthenticationMethodModes <String[]>]`: Usage: authenticationMethodModes={authenticationMethodModes}
    - `[AuthenticationStrengthPolicyId <String>]`: The unique identifier of authenticationStrengthPolicy
    - `[AuthorizationPolicyId <String>]`: The unique identifier of authorizationPolicy
    - `[B2CIdentityUserFlowId <String>]`: The unique identifier of b2cIdentityUserFlow
    - `[B2XIdentityUserFlowId <String>]`: The unique identifier of b2xIdentityUserFlow
    - `[BitlockerRecoveryKeyId <String>]`: The unique identifier of bitlockerRecoveryKey
    - `[CertificateBasedAuthConfigurationId <String>]`: The unique identifier of certificateBasedAuthConfiguration
    - `[ClaimsMappingPolicyId <String>]`: The unique identifier of claimsMappingPolicy
    - `[ConditionalAccessPolicyId <String>]`: The unique identifier of conditionalAccessPolicy
    - `[ConditionalAccessTemplateId <String>]`: The unique identifier of conditionalAccessTemplate
    - `[CrossTenantAccessPolicyConfigurationPartnerTenantId <String>]`: The unique identifier of crossTenantAccessPolicyConfigurationPartner
    - `[CustomAuthenticationExtensionId <String>]`: The unique identifier of customAuthenticationExtension
    - `[DataLossPreventionPolicyId <String>]`: The unique identifier of dataLossPreventionPolicy
    - `[DataPolicyOperationId <String>]`: The unique identifier of dataPolicyOperation
    - `[DefaultUserRoleOverrideId <String>]`: The unique identifier of defaultUserRoleOverride
    - `[DirectoryObjectId <String>]`: The unique identifier of directoryObject
    - `[EmailAuthenticationMethodId <String>]`: The unique identifier of emailAuthenticationMethod
    - `[FeatureRolloutPolicyId <String>]`: The unique identifier of featureRolloutPolicy
    - `[Fido2AuthenticationMethodId <String>]`: The unique identifier of fido2AuthenticationMethod
    - `[GroupId <String>]`: The unique identifier of group
    - `[HomeRealmDiscoveryPolicyId <String>]`: The unique identifier of homeRealmDiscoveryPolicy
    - `[IdentityApiConnectorId <String>]`: The unique identifier of identityApiConnector
    - `[IdentityProviderBaseId <String>]`: The unique identifier of identityProviderBase
    - `[IdentityProviderId <String>]`: The unique identifier of identityProvider
    - `[IdentityUserFlowAttributeAssignmentId <String>]`: The unique identifier of identityUserFlowAttributeAssignment
    - `[IdentityUserFlowAttributeId <String>]`: The unique identifier of identityUserFlowAttribute
    - `[IdentityUserFlowId <String>]`: The unique identifier of identityUserFlow
    - `[InformationProtectionLabelId <String>]`: The unique identifier of informationProtectionLabel
    - `[InvitationId <String>]`: The unique identifier of invitation
    - `[LongRunningOperationId <String>]`: The unique identifier of longRunningOperation
    - `[MicrosoftAuthenticatorAuthenticationMethodId <String>]`: The unique identifier of microsoftAuthenticatorAuthenticationMethod
    - `[MobilityManagementPolicyId <String>]`: The unique identifier of mobilityManagementPolicy
    - `[NamedLocationId <String>]`: The unique identifier of namedLocation
    - `[OAuth2PermissionGrantId <String>]`: The unique identifier of oAuth2PermissionGrant
    - `[OrganizationId <String>]`: The unique identifier of organization
    - `[PasswordAuthenticationMethodId <String>]`: The unique identifier of passwordAuthenticationMethod
    - `[PasswordlessMicrosoftAuthenticatorAuthenticationMethodId <String>]`: The unique identifier of passwordlessMicrosoftAuthenticatorAuthenticationMethod
    - `[PermissionGrantConditionSetId <String>]`: The unique identifier of permissionGrantConditionSet
    - `[PermissionGrantPolicyId <String>]`: The unique identifier of permissionGrantPolicy
    - `[PhoneAuthenticationMethodId <String>]`: The unique identifier of phoneAuthenticationMethod
    - `[RiskDetectionId <String>]`: The unique identifier of riskDetection
    - `[RiskyServicePrincipalHistoryItemId <String>]`: The unique identifier of riskyServicePrincipalHistoryItem
    - `[RiskyServicePrincipalId <String>]`: The unique identifier of riskyServicePrincipal
    - `[RiskyUserHistoryItemId <String>]`: The unique identifier of riskyUserHistoryItem
    - `[RiskyUserId <String>]`: The unique identifier of riskyUser
    - `[SensitivityLabelId <String>]`: The unique identifier of sensitivityLabel
    - `[SensitivityLabelId1 <String>]`: The unique identifier of sensitivityLabel
    - `[ServicePrincipalCreationConditionSetId <String>]`: The unique identifier of servicePrincipalCreationConditionSet
    - `[ServicePrincipalCreationPolicyId <String>]`: The unique identifier of servicePrincipalCreationPolicy
    - `[ServicePrincipalRiskDetectionId <String>]`: The unique identifier of servicePrincipalRiskDetection
    - `[SoftwareOathAuthenticationMethodId <String>]`: The unique identifier of softwareOathAuthenticationMethod
    - `[TemporaryAccessPassAuthenticationMethodId <String>]`: The unique identifier of temporaryAccessPassAuthenticationMethod
    - `[ThreatAssessmentRequestId <String>]`: The unique identifier of threatAssessmentRequest
    - `[ThreatAssessmentResultId <String>]`: The unique identifier of threatAssessmentResult
    - `[TokenIssuancePolicyId <String>]`: The unique identifier of tokenIssuancePolicy
    - `[TokenLifetimePolicyId <String>]`: The unique identifier of tokenLifetimePolicy
    - `[TrustFrameworkKeySetId <String>]`: The unique identifier of trustFrameworkKeySet
    - `[TrustFrameworkPolicyId <String>]`: The unique identifier of trustFrameworkPolicy
    - `[UnifiedRoleManagementPolicyAssignmentId <String>]`: The unique identifier of unifiedRoleManagementPolicyAssignment
    - `[UnifiedRoleManagementPolicyId <String>]`: The unique identifier of unifiedRoleManagementPolicy
    - `[UnifiedRoleManagementPolicyRuleId <String>]`: The unique identifier of unifiedRoleManagementPolicyRule
    - `[UserFlowLanguageConfigurationId <String>]`: The unique identifier of userFlowLanguageConfiguration
    - `[UserFlowLanguagePageId <String>]`: The unique identifier of userFlowLanguagePage
    - `[UserId <String>]`: The unique identifier of user
    - `[WindowsHelloForBusinessAuthenticationMethodId <String>]`: The unique identifier of windowsHelloForBusinessAuthenticationMethod

  `POLICY <IMicrosoftGraphUnifiedRoleManagementPolicy>`: unifiedRoleManagementPolicy
    - `[(Any) <Object>]`: This indicates any property can be added to this object.
    - `[Id <String>]`: The unique identifier for an entity. Read-only.
    - `[Description <String>]`: Description for the policy.
    - `[DisplayName <String>]`: Display name for the policy.
    - `[EffectiveRules <IMicrosoftGraphUnifiedRoleManagementPolicyRule[]>]`: The list of effective rules like approval rules and expiration rules evaluated based on inherited referenced rules. For example, if there is a tenant-wide policy to enforce enabling an approval rule, the effective rule will be to enable approval even if the policy has a rule to disable approval. Supports $expand.
      - `[Id <String>]`: The unique identifier for an entity. Read-only.
      - `[Target <IMicrosoftGraphUnifiedRoleManagementPolicyRuleTarget>]`: unifiedRoleManagementPolicyRuleTarget
        - `[(Any) <Object>]`: This indicates any property can be added to this object.
        - `[Caller <String>]`: The type of caller that's the target of the policy rule. Allowed values are: None, Admin, EndUser.
        - `[EnforcedSettings <String[]>]`: The list of role settings that are enforced and cannot be overridden by child scopes. Use All for all settings.
        - `[InheritableSettings <String[]>]`: The list of role settings that can be inherited by child scopes. Use All for all settings.
        - `[Level <String>]`: The role assignment type that's the target of policy rule. Allowed values are: Eligibility, Assignment.
        - `[Operations <String[]>]`: The role management operations that are the target of the policy rule. Allowed values are: All, Activate, Deactivate, Assign, Update, Remove, Extend, Renew.
        - `[TargetObjects <IMicrosoftGraphDirectoryObject[]>]`: 
          - `[Id <String>]`: The unique identifier for an entity. Read-only.
          - `[DeletedDateTime <DateTime?>]`: Date and time when this object was deleted. Always null when the object hasn't been deleted.
    - `[IsOrganizationDefault <Boolean?>]`: This can only be set to true for a single tenant-wide policy which will apply to all scopes and roles. Set the scopeId to / and scopeType to Directory. Supports $filter (eq, ne).
    - `[LastModifiedBy <IMicrosoftGraphIdentity>]`: identity
      - `[(Any) <Object>]`: This indicates any property can be added to this object.
      - `[DisplayName <String>]`: The display name of the identity. Note that this might not always be available or up to date. For example, if a user changes their display name, the API might show the new value in a future response, but the items associated with the user won't show up as having changed when using delta.
      - `[Id <String>]`: Unique identifier for the identity.
    - `[LastModifiedDateTime <DateTime?>]`: The time when the role setting was last modified.
    - `[Rules <IMicrosoftGraphUnifiedRoleManagementPolicyRule[]>]`: The collection of rules like approval rules and expiration rules. Supports $expand.
    - `[ScopeId <String>]`: The identifier of the scope where the policy is created. Can be / for the tenant or a group ID. Required.
    - `[ScopeType <String>]`: The type of the scope where the policy is created. One of Directory, DirectoryRole, Group. Required.

  ## RELATED LINKS
  [Update-MgPolicyRoleManagementPolicyAssignment](/powershell/module/Microsoft.Graph.Identity.SignIns/Update-MgPolicyRoleManagementPolicyAssignment?view=graph-powershell-v1.0)

  ## RELATED LINKS
  [Update-MgPolicyRoleManagementPolicyAssignment](/powershell/module/Microsoft.Graph.Identity.SignIns/Update-MgPolicyRoleManagementPolicyAssignment?view=graph-powershell-v1.0)
inputs:
- name: <xref href="Microsoft.Graph.Beta.PowerShell.Models.IIdentitySignInsIdentity" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="Microsoft.Graph.Beta.PowerShell.Models.IMicrosoftGraphUnifiedRoleManagementPolicyAssignment" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.Graph.Beta.PowerShell.Models.IMicrosoftGraphUnifiedRoleManagementPolicyAssignment" data-throw-if-not-resolved="False" />
  description: ""
syntaxes:
- >-
  Update-MgBetaPolicyRoleManagementPolicyAssignment -UnifiedRoleManagementPolicyAssignmentId <String>

   [-AdditionalProperties <Hashtable>] [-Id <String>] [-Policy <IMicrosoftGraphUnifiedRoleManagementPolicy>]

   [-PolicyId <String>] [-RoleDefinitionId <String>] [-ScopeId <String>] [-ScopeType <String>] [-WhatIf]

   [-Confirm] [<CommonParameters>]
- >-
  Update-MgBetaPolicyRoleManagementPolicyAssignment -UnifiedRoleManagementPolicyAssignmentId <String>

   -BodyParameter <IMicrosoftGraphUnifiedRoleManagementPolicyAssignment> [-WhatIf] [-Confirm]

   [<CommonParameters>]
- >-
  Update-MgBetaPolicyRoleManagementPolicyAssignment -InputObject <IIdentitySignInsIdentity>

   [-AdditionalProperties <Hashtable>] [-Id <String>] [-Policy <IMicrosoftGraphUnifiedRoleManagementPolicy>]

   [-PolicyId <String>] [-RoleDefinitionId <String>] [-ScopeId <String>] [-ScopeType <String>] [-WhatIf]

   [-Confirm] [<CommonParameters>]
- >-
  Update-MgBetaPolicyRoleManagementPolicyAssignment -InputObject <IIdentitySignInsIdentity>

   -BodyParameter <IMicrosoftGraphUnifiedRoleManagementPolicyAssignment> [-WhatIf] [-Confirm]

   [<CommonParameters>]
parameters:
- type: <xref href="Hashtable" data-throw-if-not-resolved="False" />
  name: AdditionalProperties
  description: |+
    Additional Parameters

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="IMicrosoftGraphUnifiedRoleManagementPolicyAssignment" data-throw-if-not-resolved="False" />
  name: BodyParameter
  isRequired: true
  description: |+
    unifiedRoleManagementPolicyAssignment
    To construct, see NOTES section for BODYPARAMETER properties and create a hash table.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: None
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Id
  description: |+
    The unique identifier for an entity.
    Read-only.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="IIdentitySignInsIdentity" data-throw-if-not-resolved="False" />
  name: InputObject
  isRequired: true
  description: |+
    Identity Parameter
    To construct, see NOTES section for INPUTOBJECT properties and create a hash table.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="IMicrosoftGraphUnifiedRoleManagementPolicy" data-throw-if-not-resolved="False" />
  name: Policy
  description: |+
    unifiedRoleManagementPolicy
    To construct, see NOTES section for POLICY properties and create a hash table.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: PolicyId
  description: |+
    The id of the policy.
    Inherited from entity.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: RoleDefinitionId
  description: |+
    For Azure AD roles policy, it's the identifier of the role definition object where the policy applies.
    For PIM for groups membership and ownership, it's either member or owner.
    Supports $filter (eq).

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: ScopeId
  description: |+
    The identifier of the scope where the policy is assigned.
    Can be / for the tenant or a group ID.
    Required.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: ScopeType
  description: |+
    The type of the scope where the policy is assigned.
    One of Directory, DirectoryRole, Group.
    Required.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: UnifiedRoleManagementPolicyAssignmentId
  isRequired: true
  description: |+
    The unique identifier of unifiedRoleManagementPolicyAssignment

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: None
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: Microsoft.Graph.Beta.Identity.SignIns.Update-MgBetaPolicyRoleManagementPolicyAssignment
name: Update-MgBetaPolicyRoleManagementPolicyAssignment
description: |-
  Update the navigation property roleManagementPolicyAssignments in policies
metadata:
  external help file: Microsoft.Graph.Beta.Identity.SignIns-help.xml
  Module Name: Microsoft.Graph.Beta.Identity.SignIns
  online version: https://learn.microsoft.com/powershell/module/microsoft.graph.beta.identity.signins/update-mgbetapolicyrolemanagementpolicyassignment
  schema: 2.0.0
