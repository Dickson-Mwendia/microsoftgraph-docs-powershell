### YamlMime:PowershellCmdlet
summary: |-
  Create new navigation property to roleAssignments for roleManagement

  > [!NOTE]
  > To view the v1.0 release of this cmdlet, view [New-MgRoleManagementDirectoryRoleAssignment](/powershell/module/Microsoft.Graph.DeviceManagement.Enrolment/New-MgRoleManagementDirectoryRoleAssignment?view=graph-powershell-v1.0)
module: Microsoft.Graph.DeviceManagement.Enrolment
notes: |-
  ALIASES

  COMPLEX PARAMETER PROPERTIES

  To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.


  APPSCOPE `<IMicrosoftGraphAppScope>`: appScope
    - `[(Any) <Object>]`: This indicates any property can be added to this object.
    - `[Id <String>]`: The unique idenfier for an entity. Read-only.
    - `[DisplayName <String>]`: Provides the display name of the app-specific resource represented by the app scope. Provided for display purposes since appScopeId is often an immutable, non-human-readable id. Read-only.
    - `[Type <String>]`: Describes the type of app-specific resource represented by the app scope. Provided for display purposes, so a user interface can convey to the user the kind of app specific resource represented by the app scope. Read-only.

  BODYPARAMETER `<IMicrosoftGraphUnifiedRoleAssignment1>`: unifiedRoleAssignment
    - `[(Any) <Object>]`: This indicates any property can be added to this object.
    - `[Id <String>]`: The unique idenfier for an entity. Read-only.
    - `[AppScope <IMicrosoftGraphAppScope>]`: appScope
      - `[(Any) <Object>]`: This indicates any property can be added to this object.
      - `[Id <String>]`: The unique idenfier for an entity. Read-only.
      - `[DisplayName <String>]`: Provides the display name of the app-specific resource represented by the app scope. Provided for display purposes since appScopeId is often an immutable, non-human-readable id. Read-only.
      - `[Type <String>]`: Describes the type of app-specific resource represented by the app scope. Provided for display purposes, so a user interface can convey to the user the kind of app specific resource represented by the app scope. Read-only.
    - `[AppScopeId <String>]`: Identifier of the app specific scope when the assignment scope is app specific. The scope of an assignment determines the set of resources for which the principal has been granted access. Directory scopes are shared scopes stored in the directory that are understood by multiple applications. Use / for tenant-wide scope. App scopes are scopes that are defined and understood by this application only.  For the entitlement management provider, use app scopes to specify a catalog, for example /AccessPackageCatalog/beedadfe-01d5-4025-910b-84abb9369997.
    - `[Condition <String>]`: 
    - `[DirectoryScope <IMicrosoftGraphDirectoryObject>]`: directoryObject
      - `[(Any) <Object>]`: This indicates any property can be added to this object.
      - `[Id <String>]`: The unique idenfier for an entity. Read-only.
      - `[DeletedDateTime <DateTime?>]`: Date and time when this object was deleted. Always null when the object hasn't been deleted.
    - `[DirectoryScopeId <String>]`: Identifier of the directory object representing the scope of the assignment. The scope of an assignment determines the set of resources for which the principal has been granted access. Directory scopes are shared scopes stored in the directory that are understood by multiple applications. App scopes are scopes that are defined and understood by this application only.
    - `[Principal <IMicrosoftGraphDirectoryObject>]`: directoryObject
    - `[PrincipalId <String>]`: Identifier of the principal to which the assignment is granted. Supports $filter (eq operator only).
    - `[PrincipalOrganizationId <String>]`: 
    - `[ResourceScope <String>]`: The scope at which the unifiedRoleAssignment applies. This is / for service-wide. DO NOT USE. This property will be deprecated soon.
    - `[RoleDefinition <IMicrosoftGraphUnifiedRoleDefinition>]`: unifiedRoleDefinition
      - `[(Any) <Object>]`: This indicates any property can be added to this object.
      - `[Id <String>]`: The unique idenfier for an entity. Read-only.
      - `[AllowedPrincipalTypes <String>]`: allowedRolePrincipalTypes
      - `[Description <String>]`: The description for the unifiedRoleDefinition. Read-only when isBuiltIn is true.
      - `[DisplayName <String>]`: The display name for the unifiedRoleDefinition. Read-only when isBuiltIn is true. Required.  Supports $filter (eq and startsWith operators only).
      - `[InheritsPermissionsFrom <IMicrosoftGraphUnifiedRoleDefinition[]>]`: Read-only collection of role definitions that the given role definition inherits from. Only Azure AD built-in roles support this attribute.
      - `[IsBuiltIn <Boolean?>]`: Flag indicating if the unifiedRoleDefinition is part of the default set included with the product or custom. Read-only.  Supports $filter (eq operator only).
      - `[IsEnabled <Boolean?>]`: Flag indicating if the role is enabled for assignment. If false the role is not available for assignment. Read-only when isBuiltIn is true.
      - `[ResourceScopes <String[]>]`: List of scopes permissions granted by the role definition apply to. Currently only / is supported. Read-only when isBuiltIn is true. DO NOT USE. This will be deprecated soon. Attach scope to role assignment
      - `[RolePermissions <IMicrosoftGraphUnifiedRolePermission[]>]`: List of permissions included in the role. Read-only when isBuiltIn is true. Required.
        - `[AllowedResourceActions <String[]>]`: Set of tasks that can be performed on a resource. Required.
        - `[Condition <String>]`: Optional constraints that must be met for the permission to be effective. Not supported for custom roles.
        - `[ExcludedResourceActions <String[]>]`: Set of tasks that may not be performed on a resource. Not yet supported.
      - `[TemplateId <String>]`: Custom template identifier that can be set when isBuiltIn is false. This identifier is typically used if one needs an identifier to be the same across different directories. Read-only when isBuiltIn is true.
      - `[Version <String>]`: Indicates version of the unifiedRoleDefinition. Read-only when isBuiltIn is true.
    - `[RoleDefinitionId <String>]`: Identifier of the unifiedRoleDefinition the assignment is for. Read-only. Supports $filter (eq operator only).

  DIRECTORYSCOPE `<IMicrosoftGraphDirectoryObject>`: directoryObject
    - `[(Any) <Object>]`: This indicates any property can be added to this object.
    - `[Id <String>]`: The unique idenfier for an entity. Read-only.
    - `[DeletedDateTime <DateTime?>]`: Date and time when this object was deleted. Always null when the object hasn't been deleted.

  PRINCIPAL `<IMicrosoftGraphDirectoryObject>`: directoryObject
    - `[(Any) <Object>]`: This indicates any property can be added to this object.
    - `[Id <String>]`: The unique idenfier for an entity. Read-only.
    - `[DeletedDateTime <DateTime?>]`: Date and time when this object was deleted. Always null when the object hasn't been deleted.

  ROLEDEFINITION `<IMicrosoftGraphUnifiedRoleDefinition>`: unifiedRoleDefinition
    - `[(Any) <Object>]`: This indicates any property can be added to this object.
    - `[Id <String>]`: The unique idenfier for an entity. Read-only.
    - `[AllowedPrincipalTypes <String>]`: allowedRolePrincipalTypes
    - `[Description <String>]`: The description for the unifiedRoleDefinition. Read-only when isBuiltIn is true.
    - `[DisplayName <String>]`: The display name for the unifiedRoleDefinition. Read-only when isBuiltIn is true. Required.  Supports $filter (eq and startsWith operators only).
    - `[InheritsPermissionsFrom <IMicrosoftGraphUnifiedRoleDefinition[]>]`: Read-only collection of role definitions that the given role definition inherits from. Only Azure AD built-in roles support this attribute.
    - `[IsBuiltIn <Boolean?>]`: Flag indicating if the unifiedRoleDefinition is part of the default set included with the product or custom. Read-only.  Supports $filter (eq operator only).
    - `[IsEnabled <Boolean?>]`: Flag indicating if the role is enabled for assignment. If false the role is not available for assignment. Read-only when isBuiltIn is true.
    - `[ResourceScopes <String[]>]`: List of scopes permissions granted by the role definition apply to. Currently only / is supported. Read-only when isBuiltIn is true. DO NOT USE. This will be deprecated soon. Attach scope to role assignment
    - `[RolePermissions <IMicrosoftGraphUnifiedRolePermission[]>]`: List of permissions included in the role. Read-only when isBuiltIn is true. Required.
      - `[AllowedResourceActions <String[]>]`: Set of tasks that can be performed on a resource. Required.
      - `[Condition <String>]`: Optional constraints that must be met for the permission to be effective. Not supported for custom roles.
      - `[ExcludedResourceActions <String[]>]`: Set of tasks that may not be performed on a resource. Not yet supported.
    - `[TemplateId <String>]`: Custom template identifier that can be set when isBuiltIn is false. This identifier is typically used if one needs an identifier to be the same across different directories. Read-only when isBuiltIn is true.
    - `[Version <String>]`: Indicates version of the unifiedRoleDefinition. Read-only when isBuiltIn is true.
inputs:
- name: <xref href="Microsoft.Graph.PowerShell.Models.IMicrosoftGraphUnifiedRoleAssignment1" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.Graph.PowerShell.Models.IMicrosoftGraphUnifiedRoleAssignment1" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: New-MgRoleManagementDirectoryRoleAssignment
  href: /powershell/module/Microsoft.Graph.DeviceManagement.Enrolment/New-MgRoleManagementDirectoryRoleAssignment?view=graph-powershell-v1.0
syntaxes:
- >-
  New-MgRoleManagementDirectoryRoleAssignment [-AdditionalProperties <Hashtable>]

   [-AppScope <IMicrosoftGraphAppScope>] [-AppScopeId <String>] [-Condition <String>]

   [-DirectoryScope <IMicrosoftGraphDirectoryObject>] [-DirectoryScopeId <String>] [-Id <String>]

   [-Principal <IMicrosoftGraphDirectoryObject>] [-PrincipalId <String>] [-PrincipalOrganizationId <String>]

   [-ResourceScope <String>] [-RoleDefinition <IMicrosoftGraphUnifiedRoleDefinition>]

   [-RoleDefinitionId <String>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  New-MgRoleManagementDirectoryRoleAssignment -BodyParameter <IMicrosoftGraphUnifiedRoleAssignment1> [-WhatIf]

   [-Confirm] [<CommonParameters>]
examples:
- title: 'Example 1: Using the New-MgRoleManagementDirectoryRoleAssignment Cmdlet'
  code: |-
    Import-Module Microsoft.Graph.DeviceManagement.Enrolment
    $params = @{
    	"@odata.type" = "#microsoft.graph.unifiedRoleAssignment"
    	RoleDefinitionId = "58a13ea3-c632-46ae-9ee0-9c0d43cd7f3d"
    	PrincipalId = "f8ca5a85-489a-49a0-b555-0a6d81e56f0d"
    	DirectoryScopeId = "/attributeSets/Engineering"
    }
    New-MgRoleManagementDirectoryRoleAssignment -BodyParameter $params
  description: |-
    This example shows how to use the New-MgRoleManagementDirectoryRoleAssignment Cmdlet.
    To learn about permissions for this resource, see the [permissions reference](/graph/permissions-reference).
  summary: ""
- title: 'Example 2: Using the New-MgRoleManagementDirectoryRoleAssignment Cmdlet'
  code: |-
    Import-Module Microsoft.Graph.DeviceManagement.Enrolment
    $params = @{
    	"@odata.type" = "#microsoft.graph.unifiedRoleAssignment"
    	RoleDefinitionId = "c2cf284d-6c41-4e6b-afac-4b80928c9034"
    	PrincipalId = "f8ca5a85-489a-49a0-b555-0a6d81e56f0d"
    	DirectoryScopeId = "/"
    }
    New-MgRoleManagementDirectoryRoleAssignment -BodyParameter $params
  description: |-
    This example shows how to use the New-MgRoleManagementDirectoryRoleAssignment Cmdlet.
    To learn about permissions for this resource, see the [permissions reference](/graph/permissions-reference).
  summary: ""
- title: 'Example 3: Using the New-MgRoleManagementDirectoryRoleAssignment Cmdlet'
  code: |-
    Import-Module Microsoft.Graph.DeviceManagement.Enrolment
    $params = @{
    	"@odata.type" = "#microsoft.graph.unifiedRoleAssignment"
    	RoleDefinitionId = "fe930be7-5e62-47db-91af-98c3a49a38b1"
    	PrincipalId = "f8ca5a85-489a-49a0-b555-0a6d81e56f0d"
    	DirectoryScopeId = "/administrativeUnits/5d107bba-d8e2-4e13-b6ae-884be90e5d1a"
    }
    New-MgRoleManagementDirectoryRoleAssignment -BodyParameter $params
  description: |-
    This example shows how to use the New-MgRoleManagementDirectoryRoleAssignment Cmdlet.
    To learn about permissions for this resource, see the [permissions reference](/graph/permissions-reference).
  summary: ""
parameters:
- type: <xref href="Hashtable" data-throw-if-not-resolved="False" />
  name: AdditionalProperties
  description: |+
    Additional Parameters

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="IMicrosoftGraphAppScope" data-throw-if-not-resolved="False" />
  name: AppScope
  description: |+
    appScope
    To construct, please use Get-Help -Online and see NOTES section for APPSCOPE properties and create a hash table.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: AppScopeId
  description: |+
    Identifier of the app specific scope when the assignment scope is app specific.
    The scope of an assignment determines the set of resources for which the principal has been granted access.
    Directory scopes are shared scopes stored in the directory that are understood by multiple applications.
    Use / for tenant-wide scope.
    App scopes are scopes that are defined and understood by this application only.
    For the entitlement management provider, use app scopes to specify a catalog, for example /AccessPackageCatalog/beedadfe-01d5-4025-910b-84abb9369997.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="IMicrosoftGraphUnifiedRoleAssignment1" data-throw-if-not-resolved="False" />
  name: BodyParameter
  isRequired: true
  description: |+
    unifiedRoleAssignment
    To construct, please use Get-Help -Online and see NOTES section for BODYPARAMETER properties and create a hash table.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Condition
  description: |+
    .

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: None
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="IMicrosoftGraphDirectoryObject" data-throw-if-not-resolved="False" />
  name: DirectoryScope
  description: |+
    directoryObject
    To construct, please use Get-Help -Online and see NOTES section for DIRECTORYSCOPE properties and create a hash table.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: DirectoryScopeId
  description: |+
    Identifier of the directory object representing the scope of the assignment.
    The scope of an assignment determines the set of resources for which the principal has been granted access.
    Directory scopes are shared scopes stored in the directory that are understood by multiple applications.
    App scopes are scopes that are defined and understood by this application only.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Id
  description: |+
    The unique idenfier for an entity.
    Read-only.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="IMicrosoftGraphDirectoryObject" data-throw-if-not-resolved="False" />
  name: Principal
  description: |+
    directoryObject
    To construct, please use Get-Help -Online and see NOTES section for PRINCIPAL properties and create a hash table.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: PrincipalId
  description: |+
    Identifier of the principal to which the assignment is granted.
    Supports $filter (eq operator only).

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: PrincipalOrganizationId
  description: |+
    .

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: ResourceScope
  description: |+
    The scope at which the unifiedRoleAssignment applies.
    This is / for service-wide.
    DO NOT USE.
    This property will be deprecated soon.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="IMicrosoftGraphUnifiedRoleDefinition" data-throw-if-not-resolved="False" />
  name: RoleDefinition
  description: |+
    unifiedRoleDefinition
    To construct, please use Get-Help -Online and see NOTES section for ROLEDEFINITION properties and create a hash table.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: RoleDefinitionId
  description: |+
    Identifier of the unifiedRoleDefinition the assignment is for.
    Read-only.
    Supports $filter (eq operator only).

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: None
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: Microsoft.Graph.DeviceManagement.Enrolment.New-MgRoleManagementDirectoryRoleAssignment
name: New-MgRoleManagementDirectoryRoleAssignment
description: |-
  Create new navigation property to roleAssignments for roleManagement
metadata:
  external help file: Microsoft.Graph.DeviceManagement.Enrolment-help.xml
  Module Name: Microsoft.Graph.DeviceManagement.Enrolment
  online version: https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.devicemanagement.enrolment/new-mgrolemanagementdirectoryroleassignment
  schema: 2.0.0
