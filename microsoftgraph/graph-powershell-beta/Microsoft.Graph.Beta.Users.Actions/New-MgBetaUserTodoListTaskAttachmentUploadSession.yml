### YamlMime:PowershellCmdlet
summary: |-
  Create an upload session to iteratively upload ranges of a file as an attachment to a todoTask.
  As part of the response, this action returns an upload URL that you can use in subsequent sequential `PUT` queries.
  The request headers for each `PUT` operation let you specify the exact range of bytes to be uploaded.
  This allows the transfer to be resumed, in case the network connection is dropped during the upload.
  The following are the steps to attach a file to a Microsoft To Do task using an upload session: For an example that describes the end-to-end attachment process, see attach files to a To Do task.

  > [!NOTE]
  > To view the v1.0 release of this cmdlet, view [New-MgUserTodoListTaskAttachmentUploadSession](/powershell/module/Microsoft.Graph.Users.Actions/New-MgUserTodoListTaskAttachmentUploadSession?view=graph-powershell-v1.0)
module: Microsoft.Graph.Beta.Users.Actions
notes: |-
  ALIASES

  COMPLEX PARAMETER PROPERTIES

  To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.


  `ATTACHMENTINFO <IMicrosoftGraphAttachmentInfo>`: attachmentInfo
    - `[(Any) <Object>]`: This indicates any property can be added to this object.
    - `[AttachmentType <String>]`: attachmentType
    - `[ContentType <String>]`: The nature of the data in the attachment. Optional.
    - `[Name <String>]`: The display name of the attachment. This can be a descriptive string and does not have to be the actual file name. Required.
    - `[Size <Int64?>]`: The length of the attachment in bytes. Required.

  `BODYPARAMETER <IPaths4768B9UsersUserIdTodoListsTodotasklistIdTasksTodotaskIdAttachmentsMicrosoftGraphCreateuploadsessionPostRequestbodyContentApplicationJsonSchema>`: .
    - `[(Any) <Object>]`: This indicates any property can be added to this object.
    - `[AttachmentInfo <IMicrosoftGraphAttachmentInfo>]`: attachmentInfo
      - `[(Any) <Object>]`: This indicates any property can be added to this object.
      - `[AttachmentType <String>]`: attachmentType
      - `[ContentType <String>]`: The nature of the data in the attachment. Optional.
      - `[Name <String>]`: The display name of the attachment. This can be a descriptive string and does not have to be the actual file name. Required.
      - `[Size <Int64?>]`: The length of the attachment in bytes. Required.

  `INPUTOBJECT <IUsersActionsIdentity>`: Identity Parameter
    - `[AccessReviewInstanceId <String>]`: The unique identifier of accessReviewInstance
    - `[AccessReviewStageId <String>]`: The unique identifier of accessReviewStage
    - `[AppLogCollectionRequestId <String>]`: The unique identifier of appLogCollectionRequest
    - `[AuthenticationMethodId <String>]`: The unique identifier of authenticationMethod
    - `[CalendarId <String>]`: The unique identifier of calendar
    - `[ChatId <String>]`: The unique identifier of chat
    - `[ChatMessageId <String>]`: The unique identifier of chatMessage
    - `[ChatMessageId1 <String>]`: The unique identifier of chatMessage
    - `[CloudPcId <String>]`: The unique identifier of cloudPC
    - `[ContentTypeId <String>]`: The unique identifier of contentType
    - `[DeviceEnrollmentConfigurationId <String>]`: The unique identifier of deviceEnrollmentConfiguration
    - `[DeviceId <String>]`: The unique identifier of device
    - `[DeviceLogCollectionResponseId <String>]`: The unique identifier of deviceLogCollectionResponse
    - `[DocumentSetVersionId <String>]`: The unique identifier of documentSetVersion
    - `[DriveId <String>]`: The unique identifier of drive
    - `[DriveItemId <String>]`: The unique identifier of driveItem
    - `[DriveItemVersionId <String>]`: The unique identifier of driveItemVersion
    - `[EventId <String>]`: The unique identifier of event
    - `[EventId1 <String>]`: The unique identifier of event
    - `[ListItemId <String>]`: The unique identifier of listItem
    - `[ListItemVersionId <String>]`: The unique identifier of listItemVersion
    - `[MailFolderId <String>]`: The unique identifier of mailFolder
    - `[MailFolderId1 <String>]`: The unique identifier of mailFolder
    - `[ManagedDeviceId <String>]`: The unique identifier of managedDevice
    - `[MessageId <String>]`: The unique identifier of message
    - `[MobileAppTroubleshootingEventId <String>]`: The unique identifier of mobileAppTroubleshootingEvent
    - `[NotebookId <String>]`: The unique identifier of notebook
    - `[OnenotePageId <String>]`: The unique identifier of onenotePage
    - `[OnenoteSectionId <String>]`: The unique identifier of onenoteSection
    - `[OutlookTaskFolderId <String>]`: The unique identifier of outlookTaskFolder
    - `[OutlookTaskGroupId <String>]`: The unique identifier of outlookTaskGroup
    - `[OutlookTaskId <String>]`: The unique identifier of outlookTask
    - `[PermissionId <String>]`: The unique identifier of permission
    - `[ResourceSpecificPermissionGrantId <String>]`: The unique identifier of resourceSpecificPermissionGrant
    - `[SensitivityLabelId <String>]`: The unique identifier of sensitivityLabel
    - `[SubscriptionId <String>]`: The unique identifier of subscription
    - `[TeamsAppInstallationId <String>]`: The unique identifier of teamsAppInstallation
    - `[TodoTaskId <String>]`: The unique identifier of todoTask
    - `[TodoTaskListId <String>]`: The unique identifier of todoTaskList
    - `[UserId <String>]`: The unique identifier of user
inputs:
- name: <xref href="Microsoft.Graph.Beta.PowerShell.Models.IPaths4768B9UsersUserIdTodoListsTodotasklistIdTasksTodotaskIdAttachmentsMicrosoftGraphCreateuploadsessionPostRequestbodyContentApplicationJsonSchema" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="Microsoft.Graph.Beta.PowerShell.Models.IUsersActionsIdentity" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.Graph.Beta.PowerShell.Models.IMicrosoftGraphUploadSession" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: New-MgUserTodoListTaskAttachmentUploadSession
  href: /powershell/module/Microsoft.Graph.Users.Actions/New-MgUserTodoListTaskAttachmentUploadSession?view=graph-powershell-v1.0
syntaxes:
- >-
  New-MgBetaUserTodoListTaskAttachmentUploadSession -TodoTaskId <String> -TodoTaskListId <String>

   -UserId <String> [-AdditionalProperties <Hashtable>] [-AttachmentInfo <IMicrosoftGraphAttachmentInfo>]

   [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  New-MgBetaUserTodoListTaskAttachmentUploadSession -TodoTaskId <String> -TodoTaskListId <String>

   -UserId <String>

   -BodyParameter <IPaths4768B9UsersUserIdTodoListsTodotasklistIdTasksTodotaskIdAttachmentsMicrosoftGraphCreateuploadsessionPostRequestbodyContentApplicationJsonSchema>

   [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  New-MgBetaUserTodoListTaskAttachmentUploadSession -InputObject <IUsersActionsIdentity>

   [-AdditionalProperties <Hashtable>] [-AttachmentInfo <IMicrosoftGraphAttachmentInfo>] [-WhatIf] [-Confirm]

   [<CommonParameters>]
- >-
  New-MgBetaUserTodoListTaskAttachmentUploadSession -InputObject <IUsersActionsIdentity>

   -BodyParameter <IPaths4768B9UsersUserIdTodoListsTodotasklistIdTasksTodotaskIdAttachmentsMicrosoftGraphCreateuploadsessionPostRequestbodyContentApplicationJsonSchema>

   [-WhatIf] [-Confirm] [<CommonParameters>]
examples:
- title: 'Example 1: Using the New-MgBetaUserTodoListTaskAttachmentUploadSession Cmdlet'
  code: |-
    Import-Module Microsoft.Graph.Beta.Users.Actions
    $params = @{
    	AttachmentInfo = @{
    		AttachmentType = "file"
    		Name = "flower"
    		Size = 3483322
    	}
    }
    # A UPN can also be used as -UserId.
    New-MgBetaUserTodoListTaskAttachmentUploadSession -UserId $userId -TodoTaskListId $todoTaskListId -TodoTaskId $todoTaskId -BodyParameter $params
  description: |-
    This example shows how to use the New-MgBetaUserTodoListTaskAttachmentUploadSession Cmdlet.
    To learn about permissions for this resource, see the [permissions reference](/graph/permissions-reference).
  summary: ""
parameters:
- type: <xref href="Hashtable" data-throw-if-not-resolved="False" />
  name: AdditionalProperties
  description: |+
    Additional Parameters

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="IMicrosoftGraphAttachmentInfo" data-throw-if-not-resolved="False" />
  name: AttachmentInfo
  description: |+
    attachmentInfo
    To construct, see NOTES section for ATTACHMENTINFO properties and create a hash table.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="IPaths4768B9UsersUserIdTodoListsTodotasklistIdTasksTodotaskIdAttachmentsMicrosoftGraphCreateuploadsessionPostRequestbodyContentApplicationJsonSchema" data-throw-if-not-resolved="False" />
  name: BodyParameter
  isRequired: true
  description: |+
    .
    To construct, see NOTES section for BODYPARAMETER properties and create a hash table.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: None
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="IUsersActionsIdentity" data-throw-if-not-resolved="False" />
  name: InputObject
  isRequired: true
  description: |+
    Identity Parameter
    To construct, see NOTES section for INPUTOBJECT properties and create a hash table.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: TodoTaskId
  isRequired: true
  description: |+
    The unique identifier of todoTask

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: TodoTaskListId
  isRequired: true
  description: |+
    The unique identifier of todoTaskList

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: UserId
  isRequired: true
  description: |+
    The unique identifier of user

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: None
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: Microsoft.Graph.Beta.Users.Actions.New-MgBetaUserTodoListTaskAttachmentUploadSession
name: New-MgBetaUserTodoListTaskAttachmentUploadSession
description: |-
  Create an upload session to iteratively upload ranges of a file as an attachment to a todoTask.
  As part of the response, this action returns an upload URL that you can use in subsequent sequential `PUT` queries.
  The request headers for each `PUT` operation let you specify the exact range of bytes to be uploaded.
  This allows the transfer to be resumed, in case the network connection is dropped during the upload.
  The following are the steps to attach a file to a Microsoft To Do task using an upload session: For an example that describes the end-to-end attachment process, see attach files to a To Do task.
metadata:
  external help file: Microsoft.Graph.Beta.Users.Actions-help.xml
  Module Name: Microsoft.Graph.Beta.Users.Actions
  online version: https://learn.microsoft.com/powershell/module/microsoft.graph.beta.users.actions/new-mgbetausertodolisttaskattachmentuploadsession
  schema: 2.0.0
