### YamlMime:PowershellCmdlet
summary: |-
  Update the navigation property photo in users

  > [!NOTE]
  > To view the v1.0 release of this cmdlet, view [Update-MgUserPhoto](/powershell/module/Microsoft.Graph.Users/Update-MgUserPhoto?view=graph-powershell-v1.0)
module: Microsoft.Graph.Beta.Users
notes: |-
  ALIASES

  COMPLEX PARAMETER PROPERTIES

  To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.


  `BODYPARAMETER <IMicrosoftGraphProfilePhoto>`: profilePhoto
    - `[(Any) <Object>]`: This indicates any property can be added to this object.
    - `[Id <String>]`: The unique identifier for an entity. Read-only.
    - `[Height <Int32?>]`: The height of the photo. Read-only.
    - `[Width <Int32?>]`: The width of the photo. Read-only.

  `INPUTOBJECT <IUsersIdentity>`: Identity Parameter
    - `[AttachmentBaseId <String>]`: The unique identifier of attachmentBase
    - `[AttachmentId <String>]`: The unique identifier of attachment
    - `[AttachmentSessionId <String>]`: The unique identifier of attachmentSession
    - `[ChecklistItemId <String>]`: The unique identifier of checklistItem
    - `[DirectoryObjectId <String>]`: The unique identifier of directoryObject
    - `[ExtensionId <String>]`: The unique identifier of extension
    - `[LicenseDetailsId <String>]`: The unique identifier of licenseDetails
    - `[LinkedResourceId <String>]`: The unique identifier of linkedResource
    - `[NotificationId <String>]`: The unique identifier of notification
    - `[OAuth2PermissionGrantId <String>]`: The unique identifier of oAuth2PermissionGrant
    - `[OutlookCategoryId <String>]`: The unique identifier of outlookCategory
    - `[OutlookTaskFolderId <String>]`: The unique identifier of outlookTaskFolder
    - `[OutlookTaskGroupId <String>]`: The unique identifier of outlookTaskGroup
    - `[OutlookTaskId <String>]`: The unique identifier of outlookTask
    - `[ProfilePhotoId <String>]`: The unique identifier of profilePhoto
    - `[ServicePrincipalId <String>]`: The unique identifier of servicePrincipal
    - `[SharedInsightId <String>]`: The unique identifier of sharedInsight
    - `[TodoTaskId <String>]`: The unique identifier of todoTask
    - `[TodoTaskListId <String>]`: The unique identifier of todoTaskList
    - `[TrendingId <String>]`: The unique identifier of trending
    - `[UsedInsightId <String>]`: The unique identifier of usedInsight
    - `[UserId <String>]`: The unique identifier of user
inputs:
- name: <xref href="Microsoft.Graph.Beta.PowerShell.Models.IMicrosoftGraphProfilePhoto" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="Microsoft.Graph.Beta.PowerShell.Models.IUsersIdentity" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.Graph.Beta.PowerShell.Models.IMicrosoftGraphProfilePhoto" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: Update-MgUserPhoto
  href: /powershell/module/Microsoft.Graph.Users/Update-MgUserPhoto?view=graph-powershell-v1.0
syntaxes:
- >-
  Update-MgBetaUserPhoto -UserId <String> [-AdditionalProperties <Hashtable>] [-Height <Int32>] [-Id <String>]

   [-Width <Int32>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Update-MgBetaUserPhoto -UserId <String> -BodyParameter <IMicrosoftGraphProfilePhoto> [-WhatIf] [-Confirm]

   [<CommonParameters>]
- >-
  Update-MgBetaUserPhoto -InputObject <IUsersIdentity> [-AdditionalProperties <Hashtable>] [-Height <Int32>]

   [-Id <String>] [-Width <Int32>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Update-MgBetaUserPhoto -InputObject <IUsersIdentity> -BodyParameter <IMicrosoftGraphProfilePhoto> [-WhatIf]

   [-Confirm] [<CommonParameters>]
parameters:
- type: <xref href="Hashtable" data-throw-if-not-resolved="False" />
  name: AdditionalProperties
  description: |+
    Additional Parameters

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="IMicrosoftGraphProfilePhoto" data-throw-if-not-resolved="False" />
  name: BodyParameter
  isRequired: true
  description: |+
    profilePhoto
    To construct, see NOTES section for BODYPARAMETER properties and create a hash table.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: None
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: Height
  description: |+
    The height of the photo.
    Read-only.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Id
  description: |+
    The unique identifier for an entity.
    Read-only.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="IUsersIdentity" data-throw-if-not-resolved="False" />
  name: InputObject
  isRequired: true
  description: |+
    Identity Parameter
    To construct, see NOTES section for INPUTOBJECT properties and create a hash table.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: UserId
  isRequired: true
  description: |+
    The unique identifier of user

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: None
  position: Named
  aliases: wi
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: Width
  description: |+
    The width of the photo.
    Read-only.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
uid: Microsoft.Graph.Beta.Users.Update-MgBetaUserPhoto
name: Update-MgBetaUserPhoto
description: |-
  Update the navigation property photo in users
metadata:
  external help file: Microsoft.Graph.Beta.Users-help.xml
  Module Name: Microsoft.Graph.Beta.Users
  online version: https://learn.microsoft.com/powershell/module/microsoft.graph.beta.users/update-mgbetauserphoto
  schema: 2.0.0
