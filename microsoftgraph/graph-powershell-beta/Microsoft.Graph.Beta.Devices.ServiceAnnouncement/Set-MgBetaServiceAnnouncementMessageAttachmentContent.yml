### YamlMime:PowershellCmdlet
summary: |-
  The attachment content.

  > [!NOTE]
  > To view the v1.0 release of this cmdlet, view [Set-MgServiceAnnouncementMessageAttachmentContent](/powershell/module/Microsoft.Graph.Devices.ServiceAnnouncement/Set-MgServiceAnnouncementMessageAttachmentContent?view=graph-powershell-v1.0)
module: Microsoft.Graph.Beta.Devices.ServiceAnnouncement
notes: |-
  ALIASES

  COMPLEX PARAMETER PROPERTIES

  To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.


  `INPUTOBJECT <IDevicesServiceAnnouncementIdentity>`: Identity Parameter
    - `[ServiceAnnouncementAttachmentId <String>]`: The unique identifier of serviceAnnouncementAttachment
    - `[ServiceHealthId <String>]`: The unique identifier of serviceHealth
    - `[ServiceHealthIssueId <String>]`: The unique identifier of serviceHealthIssue
    - `[ServiceUpdateMessageId <String>]`: The unique identifier of serviceUpdateMessage
inputs:
- name: <xref href="Microsoft.Graph.Beta.PowerShell.Models.IDevicesServiceAnnouncementIdentity" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="System.IO.Stream" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.Graph.Beta.PowerShell.Models.IMicrosoftGraphServiceAnnouncementAttachment" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: Set-MgServiceAnnouncementMessageAttachmentContent
  href: /powershell/module/Microsoft.Graph.Devices.ServiceAnnouncement/Set-MgServiceAnnouncementMessageAttachmentContent?view=graph-powershell-v1.0
syntaxes:
- >-
  Set-MgBetaServiceAnnouncementMessageAttachmentContent -ServiceAnnouncementAttachmentId <String>

   -ServiceUpdateMessageId <String> [-Data <Stream>] -InFile <String> [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Set-MgBetaServiceAnnouncementMessageAttachmentContent -InputObject <IDevicesServiceAnnouncementIdentity>

   [-Data <Stream>] -InFile <String> [-WhatIf] [-Confirm] [<CommonParameters>]
examples:
- title: 'Example 1: Get all attachments of a message in a collection'
  code: |-
    Import-Module Microsoft.Graph.Beta.Devices.ServiceAnnouncement

    Get-MgBetaServiceAnnouncementMessageAttachment -ServiceUpdateMessageId $serviceUpdateMessageId
  description: |-
    This example shows how to use the Set-MgBetaBetaServiceAnnouncementMessageAttachmentContent Cmdlet.

    To learn about permissions for this resource, see the [permissions reference](/graph/permissions-reference).
  summary: ""
- title: 'Example 2: Get a zip file of all attachments in stream for a message'
  code: |-
    Import-Module Microsoft.Graph.Beta.Devices.ServiceAnnouncement

    Get-MgBetaServiceAnnouncementMessageAttachmentArchive -ServiceUpdateMessageId $serviceUpdateMessageId
  description: |-
    This example shows how to use the Set-MgBetaBetaServiceAnnouncementMessageAttachmentContent Cmdlet.

    To learn about permissions for this resource, see the [permissions reference](/graph/permissions-reference).
  summary: ""
parameters:
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: None
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="Stream" data-throw-if-not-resolved="False" />
  name: Data
  description: |+
    .

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: InFile
  isRequired: true
  description: |+
    The path to the file to upload.
    This should include a path and file name.
    If you omit the path, the current location will be used.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="IDevicesServiceAnnouncementIdentity" data-throw-if-not-resolved="False" />
  name: InputObject
  isRequired: true
  description: |+
    Identity Parameter
    To construct, see NOTES section for INPUTOBJECT properties and create a hash table.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: ServiceAnnouncementAttachmentId
  isRequired: true
  description: |+
    The unique identifier of serviceAnnouncementAttachment

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: ServiceUpdateMessageId
  isRequired: true
  description: |+
    The unique identifier of serviceUpdateMessage

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: None
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: Microsoft.Graph.Beta.Devices.ServiceAnnouncement.Set-MgBetaServiceAnnouncementMessageAttachmentContent
name: Set-MgBetaServiceAnnouncementMessageAttachmentContent
description: |-
  The attachment content.
metadata:
  external help file: Microsoft.Graph.Beta.Devices.ServiceAnnouncement-help.xml
  Module Name: Microsoft.Graph.Beta.Devices.ServiceAnnouncement
  online version: https://learn.microsoft.com/powershell/module/microsoft.graph.beta.devices.serviceannouncement/set-mgbetaserviceannouncementmessageattachmentcontent
  schema: 2.0.0
