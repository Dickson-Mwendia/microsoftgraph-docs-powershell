### YamlMime:PowershellCmdlet
summary: |-
  Get the properties and relationships of a group object.
  This operation returns by default only a subset of all the available properties, as noted in the Properties section.
  To get properties that are _not_ returned by default, specify them in a `$select` OData query option.
  The **hasMembersWithLicenseErrors** and **isArchived** properties are an exception and are not returned in the `$select` query.
  Because the **group** resource supports extensions, you can also use the `GET` operation to get custom properties and extension data in a **group** instance.

  > [!NOTE]
  > To view the v1.0 release of this cmdlet, view [Get-MgGroup](/powershell/module/Microsoft.Graph.Groups/Get-MgGroup?view=graph-powershell-v1.0)
module: Microsoft.Graph.Beta.Groups
notes: |-
  ALIASES

  COMPLEX PARAMETER PROPERTIES

  To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.


  `INPUTOBJECT <IGroupsIdentity>`: Identity Parameter
    - `[AttachmentId <String>]`: The unique identifier of attachment
    - `[ContentTypeId <String>]`: The unique identifier of contentType
    - `[ConversationId <String>]`: The unique identifier of conversation
    - `[ConversationThreadId <String>]`: The unique identifier of conversationThread
    - `[DirectoryObjectId <String>]`: The unique identifier of directoryObject
    - `[DirectorySettingId <String>]`: The unique identifier of directorySetting
    - `[DocumentSetVersionId <String>]`: The unique identifier of documentSetVersion
    - `[DriveId <String>]`: The unique identifier of drive
    - `[DriveItemId <String>]`: The unique identifier of driveItem
    - `[DriveItemVersionId <String>]`: The unique identifier of driveItemVersion
    - `[EndDateTime <String>]`: Usage: endDateTime='{endDateTime}'
    - `[EndpointId <String>]`: The unique identifier of endpoint
    - `[EventId <String>]`: The unique identifier of event
    - `[ExtensionId <String>]`: The unique identifier of extension
    - `[GroupId <String>]`: The unique identifier of group
    - `[GroupLifecyclePolicyId <String>]`: The unique identifier of groupLifecyclePolicy
    - `[HorizontalSectionColumnId <String>]`: The unique identifier of horizontalSectionColumn
    - `[HorizontalSectionId <String>]`: The unique identifier of horizontalSection
    - `[IncludePersonalNotebooks <Boolean?>]`: Usage: includePersonalNotebooks={includePersonalNotebooks}
    - `[Interval <String>]`: Usage: interval='{interval}'
    - `[ListId <String>]`: The unique identifier of list
    - `[ListItemId <String>]`: The unique identifier of listItem
    - `[ListItemVersionId <String>]`: The unique identifier of listItemVersion
    - `[MentionId <String>]`: The unique identifier of mention
    - `[NotebookId <String>]`: The unique identifier of notebook
    - `[OnenotePageId <String>]`: The unique identifier of onenotePage
    - `[OnenoteSectionId <String>]`: The unique identifier of onenoteSection
    - `[Path <String>]`: Usage: path='{path}'
    - `[PermissionId <String>]`: The unique identifier of permission
    - `[PlannerBucketId <String>]`: The unique identifier of plannerBucket
    - `[PlannerPlanId <String>]`: The unique identifier of plannerPlan
    - `[PostId <String>]`: The unique identifier of post
    - `[ProfilePhotoId <String>]`: The unique identifier of profilePhoto
    - `[Q <String>]`: Usage: q='{q}'
    - `[ResourceSpecificPermissionGrantId <String>]`: The unique identifier of resourceSpecificPermissionGrant
    - `[SensitivityLabelId <String>]`: The unique identifier of sensitivityLabel
    - `[SiteId <String>]`: The unique identifier of site
    - `[SitePageId <String>]`: The unique identifier of sitePage
    - `[StartDateTime <String>]`: Usage: startDateTime='{startDateTime}'
    - `[SubscriptionId <String>]`: The unique identifier of subscription
    - `[Token <String>]`: Usage: token='{token}'
    - `[User <String>]`: Usage: User='{User}'
    - `[UserId <String>]`: The unique identifier of user
    - `[WebPartId <String>]`: The unique identifier of webPart
inputs:
- name: <xref href="Microsoft.Graph.Beta.PowerShell.Models.IGroupsIdentity" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.Graph.Beta.PowerShell.Models.IMicrosoftGraphGroup" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: Get-MgGroup
  href: /powershell/module/Microsoft.Graph.Groups/Get-MgGroup?view=graph-powershell-v1.0
syntaxes:
- >-
  Get-MgBetaGroup [-ExpandProperty <String[]>] [-Property <String[]>] [-Filter <String>] [-Search <String>]

   [-Skip <Int32>] [-Sort <String[]>] [-Top <Int32>] [-ConsistencyLevel <String>] [-PageSize <Int32>] [-All]

   [-CountVariable <String>] [<CommonParameters>]
- Get-MgBetaGroup -GroupId <String> [-ExpandProperty <String[]>] [-Property <String[]>] [<CommonParameters>]
- >-
  Get-MgBetaGroup -InputObject <IGroupsIdentity> [-ExpandProperty <String[]>] [-Property <String[]>]

   [<CommonParameters>]
examples:
- title: 'Example 1: Get a list of groups'
  code: |-
    Connect-MgBetaGraph -Scopes 'Group.Read.All'
    Get-MgBetaGroup | 
      Format-List Id, DisplayName, Description, GroupTypes

    Id          : 0a1c8435-40a3-4a72-8586-e916c12b613a
    DisplayName : Marketing
    Description : A group to synthesize, analyze, and synchronize our marketing efforts.
    GroupTypes  : {Unified}

    Id          : a8fbb1b5-b994-4835-9183-c7421d149132
    DisplayName : Business Development
    Description : Welcome to the BizDev team.
    GroupTypes  : {Unified}
  description: |-
    This examples retrieves a list of groups.

    To learn about other permissions for this resource, see the [permissions reference](/graph/permissions-reference).

    To consent to any of these permissions run `Connect-MgBetaGraph -Scopes Permission`. For example, `Connect-MgBetaGraph -Scopes GroupMember.Read.All, Group.Read.All`.
  summary: ""
- title: 'Example 2: Get a group by the display name'
  code: |-
    Connect-MgBetaGraph -Scopes 'Group.Read.All'
    Get-MgBetaGroup -Filter "DisplayName eq 'Business Development'" | 
      Format-List Id, DisplayName, Description, GroupTypes

    Id          : a8fbb1b5-b994-4835-9183-c7421d149132
    DisplayName : Business Development
    Description : Welcome to the BizDev team.
    GroupTypes  : {Unified}
  description: |-
    This example gets a group by the specified display name.

    To learn about other permissions for this resource, see the [permissions reference](/graph/permissions-reference).

    To consent to any of these permissions run `Connect-MgBetaGraph -Scopes Permission`. For example, `Connect-MgBetaGraph -Scopes GroupMember.Read.All, Group.Read.All`.
  summary: ""
- title: 'Example 3: Get a count of all groups'
  code: |-
    Connect-MgBetaGraph -Scopes 'Group.Read.All'
    Get-MgBetaGroup -ConsistencyLevel eventual -Count groupCount

    Id                                   DisplayName          Description                                                            GroupTypes          AccessType
    --                                   -----------          -----------                                                            ----------          ----------
    0260d811-6674-4e65-9674-f511abcb4f7b Tailspin Toys Ltd                                                                           {}
    0d5832d1-536d-4c5d-9435-e57413d9167f Test Group 1         This is a test group                                                   {}
    0e06b38f-931a-47db-9a9a-60ab5f492005 Executives                                                                                  {}
    1cb7317c-9c49-4dc8-a358-67ad8e95217c Finance Team                                                                                {}
    2692d278-8323-4094-b286-e0ffce5e54a5 Marketing            A group to synthesize, analyze, and synchronize our marketing efforts. {Unified}
    300a5486-9c58-422f-97a0-d2453977bcec Marketing resources  Marketing resources                                                    {}
    4d5f57a1-85e0-41dd-8282-ff995ad5e1c3 Business Development Welcome to the BizDev team.                                            {Unified}
  description: |-
    The example gets a list of all groups. The $groupCount variable contains the count of the objects in the result. Advanced query requires the ConsistencyLevel parameter set to `eventual` and the Count parameter in the command. For more information about *ConsistencyLevel* and *Count*, see [Advanced query capabilities on Azure AD directory objects](/graph/aad-advanced-queries).

    To learn about other permissions for this resource, see the [permissions reference](/graph/permissions-reference).

    To consent to any of these permissions run `Connect-MgBetaGraph -Scopes Permission`. For example, `Connect-MgBetaGraph -Scopes GroupMember.Read.All, Group.Read.All`.
  summary: ""
- title: "Example 4: Use -Search to get all the groups whose display name contains 'Market' including a count of the returned users"
  code: |-
    Connect-MgBetaGraph -Scopes 'Group.Read.All'
    Get-MgBetaGroup -ConsistencyLevel eventual -Count groupCount -Search '"DisplayName:Market"'

    Id                                   DisplayName         Description                                                            GroupTypes AccessType
    --                                   -----------         -----------                                                            ---------- ----------
    2692d278-8323-4094-b286-e0ffce5e54a5 Marketing           A group to synthesize, analyze, and synchronize our marketing efforts. {Unified}
    300a5486-9c58-422f-97a0-d2453977bcec Marketing resources Marketing resources                                                    {}
    74a7bfca-7fbc-4a67-b4bb-3ef115b114f1 Sales & Marketing   This is the sales and marketing team                                   {}
  description: |-
    This example returns all groups whose display name contains 'Market'. The $groupCount variable contains the count of the objects in the result. Advanced query requires the ConsistencyLevel parameter set to `eventual` and the Count parameter in the command. For more information about *ConsistencyLevel* and *Count*, see [Advanced query capabilities on Azure AD directory objects](/graph/aad-advanced-queries).

    To learn about other permissions for this resource, see the [permissions reference](/graph/permissions-reference).

    To consent to any of these permissions run `Connect-MgBetaGraph -Scopes Permission`. For example, `Connect-MgBetaGraph -Scopes GroupMember.Read.All, Group.Read.All`.
  summary: ""
- title: "Example 5: Use -Filter to get all the applications with a display name that starts with 'A' including a count of the returned users, with the results ordered by display name"
  code: |-
    Connect-MgBetaGraph -Scopes 'Group.Read.All'
    Get-MgBetaGroup -ConsistencyLevel eventual -Count groupCount -Filter "startsWith(DisplayName, 'A')" -OrderBy DisplayName

    Id                                   DisplayName   Description                                           GroupTypes          AccessType
    --                                   -----------   -----------                                           ----------          ----------
    7fbcfd32-d930-4968-aa42-924bf462a305 All Company   This is the default group for everyone in the network {Unified}
    f07a8d78-f18c-4c02-b339-9ebace025122 All Employees                                                       {}
    bbfa9226-a965-47e1-9db2-bcfcb2c202e6 All Users
  description: |-
    This example returns all groups whose display name starts with 'A'. The $groupCount variable contains the count of the objects in the result. Advanced query requires the ConsistencyLevel parameter set to `eventual` and the Count parameter in the command. For more information about *ConsistencyLevel* and *Count*, see [Advanced query capabilities on Azure AD directory objects](/graph/aad-advanced-queries).

    To learn about other permissions for this resource, see the [permissions reference](/graph/permissions-reference).

    To consent to any of these permissions run `Connect-MgBetaGraph -Scopes Permission`. For example, `Connect-MgBetaGraph -Scopes GroupMember.Read.All, Group.Read.All`.
  summary: ""
parameters:
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: All
  description: |+
    List all pages.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: ConsistencyLevel
  description: |+
    Indicates the requested consistency level.
    Documentation URL: https://docs.microsoft.com/graph/aad-advanced-queries

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: CountVariable
  description: |+
    Specifies a count of the total number of items in a collection.
    By default, this variable will be set in the global scope.

  defaultValue: None
  position: Named
  aliases: CV
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: ExpandProperty
  description: |+
    Expand related entities

  defaultValue: None
  position: Named
  aliases: Expand
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Filter
  description: |+
    Filter items by property values

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: GroupId
  isRequired: true
  description: |+
    The unique identifier of group

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="IGroupsIdentity" data-throw-if-not-resolved="False" />
  name: InputObject
  isRequired: true
  description: |+
    Identity Parameter
    To construct, see NOTES section for INPUTOBJECT properties and create a hash table.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: PageSize
  description: |+
    Sets the page size of results.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Property
  description: |+
    Select properties to be returned

  defaultValue: None
  position: Named
  aliases: Select
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Search
  description: |+
    Search items by search phrases

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: Skip
  description: |+
    Skip the first n items

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Sort
  description: |+
    Order items by property values

  defaultValue: None
  position: Named
  aliases: OrderBy
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: Top
  description: |+
    Show only the first n items

  defaultValue: None
  position: Named
  aliases: Limit
  parameterValueGroup: ""
uid: Microsoft.Graph.Beta.Groups.Get-MgBetaGroup
name: Get-MgBetaGroup
description: |-
  Get the properties and relationships of a group object.
  This operation returns by default only a subset of all the available properties, as noted in the Properties section.
  To get properties that are _not_ returned by default, specify them in a `$select` OData query option.
  The **hasMembersWithLicenseErrors** and **isArchived** properties are an exception and are not returned in the `$select` query.
  Because the **group** resource supports extensions, you can also use the `GET` operation to get custom properties and extension data in a **group** instance.
metadata:
  external help file: Microsoft.Graph.Beta.Groups-help.xml
  Module Name: Microsoft.Graph.Beta.Groups
  online version: https://learn.microsoft.com/powershell/module/microsoft.graph.beta.groups/get-mgbetagroup
  schema: 2.0.0
