### YamlMime:PowershellCmdlet
summary: |-
  Create an upload session that allows an app to iteratively upload ranges of a file, so as to attach the file to an Outlook item.
  The item can be a message or event.
  Use this approach to attach a file if the file size is between 3 MB and 150 MB.
  To attach a file that's smaller than 3 MB, do a `POST` operation on the **attachments** navigation property of the Outlook item; see how to do this for a message or for an event.
  As part of the response, this action returns an upload URL that you can use in subsequent sequential `PUT` queries.
  Request headers for each `PUT` operation let you specify the exact range of bytes to be uploaded.
  This allows transfer to be resumed, in case the network connection is dropped during upload.
  The following are the steps to attach a file to an Outlook item using an upload session: See attach large files to Outlook messages or events for an example.

  > [!NOTE]
  > To view the v1.0 release of this cmdlet, view [New-MgGroupThreadPostInReplyToAttachmentUploadSession](/powershell/module/Microsoft.Graph.Groups/New-MgGroupThreadPostInReplyToAttachmentUploadSession?view=graph-powershell-v1.0)
module: Microsoft.Graph.Beta.Groups
notes: |-
  ALIASES

  COMPLEX PARAMETER PROPERTIES

  To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.


  `ATTACHMENTITEM <IMicrosoftGraphAttachmentItem>`: attachmentItem
    - `[(Any) <Object>]`: This indicates any property can be added to this object.
    - `[AttachmentType <String>]`: attachmentType
    - `[ContentId <String>]`: The CID or Content-Id of the attachment for referencing in case of in-line attachments using <img src='cid:contentId'> tag in HTML messages. Optional.
    - `[ContentType <String>]`: The nature of the data in the attachment. Optional.
    - `[IsInline <Boolean?>]`: true if the attachment is an inline attachment; otherwise, false. Optional.
    - `[Name <String>]`: The display name of the attachment. This can be a descriptive string and does not have to be the actual file name. Required.
    - `[Size <Int64?>]`: The length of the attachment in bytes. Required.

  `BODYPARAMETER <IPathsC777YoGroupsGroupIdThreadsConversationthreadIdPostsPostIdInreplytoAttachmentsMicrosoftGraphCreateuploadsessionPostRequestbodyContentApplicationJsonSchema>`: .
    - `[(Any) <Object>]`: This indicates any property can be added to this object.
    - `[AttachmentItem <IMicrosoftGraphAttachmentItem>]`: attachmentItem
      - `[(Any) <Object>]`: This indicates any property can be added to this object.
      - `[AttachmentType <String>]`: attachmentType
      - `[ContentId <String>]`: The CID or Content-Id of the attachment for referencing in case of in-line attachments using <img src='cid:contentId'> tag in HTML messages. Optional.
      - `[ContentType <String>]`: The nature of the data in the attachment. Optional.
      - `[IsInline <Boolean?>]`: true if the attachment is an inline attachment; otherwise, false. Optional.
      - `[Name <String>]`: The display name of the attachment. This can be a descriptive string and does not have to be the actual file name. Required.
      - `[Size <Int64?>]`: The length of the attachment in bytes. Required.

  `INPUTOBJECT <IGroupsIdentity>`: Identity Parameter
    - `[AttachmentId <String>]`: The unique identifier of attachment
    - `[ContentTypeId <String>]`: The unique identifier of contentType
    - `[ConversationId <String>]`: The unique identifier of conversation
    - `[ConversationThreadId <String>]`: The unique identifier of conversationThread
    - `[DirectoryObjectId <String>]`: The unique identifier of directoryObject
    - `[DirectorySettingId <String>]`: The unique identifier of directorySetting
    - `[DocumentSetVersionId <String>]`: The unique identifier of documentSetVersion
    - `[DriveId <String>]`: The unique identifier of drive
    - `[DriveItemId <String>]`: The unique identifier of driveItem
    - `[DriveItemVersionId <String>]`: The unique identifier of driveItemVersion
    - `[EndDateTime <String>]`: Usage: endDateTime='{endDateTime}'
    - `[EndpointId <String>]`: The unique identifier of endpoint
    - `[EventId <String>]`: The unique identifier of event
    - `[ExtensionId <String>]`: The unique identifier of extension
    - `[GroupId <String>]`: The unique identifier of group
    - `[GroupLifecyclePolicyId <String>]`: The unique identifier of groupLifecyclePolicy
    - `[HorizontalSectionColumnId <String>]`: The unique identifier of horizontalSectionColumn
    - `[HorizontalSectionId <String>]`: The unique identifier of horizontalSection
    - `[IncludePersonalNotebooks <Boolean?>]`: Usage: includePersonalNotebooks={includePersonalNotebooks}
    - `[Interval <String>]`: Usage: interval='{interval}'
    - `[ListId <String>]`: The unique identifier of list
    - `[ListItemId <String>]`: The unique identifier of listItem
    - `[ListItemVersionId <String>]`: The unique identifier of listItemVersion
    - `[MentionId <String>]`: The unique identifier of mention
    - `[NotebookId <String>]`: The unique identifier of notebook
    - `[OnenotePageId <String>]`: The unique identifier of onenotePage
    - `[OnenoteSectionId <String>]`: The unique identifier of onenoteSection
    - `[Path <String>]`: Usage: path='{path}'
    - `[PermissionId <String>]`: The unique identifier of permission
    - `[PlannerBucketId <String>]`: The unique identifier of plannerBucket
    - `[PlannerPlanId <String>]`: The unique identifier of plannerPlan
    - `[PostId <String>]`: The unique identifier of post
    - `[ProfilePhotoId <String>]`: The unique identifier of profilePhoto
    - `[Q <String>]`: Usage: q='{q}'
    - `[ResourceSpecificPermissionGrantId <String>]`: The unique identifier of resourceSpecificPermissionGrant
    - `[SensitivityLabelId <String>]`: The unique identifier of sensitivityLabel
    - `[SiteId <String>]`: The unique identifier of site
    - `[SitePageId <String>]`: The unique identifier of sitePage
    - `[StartDateTime <String>]`: Usage: startDateTime='{startDateTime}'
    - `[SubscriptionId <String>]`: The unique identifier of subscription
    - `[Token <String>]`: Usage: token='{token}'
    - `[User <String>]`: Usage: User='{User}'
    - `[UserId <String>]`: The unique identifier of user
    - `[WebPartId <String>]`: The unique identifier of webPart
inputs:
- name: <xref href="Microsoft.Graph.Beta.PowerShell.Models.IGroupsIdentity" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="Microsoft.Graph.Beta.PowerShell.Models.IPathsC777YoGroupsGroupIdThreadsConversationthreadIdPostsPostIdInreplytoAttachmentsMicrosoftGraphCreateuploadsessionPostRequestbodyContentApplicationJsonSchema" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.Graph.Beta.PowerShell.Models.IMicrosoftGraphUploadSession" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: New-MgGroupThreadPostInReplyToAttachmentUploadSession
  href: /powershell/module/Microsoft.Graph.Groups/New-MgGroupThreadPostInReplyToAttachmentUploadSession?view=graph-powershell-v1.0
syntaxes:
- >-
  New-MgBetaGroupThreadPostInReplyToAttachmentUploadSession -ConversationThreadId <String> -GroupId <String>

   -PostId <String> [-AdditionalProperties <Hashtable>] [-AttachmentItem <IMicrosoftGraphAttachmentItem>]

   [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  New-MgBetaGroupThreadPostInReplyToAttachmentUploadSession -ConversationThreadId <String> -GroupId <String>

   -PostId <String>

   -BodyParameter <IPathsC777YoGroupsGroupIdThreadsConversationthreadIdPostsPostIdInreplytoAttachmentsMicrosoftGraphCreateuploadsessionPostRequestbodyContentApplicationJsonSchema>

   [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  New-MgBetaGroupThreadPostInReplyToAttachmentUploadSession -InputObject <IGroupsIdentity>

   [-AdditionalProperties <Hashtable>] [-AttachmentItem <IMicrosoftGraphAttachmentItem>] [-WhatIf] [-Confirm]

   [<CommonParameters>]
- >-
  New-MgBetaGroupThreadPostInReplyToAttachmentUploadSession -InputObject <IGroupsIdentity>

   -BodyParameter <IPathsC777YoGroupsGroupIdThreadsConversationthreadIdPostsPostIdInreplytoAttachmentsMicrosoftGraphCreateuploadsessionPostRequestbodyContentApplicationJsonSchema>

   [-WhatIf] [-Confirm] [<CommonParameters>]
parameters:
- type: <xref href="Hashtable" data-throw-if-not-resolved="False" />
  name: AdditionalProperties
  description: |+
    Additional Parameters

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="IMicrosoftGraphAttachmentItem" data-throw-if-not-resolved="False" />
  name: AttachmentItem
  description: |+
    attachmentItem
    To construct, see NOTES section for ATTACHMENTITEM properties and create a hash table.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="IPathsC777YoGroupsGroupIdThreadsConversationthreadIdPostsPostIdInreplytoAttachmentsMicrosoftGraphCreateuploadsessionPostRequestbodyContentApplicationJsonSchema" data-throw-if-not-resolved="False" />
  name: BodyParameter
  isRequired: true
  description: |+
    .
    To construct, see NOTES section for BODYPARAMETER properties and create a hash table.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: None
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: ConversationThreadId
  isRequired: true
  description: |+
    The unique identifier of conversationThread

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: GroupId
  isRequired: true
  description: |+
    The unique identifier of group

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="IGroupsIdentity" data-throw-if-not-resolved="False" />
  name: InputObject
  isRequired: true
  description: |+
    Identity Parameter
    To construct, see NOTES section for INPUTOBJECT properties and create a hash table.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: PostId
  isRequired: true
  description: |+
    The unique identifier of post

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: None
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: Microsoft.Graph.Beta.Groups.New-MgBetaGroupThreadPostInReplyToAttachmentUploadSession
name: New-MgBetaGroupThreadPostInReplyToAttachmentUploadSession
description: |-
  Create an upload session that allows an app to iteratively upload ranges of a file, so as to attach the file to an Outlook item.
  The item can be a message or event.
  Use this approach to attach a file if the file size is between 3 MB and 150 MB.
  To attach a file that's smaller than 3 MB, do a `POST` operation on the **attachments** navigation property of the Outlook item; see how to do this for a message or for an event.
  As part of the response, this action returns an upload URL that you can use in subsequent sequential `PUT` queries.
  Request headers for each `PUT` operation let you specify the exact range of bytes to be uploaded.
  This allows transfer to be resumed, in case the network connection is dropped during upload.
  The following are the steps to attach a file to an Outlook item using an upload session: See attach large files to Outlook messages or events for an example.
metadata:
  external help file: Microsoft.Graph.Beta.Groups-help.xml
  Module Name: Microsoft.Graph.Beta.Groups
  online version: https://learn.microsoft.com/powershell/module/microsoft.graph.beta.groups/new-mgbetagroupthreadpostinreplytoattachmentuploadsession
  schema: 2.0.0
