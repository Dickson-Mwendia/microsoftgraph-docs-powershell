### YamlMime:PowershellCmdlet
summary: |-
  Get a set of event resources that have been added, deleted, or updated in one or more calendars.
  You can get specific types of these incremental changes in the events in all the calendars of a mailbox or in a specific calendar, or in an event collection of a **calendarView** (range of events defined by start and end dates) of a calendar.
  The calendar can be the default calendar or some other specified calendar of the user's.
  In the case of getting incremental changes on **calendarView**, the calendar can be a group calendar as well.
  Typically, synchronizing events in a calendar or **calendarView** in a local store entails a round of multiple **delta** function calls.
  The initial call is a full synchronization, and every subsequent **delta** call in the same round gets the incremental changes (additions, deletions, or updates).
  This allows you to maintain and synchronize a local store of events in the specified calendar, without having to fetch all the events of that calendar from the server every time.
  The following table lists the differences between the **delta** function on events and the **delta** function on a **calendarView** in a calendar.

  > [!NOTE]
  > To view the v1.0 release of this cmdlet, view [Get-MgGroupCalendarSchedule](/powershell/module/Microsoft.Graph.Groups/Get-MgGroupCalendarSchedule?view=graph-powershell-v1.0)
module: Microsoft.Graph.Beta.Groups
notes: |-
  ALIASES

  COMPLEX PARAMETER PROPERTIES

  To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.


  `INPUTOBJECT <IGroupsIdentity>`: Identity Parameter
    - `[AttachmentId <String>]`: The unique identifier of attachment
    - `[ContentTypeId <String>]`: The unique identifier of contentType
    - `[ConversationId <String>]`: The unique identifier of conversation
    - `[ConversationThreadId <String>]`: The unique identifier of conversationThread
    - `[DirectoryObjectId <String>]`: The unique identifier of directoryObject
    - `[DirectorySettingId <String>]`: The unique identifier of directorySetting
    - `[DocumentSetVersionId <String>]`: The unique identifier of documentSetVersion
    - `[DriveId <String>]`: The unique identifier of drive
    - `[DriveItemId <String>]`: The unique identifier of driveItem
    - `[DriveItemVersionId <String>]`: The unique identifier of driveItemVersion
    - `[EndDateTime <String>]`: Usage: endDateTime='{endDateTime}'
    - `[EndpointId <String>]`: The unique identifier of endpoint
    - `[EventId <String>]`: The unique identifier of event
    - `[ExtensionId <String>]`: The unique identifier of extension
    - `[GroupId <String>]`: The unique identifier of group
    - `[GroupLifecyclePolicyId <String>]`: The unique identifier of groupLifecyclePolicy
    - `[HorizontalSectionColumnId <String>]`: The unique identifier of horizontalSectionColumn
    - `[HorizontalSectionId <String>]`: The unique identifier of horizontalSection
    - `[IncludePersonalNotebooks <Boolean?>]`: Usage: includePersonalNotebooks={includePersonalNotebooks}
    - `[Interval <String>]`: Usage: interval='{interval}'
    - `[ListId <String>]`: The unique identifier of list
    - `[ListItemId <String>]`: The unique identifier of listItem
    - `[ListItemVersionId <String>]`: The unique identifier of listItemVersion
    - `[MentionId <String>]`: The unique identifier of mention
    - `[NotebookId <String>]`: The unique identifier of notebook
    - `[OnenotePageId <String>]`: The unique identifier of onenotePage
    - `[OnenoteSectionId <String>]`: The unique identifier of onenoteSection
    - `[Path <String>]`: Usage: path='{path}'
    - `[PermissionId <String>]`: The unique identifier of permission
    - `[PlannerBucketId <String>]`: The unique identifier of plannerBucket
    - `[PlannerPlanId <String>]`: The unique identifier of plannerPlan
    - `[PostId <String>]`: The unique identifier of post
    - `[ProfilePhotoId <String>]`: The unique identifier of profilePhoto
    - `[Q <String>]`: Usage: q='{q}'
    - `[ResourceSpecificPermissionGrantId <String>]`: The unique identifier of resourceSpecificPermissionGrant
    - `[SensitivityLabelId <String>]`: The unique identifier of sensitivityLabel
    - `[SiteId <String>]`: The unique identifier of site
    - `[SitePageId <String>]`: The unique identifier of sitePage
    - `[StartDateTime <String>]`: Usage: startDateTime='{startDateTime}'
    - `[SubscriptionId <String>]`: The unique identifier of subscription
    - `[Token <String>]`: Usage: token='{token}'
    - `[User <String>]`: Usage: User='{User}'
    - `[UserId <String>]`: The unique identifier of user
    - `[WebPartId <String>]`: The unique identifier of webPart
inputs:
- name: <xref href="Microsoft.Graph.Beta.PowerShell.Models.IGroupsIdentity" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.Graph.Beta.PowerShell.Models.IMicrosoftGraphEvent" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: Get-MgGroupCalendarSchedule
  href: /powershell/module/Microsoft.Graph.Groups/Get-MgGroupCalendarSchedule?view=graph-powershell-v1.0
syntaxes:
- >-
  Get-MgBetaGroupCalendarEventDelta -GroupId <String> -EndDateTime <String> -StartDateTime <String>

   [-Filter <String>] [-Property <String[]>] [-Search <String>] [-Skip <Int32>] [-Sort <String[]>] [-Top <Int32>]

   [-PageSize <Int32>] [-All] [-CountVariable <String>] [<CommonParameters>]
- >-
  Get-MgBetaGroupCalendarEventDelta -InputObject <IGroupsIdentity> -EndDateTime <String> -StartDateTime <String>

   [-Filter <String>] [-Property <String[]>] [-Search <String>] [-Skip <Int32>] [-Sort <String[]>] [-Top <Int32>]

   [-Count] [<CommonParameters>]
examples:
- title: 'Example 1: Code snippet'
  code: |-
    Import-Module Microsoft.Graph.Beta.Users.Actions

    $params = @{
    	Schedules = @(
    		"adelev@contoso.onmicrosoft.com"
    		"meganb@contoso.onmicrosoft.com"
    	)
    	StartTime = @{
    		DateTime = "2019-03-15T09:00:00"
    		TimeZone = "Pacific Standard Time"
    	}
    	EndTime = @{
    		DateTime = "2019-03-15T18:00:00"
    		TimeZone = "Pacific Standard Time"
    	}
    	AvailabilityViewInterval = 60
    }

    # A UPN can also be used as -UserId.
    Get-MgBetaUserDefaultCalendarSchedule -UserId $userId -BodyParameter $params
  description: |-
    This example shows how to use the Get-MgBetaGroupCalendarSchedule Cmdlet.

    To learn about permissions for this resource, see the [permissions reference](/graph/permissions-reference).
  summary: ""
parameters:
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: All
  description: |+
    List all pages.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Count
  description: |+
    Include count of items

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: CountVariable
  description: |+
    Specifies a count of the total number of items in a collection.
    By default, this variable will be set in the global scope.

  defaultValue: None
  position: Named
  aliases: CV
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: EndDateTime
  isRequired: true
  description: |+
    The end date and time of the time range in the function, represented in ISO 8601 format.
    For example, 2019-11-08T20:00:00-08:00

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Filter
  description: |+
    Filter items by property values

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: GroupId
  isRequired: true
  description: |+
    The unique identifier of group

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="IGroupsIdentity" data-throw-if-not-resolved="False" />
  name: InputObject
  isRequired: true
  description: |+
    Identity Parameter
    To construct, see NOTES section for INPUTOBJECT properties and create a hash table.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: PageSize
  description: |+
    Sets the page size of results.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Property
  description: |+
    Select properties to be returned

  defaultValue: None
  position: Named
  aliases: Select
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Search
  description: |+
    Search items by search phrases

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: Skip
  description: |+
    Skip the first n items

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Sort
  description: |+
    Order items by property values

  defaultValue: None
  position: Named
  aliases: OrderBy
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: StartDateTime
  isRequired: true
  description: |+
    The start date and time of the time range in the function, represented in ISO 8601 format.
    For example, 2019-11-08T20:00:00-08:00

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: Top
  description: |+
    Show only the first n items

  defaultValue: None
  position: Named
  aliases: Limit
  parameterValueGroup: ""
uid: Microsoft.Graph.Beta.Groups.Get-MgBetaGroupCalendarSchedule
name: Get-MgBetaGroupCalendarSchedule
description: |-
  Get a set of event resources that have been added, deleted, or updated in one or more calendars.
  You can get specific types of these incremental changes in the events in all the calendars of a mailbox or in a specific calendar, or in an event collection of a **calendarView** (range of events defined by start and end dates) of a calendar.
  The calendar can be the default calendar or some other specified calendar of the user's.
  In the case of getting incremental changes on **calendarView**, the calendar can be a group calendar as well.
  Typically, synchronizing events in a calendar or **calendarView** in a local store entails a round of multiple **delta** function calls.
  The initial call is a full synchronization, and every subsequent **delta** call in the same round gets the incremental changes (additions, deletions, or updates).
  This allows you to maintain and synchronize a local store of events in the specified calendar, without having to fetch all the events of that calendar from the server every time.
  The following table lists the differences between the **delta** function on events and the **delta** function on a **calendarView** in a calendar.
metadata:
  external help file: Microsoft.Graph.Beta.Groups-help.xml
  Module Name: Microsoft.Graph.Beta.Groups
  online version: https://learn.microsoft.com/powershell/module/microsoft.graph.beta.groups/get-mgbetagroupcalendareventdelta
  schema: 2.0.0
