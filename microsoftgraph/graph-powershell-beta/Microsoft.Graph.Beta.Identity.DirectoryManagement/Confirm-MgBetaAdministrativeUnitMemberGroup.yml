### YamlMime:PowershellCmdlet
summary: |-
  Check for membership in a specified list of group IDs, and return from that list those groups (identified by IDs) of which the specified user, group, service principal, organizational contact, device, or directory object is a member.
  This function is transitive.
  You can check up to a maximum of 20 groups per request.
  This function supports all groups provisioned in Azure AD.
  Because Microsoft 365 groups cannot contain other groups, membership in a Microsoft 365 group is always direct.

  > [!NOTE]
  > To view the v1.0 release of this cmdlet, view [Confirm-MgAdministrativeUnitMemberGroup](/powershell/module/Microsoft.Graph.Identity.DirectoryManagement/Confirm-MgAdministrativeUnitMemberGroup?view=graph-powershell-v1.0)
module: Microsoft.Graph.Beta.Identity.DirectoryManagement
notes: |-
  ALIASES

  COMPLEX PARAMETER PROPERTIES

  To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.


  `BODYPARAMETER <IPaths1UpdmwwAdministrativeunitsAdministrativeunitIdMicrosoftGraphCheckmembergroupsPostRequestbodyContentApplicationJsonSchema>`: .
    - `[(Any) <Object>]`: This indicates any property can be added to this object.
    - `[GroupIds <String[]>]`: 

  `INPUTOBJECT <IIdentityDirectoryManagementIdentity>`: Identity Parameter
    - `[AdministrativeUnitId <String>]`: The unique identifier of administrativeUnit
    - `[AllowedValueId <String>]`: The unique identifier of allowedValue
    - `[AttributeSetId <String>]`: The unique identifier of attributeSet
    - `[CertificateAuthorityAsEntityId <String>]`: The unique identifier of certificateAuthorityAsEntity
    - `[CertificateBasedApplicationConfigurationId <String>]`: The unique identifier of certificateBasedApplicationConfiguration
    - `[CommandId <String>]`: The unique identifier of command
    - `[CompanySubscriptionId <String>]`: The unique identifier of companySubscription
    - `[ContractId <String>]`: The unique identifier of contract
    - `[CustomSecurityAttributeDefinitionId <String>]`: The unique identifier of customSecurityAttributeDefinition
    - `[DeviceId <String>]`: The unique identifier of device
    - `[DirectoryObjectId <String>]`: The unique identifier of directoryObject
    - `[DirectoryRoleId <String>]`: The unique identifier of directoryRole
    - `[DirectoryRoleTemplateId <String>]`: The unique identifier of directoryRoleTemplate
    - `[DirectorySettingId <String>]`: The unique identifier of directorySetting
    - `[DirectorySettingTemplateId <String>]`: The unique identifier of directorySettingTemplate
    - `[DomainDnsRecordId <String>]`: The unique identifier of domainDnsRecord
    - `[DomainId <String>]`: The unique identifier of domain
    - `[ExtensionId <String>]`: The unique identifier of extension
    - `[FeatureRolloutPolicyId <String>]`: The unique identifier of featureRolloutPolicy
    - `[IdentityProviderBaseId <String>]`: The unique identifier of identityProviderBase
    - `[ImpactedResourceId <String>]`: The unique identifier of impactedResource
    - `[InboundSharedUserProfileUserId <String>]`: The unique identifier of inboundSharedUserProfile
    - `[InternalDomainFederationId <String>]`: The unique identifier of internalDomainFederation
    - `[ManagedTenantAlertId <String>]`: The unique identifier of managedTenantAlert
    - `[ManagementActionId <String>]`: The unique identifier of managementAction
    - `[OnPremisesDirectorySynchronizationId <String>]`: The unique identifier of onPremisesDirectorySynchronization
    - `[OrgContactId <String>]`: The unique identifier of orgContact
    - `[OrganizationId <String>]`: The unique identifier of organization
    - `[OrganizationalBrandingLocalizationId <String>]`: The unique identifier of organizationalBrandingLocalization
    - `[OutboundSharedUserProfileUserId <String>]`: The unique identifier of outboundSharedUserProfile
    - `[ProfileCardPropertyId <String>]`: The unique identifier of profileCardProperty
    - `[RecommendationId <String>]`: The unique identifier of recommendation
    - `[ScopedRoleMembershipId <String>]`: The unique identifier of scopedRoleMembership
    - `[SharedEmailDomainId <String>]`: The unique identifier of sharedEmailDomain
    - `[SharedEmailDomainInvitationId <String>]`: The unique identifier of sharedEmailDomainInvitation
    - `[SubscribedSkuId <String>]`: The unique identifier of subscribedSku
    - `[TenantId <String>]`: The unique identifier of tenant
    - `[TenantReferenceTenantId <String>]`: The unique identifier of tenantReference
    - `[TenantTagId <String>]`: The unique identifier of tenantTag
    - `[UsageRightId <String>]`: The unique identifier of usageRight
    - `[UserId <String>]`: The unique identifier of user
inputs:
- name: <xref href="Microsoft.Graph.Beta.PowerShell.Models.IIdentityDirectoryManagementIdentity" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="Microsoft.Graph.Beta.PowerShell.Models.IPaths1UpdmwwAdministrativeunitsAdministrativeunitIdMicrosoftGraphCheckmembergroupsPostRequestbodyContentApplicationJsonSchema" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="System.String" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: Confirm-MgAdministrativeUnitMemberGroup
  href: /powershell/module/Microsoft.Graph.Identity.DirectoryManagement/Confirm-MgAdministrativeUnitMemberGroup?view=graph-powershell-v1.0
syntaxes:
- >-
  Confirm-MgBetaAdministrativeUnitMemberGroup -AdministrativeUnitId <String> [-AdditionalProperties <Hashtable>]

   [-GroupIds <String[]>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Confirm-MgBetaAdministrativeUnitMemberGroup -AdministrativeUnitId <String>

   -BodyParameter <IPaths1UpdmwwAdministrativeunitsAdministrativeunitIdMicrosoftGraphCheckmembergroupsPostRequestbodyContentApplicationJsonSchema>

   [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Confirm-MgBetaAdministrativeUnitMemberGroup -InputObject <IIdentityDirectoryManagementIdentity>

   [-AdditionalProperties <Hashtable>] [-GroupIds <String[]>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Confirm-MgBetaAdministrativeUnitMemberGroup -InputObject <IIdentityDirectoryManagementIdentity>

   -BodyParameter <IPaths1UpdmwwAdministrativeunitsAdministrativeunitIdMicrosoftGraphCheckmembergroupsPostRequestbodyContentApplicationJsonSchema>

   [-WhatIf] [-Confirm] [<CommonParameters>]
parameters:
- type: <xref href="Hashtable" data-throw-if-not-resolved="False" />
  name: AdditionalProperties
  description: |+
    Additional Parameters

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: AdministrativeUnitId
  isRequired: true
  description: |+
    The unique identifier of administrativeUnit

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="IPaths1UpdmwwAdministrativeunitsAdministrativeunitIdMicrosoftGraphCheckmembergroupsPostRequestbodyContentApplicationJsonSchema" data-throw-if-not-resolved="False" />
  name: BodyParameter
  isRequired: true
  description: |+
    .
    To construct, see NOTES section for BODYPARAMETER properties and create a hash table.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: None
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: GroupIds
  description: |+
    .

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="IIdentityDirectoryManagementIdentity" data-throw-if-not-resolved="False" />
  name: InputObject
  isRequired: true
  description: |+
    Identity Parameter
    To construct, see NOTES section for INPUTOBJECT properties and create a hash table.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: None
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: Microsoft.Graph.Beta.Identity.DirectoryManagement.Confirm-MgBetaAdministrativeUnitMemberGroup
name: Confirm-MgBetaAdministrativeUnitMemberGroup
description: |-
  Check for membership in a specified list of group IDs, and return from that list those groups (identified by IDs) of which the specified user, group, service principal, organizational contact, device, or directory object is a member.
  This function is transitive.
  You can check up to a maximum of 20 groups per request.
  This function supports all groups provisioned in Azure AD.
  Because Microsoft 365 groups cannot contain other groups, membership in a Microsoft 365 group is always direct.
metadata:
  external help file: Microsoft.Graph.Beta.Identity.DirectoryManagement-help.xml
  Module Name: Microsoft.Graph.Beta.Identity.DirectoryManagement
  online version: https://learn.microsoft.com/powershell/module/microsoft.graph.beta.identity.directorymanagement/confirm-mgbetaadministrativeunitmembergroup
  schema: 2.0.0
