### YamlMime:PowershellCmdlet
summary: |-
  Validate that a Microsoft 365 group's display name or mail nickname complies with naming policies.
  Clients can use this API to determine whether a display name or mail nickname is valid before trying to **create** a Microsoft 365 group.
  For validating properties of an existing group, use the validateProperties function for groups.
  The following validations are performed for the display name and mail nickname properties: \n1.
  Validate the prefix and suffix naming policy\n2.
  Validate the custom banned words policy\n3.
  Validate the mail nickname is unique This API returns with the first failure encountered.
  If one or more properties fail multiple validations, only the property with the first validation failure is returned.
  However, you can validate both the mail nickname and the display name and receive a collection of validation errors if you are only validating the prefix and suffix naming policy.

  > [!NOTE]
  > To view the v1.0 release of this cmdlet, view [Test-MgTeamPermissionGrantProperty](/powershell/module/Microsoft.Graph.Teams/Test-MgTeamPermissionGrantProperty?view=graph-powershell-v1.0)
module: Microsoft.Graph.Beta.Teams
notes: |-
  ALIASES

  COMPLEX PARAMETER PROPERTIES

  To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.


  `BODYPARAMETER <IPaths11Tq7QfTeamsTeamIdPermissiongrantsMicrosoftGraphValidatepropertiesPostRequestbodyContentApplicationJsonSchema>`: .
    - `[(Any) <Object>]`: This indicates any property can be added to this object.
    - `[DisplayName <String>]`: 
    - `[EntityType <String>]`: 
    - `[MailNickname <String>]`: 
    - `[OnBehalfOfUserId <String>]`: 

  `INPUTOBJECT <ITeamsIdentity>`: Identity Parameter
    - `[AssociatedTeamInfoId <String>]`: The unique identifier of associatedTeamInfo
    - `[ChannelId <String>]`: The unique identifier of channel
    - `[ChatId <String>]`: The unique identifier of chat
    - `[ChatMessageHostedContentId <String>]`: The unique identifier of chatMessageHostedContent
    - `[ChatMessageId <String>]`: The unique identifier of chatMessage
    - `[ChatMessageId1 <String>]`: The unique identifier of chatMessage
    - `[ConversationMemberId <String>]`: The unique identifier of conversationMember
    - `[DeletedChatId <String>]`: The unique identifier of deletedChat
    - `[DeletedTeamId <String>]`: The unique identifier of deletedTeam
    - `[GroupId <String>]`: The unique identifier of group
    - `[OfferShiftRequestId <String>]`: The unique identifier of offerShiftRequest
    - `[OpenShiftChangeRequestId <String>]`: The unique identifier of openShiftChangeRequest
    - `[OpenShiftId <String>]`: The unique identifier of openShift
    - `[PinnedChatMessageInfoId <String>]`: The unique identifier of pinnedChatMessageInfo
    - `[ResourceSpecificPermissionGrantId <String>]`: The unique identifier of resourceSpecificPermissionGrant
    - `[SchedulingGroupId <String>]`: The unique identifier of schedulingGroup
    - `[SharedWithChannelTeamInfoId <String>]`: The unique identifier of sharedWithChannelTeamInfo
    - `[ShiftId <String>]`: The unique identifier of shift
    - `[SwapShiftsChangeRequestId <String>]`: The unique identifier of swapShiftsChangeRequest
    - `[TeamId <String>]`: The unique identifier of team
    - `[TeamTemplateDefinitionId <String>]`: The unique identifier of teamTemplateDefinition
    - `[TeamTemplateId <String>]`: The unique identifier of teamTemplate
    - `[TeamsAppDefinitionId <String>]`: The unique identifier of teamsAppDefinition
    - `[TeamsAppId <String>]`: The unique identifier of teamsApp
    - `[TeamsAppInstallationId <String>]`: The unique identifier of teamsAppInstallation
    - `[TeamsAsyncOperationId <String>]`: The unique identifier of teamsAsyncOperation
    - `[TeamsTabId <String>]`: The unique identifier of teamsTab
    - `[TeamworkDeviceId <String>]`: The unique identifier of teamworkDevice
    - `[TeamworkDeviceOperationId <String>]`: The unique identifier of teamworkDeviceOperation
    - `[TeamworkTagId <String>]`: The unique identifier of teamworkTag
    - `[TeamworkTagMemberId <String>]`: The unique identifier of teamworkTagMember
    - `[TimeCardId <String>]`: The unique identifier of timeCard
    - `[TimeOffId <String>]`: The unique identifier of timeOff
    - `[TimeOffReasonId <String>]`: The unique identifier of timeOffReason
    - `[TimeOffRequestId <String>]`: The unique identifier of timeOffRequest
    - `[UserId <String>]`: The unique identifier of user
    - `[UserScopeTeamsAppInstallationId <String>]`: The unique identifier of userScopeTeamsAppInstallation
    - `[WorkforceIntegrationId <String>]`: The unique identifier of workforceIntegration
inputs:
- name: <xref href="Microsoft.Graph.Beta.PowerShell.Models.IPaths11Tq7QfTeamsTeamIdPermissiongrantsMicrosoftGraphValidatepropertiesPostRequestbodyContentApplicationJsonSchema" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="Microsoft.Graph.Beta.PowerShell.Models.ITeamsIdentity" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="System.Boolean" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: Test-MgTeamPermissionGrantProperty
  href: /powershell/module/Microsoft.Graph.Teams/Test-MgTeamPermissionGrantProperty?view=graph-powershell-v1.0
syntaxes:
- >-
  Test-MgBetaTeamPermissionGrantProperty -TeamId <String> [-AdditionalProperties <Hashtable>]

   [-DisplayName <String>] [-EntityType <String>] [-MailNickname <String>] [-OnBehalfOfUserId <String>]

   [-PassThru] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Test-MgBetaTeamPermissionGrantProperty -TeamId <String>

   -BodyParameter <IPaths11Tq7QfTeamsTeamIdPermissiongrantsMicrosoftGraphValidatepropertiesPostRequestbodyContentApplicationJsonSchema>

   [-PassThru] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Test-MgBetaTeamPermissionGrantProperty -InputObject <ITeamsIdentity> [-AdditionalProperties <Hashtable>]

   [-DisplayName <String>] [-EntityType <String>] [-MailNickname <String>] [-OnBehalfOfUserId <String>]

   [-PassThru] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Test-MgBetaTeamPermissionGrantProperty -InputObject <ITeamsIdentity>

   -BodyParameter <IPaths11Tq7QfTeamsTeamIdPermissiongrantsMicrosoftGraphValidatepropertiesPostRequestbodyContentApplicationJsonSchema>

   [-PassThru] [-WhatIf] [-Confirm] [<CommonParameters>]
parameters:
- type: <xref href="Hashtable" data-throw-if-not-resolved="False" />
  name: AdditionalProperties
  description: |+
    Additional Parameters

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="IPaths11Tq7QfTeamsTeamIdPermissiongrantsMicrosoftGraphValidatepropertiesPostRequestbodyContentApplicationJsonSchema" data-throw-if-not-resolved="False" />
  name: BodyParameter
  isRequired: true
  description: |+
    .
    To construct, see NOTES section for BODYPARAMETER properties and create a hash table.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: None
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: DisplayName
  description: |+
    .

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: EntityType
  description: |+
    .

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="ITeamsIdentity" data-throw-if-not-resolved="False" />
  name: InputObject
  isRequired: true
  description: |+
    Identity Parameter
    To construct, see NOTES section for INPUTOBJECT properties and create a hash table.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: MailNickname
  description: |+
    .

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: OnBehalfOfUserId
  description: |+
    .

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: PassThru
  description: |+
    Returns true when the command succeeds

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: TeamId
  isRequired: true
  description: |+
    The unique identifier of team

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: None
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: Microsoft.Graph.Beta.Teams.Test-MgBetaTeamPermissionGrantProperty
name: Test-MgBetaTeamPermissionGrantProperty
description: |-
  Validate that a Microsoft 365 group's display name or mail nickname complies with naming policies.
  Clients can use this API to determine whether a display name or mail nickname is valid before trying to **create** a Microsoft 365 group.
  For validating properties of an existing group, use the validateProperties function for groups.
  The following validations are performed for the display name and mail nickname properties: \n1.
  Validate the prefix and suffix naming policy\n2.
  Validate the custom banned words policy\n3.
  Validate the mail nickname is unique This API returns with the first failure encountered.
  If one or more properties fail multiple validations, only the property with the first validation failure is returned.
  However, you can validate both the mail nickname and the display name and receive a collection of validation errors if you are only validating the prefix and suffix naming policy.
metadata:
  external help file: Microsoft.Graph.Beta.Teams-help.xml
  Module Name: Microsoft.Graph.Beta.Teams
  online version: https://learn.microsoft.com/powershell/module/microsoft.graph.beta.teams/test-mgbetateampermissiongrantproperty
  schema: 2.0.0
