### YamlMime:PowershellCmdlet
summary: |-
  Enable a bot to answer an incoming call.
  The incoming call request can be an invite from a participant in a group call or a peer-to-peer call.
  If an invite to a group call is received, the notification will contain the chatInfo and meetingInfo parameters.
  The bot is expected to answer, reject, or redirect the call before the call times out.
  The current timeout value is 15 seconds for regular scenarios, and 5 seconds for policy-based recording scenarios.

  > [!NOTE]
  > To view the beta release of this cmdlet, view [Invoke-MgBetaAnswerCommunicationCall](/powershell/module/Microsoft.Graph.Beta.CloudCommunications/Invoke-MgBetaAnswerCommunicationCall?view=graph-powershell-beta)
module: Microsoft.Graph.CloudCommunications
notes: |-
  ALIASES

  COMPLEX PARAMETER PROPERTIES

  To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.


  `BODYPARAMETER <IPathsQvpqn4CommunicationsCallsCallIdMicrosoftGraphAnswerPostRequestbodyContentApplicationJsonSchema>`: .
    - `[(Any) <Object>]`: This indicates any property can be added to this object.
    - `[AcceptedModalities <String[]>]`: 
    - `[CallOptions <IMicrosoftGraphIncomingCallOptions>]`: incomingCallOptions
      - `[(Any) <Object>]`: This indicates any property can be added to this object.
      - `[HideBotAfterEscalation <Boolean?>]`: Indicates whether to hide the app after the call is escalated.
      - `[IsContentSharingNotificationEnabled <Boolean?>]`: Indicates whether content sharing notifications should be enabled for the call.
    - `[CallbackUri <String>]`: 
    - `[MediaConfig <IMicrosoftGraphMediaConfig>]`: mediaConfig
      - `[(Any) <Object>]`: This indicates any property can be added to this object.
    - `[ParticipantCapacity <Int32?>]`: 

  `INPUTOBJECT <ICloudCommunicationsIdentity>`: Identity Parameter
    - `[AttendanceRecordId <String>]`: The unique identifier of attendanceRecord
    - `[AudioRoutingGroupId <String>]`: The unique identifier of audioRoutingGroup
    - `[CallId <String>]`: The unique identifier of call
    - `[CallRecordId <String>]`: The unique identifier of callRecord
    - `[CommsOperationId <String>]`: The unique identifier of commsOperation
    - `[ContentSharingSessionId <String>]`: The unique identifier of contentSharingSession
    - `[MeetingAttendanceReportId <String>]`: The unique identifier of meetingAttendanceReport
    - `[OnlineMeetingId <String>]`: The unique identifier of onlineMeeting
    - `[ParticipantId <String>]`: The unique identifier of participant
    - `[PresenceId <String>]`: The unique identifier of presence
    - `[SessionId <String>]`: The unique identifier of session
    - `[UserId <String>]`: The unique identifier of user
inputs:
- name: <xref href="Microsoft.Graph.PowerShell.Models.ICloudCommunicationsIdentity" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="Microsoft.Graph.PowerShell.Models.IPathsQvpqn4CommunicationsCallsCallIdMicrosoftGraphAnswerPostRequestbodyContentApplicationJsonSchema" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="System.Boolean" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: Invoke-MgBetaAnswerCommunicationCall
  href: /powershell/module/Microsoft.Graph.Beta.CloudCommunications/Invoke-MgBetaAnswerCommunicationCall?view=graph-powershell-beta
syntaxes:
- >-
  Invoke-MgAnswerCommunicationCall -CallId <String> [-AcceptedModalities <String[]>]

   [-AdditionalProperties <Hashtable>] [-CallOptions <Hashtable>] [-CallbackUri <String>]

   [-MediaConfig <Hashtable>] [-ParticipantCapacity <Int32>] [-PassThru] [-WhatIf] [-Confirm]

   [<CommonParameters>]
- >-
  Invoke-MgAnswerCommunicationCall -CallId <String>

   -BodyParameter <IPathsQvpqn4CommunicationsCallsCallIdMicrosoftGraphAnswerPostRequestbodyContentApplicationJsonSchema>

   [-PassThru] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Invoke-MgAnswerCommunicationCall -InputObject <ICloudCommunicationsIdentity> [-AcceptedModalities <String[]>]

   [-AdditionalProperties <Hashtable>] [-CallOptions <Hashtable>] [-CallbackUri <String>]

   [-MediaConfig <Hashtable>] [-ParticipantCapacity <Int32>] [-PassThru] [-WhatIf] [-Confirm]

   [<CommonParameters>]
- >-
  Invoke-MgAnswerCommunicationCall -InputObject <ICloudCommunicationsIdentity>

   -BodyParameter <IPathsQvpqn4CommunicationsCallsCallIdMicrosoftGraphAnswerPostRequestbodyContentApplicationJsonSchema>

   [-PassThru] [-WhatIf] [-Confirm] [<CommonParameters>]
examples:
- title: 'Example 1: Using the Invoke-MgAnswerCommunicationCall Cmdlet'
  code: |-
    Import-Module Microsoft.Graph.CloudCommunications
    $params = @{
    	CallbackUri = "https://bot.contoso.com/api/calls"
    	AcceptedModalities = @(
    		"audio"
    	)
    	MediaConfig = @{
    		"@odata.type" = "#microsoft.graph.appHostedMediaConfig"
    		Blob = "<Media Session Configuration Blob>"
    	}
    }
    Invoke-MgAnswerCommunicationCall -CallId $callId -BodyParameter $params
  description: |-
    This example shows how to use the Invoke-MgAnswerCommunicationCall Cmdlet.
    To learn about permissions for this resource, see the [permissions reference](/graph/permissions-reference).
  summary: ""
- title: 'Example 2: Using the Invoke-MgAnswerCommunicationCall Cmdlet'
  code: |-
    Import-Module Microsoft.Graph.CloudCommunications
    $params = @{
    	CallbackUri = "callbackUri-value"
    	MediaConfig = @{
    		"@odata.type" = "#microsoft.graph.appHostedMediaConfig"
    		Blob = "<Media Session Configuration Blob>"
    	}
    	AcceptedModalities = @(
    		"audio"
    	)
    	ParticipantCapacity = 200
    }
    Invoke-MgAnswerCommunicationCall -CallId $callId -BodyParameter $params
  description: |-
    This example shows how to use the Invoke-MgAnswerCommunicationCall Cmdlet.
    To learn about permissions for this resource, see the [permissions reference](/graph/permissions-reference).
  summary: ""
- title: 'Example 3: Using the Invoke-MgAnswerCommunicationCall Cmdlet'
  code: |-
    Import-Module Microsoft.Graph.CloudCommunications
    $params = @{
    	CallbackUri = "https://bot.contoso.com/api/calls"
    	AcceptedModalities = @(
    		"audio"
    	)
    	MediaConfig = @{
    		"@odata.type" = "#microsoft.graph.serviceHostedMediaConfig"
    		PreFetchMedia = @(
    		)
    	}
    }
    Invoke-MgAnswerCommunicationCall -CallId $callId -BodyParameter $params
  description: |-
    This example shows how to use the Invoke-MgAnswerCommunicationCall Cmdlet.
    To learn about permissions for this resource, see the [permissions reference](/graph/permissions-reference).
  summary: ""
parameters:
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: AcceptedModalities
  description: |+
    .

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Hashtable" data-throw-if-not-resolved="False" />
  name: AdditionalProperties
  description: |+
    Additional Parameters

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="IPathsQvpqn4CommunicationsCallsCallIdMicrosoftGraphAnswerPostRequestbodyContentApplicationJsonSchema" data-throw-if-not-resolved="False" />
  name: BodyParameter
  isRequired: true
  description: |+
    .
    To construct, see NOTES section for BODYPARAMETER properties and create a hash table.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: CallbackUri
  description: |+
    .

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: CallId
  isRequired: true
  description: |+
    The unique identifier of call

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Hashtable" data-throw-if-not-resolved="False" />
  name: CallOptions
  description: |+
    incomingCallOptions

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: None
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="ICloudCommunicationsIdentity" data-throw-if-not-resolved="False" />
  name: InputObject
  isRequired: true
  description: |+
    Identity Parameter
    To construct, see NOTES section for INPUTOBJECT properties and create a hash table.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Hashtable" data-throw-if-not-resolved="False" />
  name: MediaConfig
  description: |+
    mediaConfig

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: ParticipantCapacity
  description: |+
    .

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: PassThru
  description: |+
    Returns true when the command succeeds

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: None
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: Microsoft.Graph.CloudCommunications.Invoke-MgAnswerCommunicationCall
name: Invoke-MgAnswerCommunicationCall
description: |-
  Enable a bot to answer an incoming call.
  The incoming call request can be an invite from a participant in a group call or a peer-to-peer call.
  If an invite to a group call is received, the notification will contain the chatInfo and meetingInfo parameters.
  The bot is expected to answer, reject, or redirect the call before the call times out.
  The current timeout value is 15 seconds for regular scenarios, and 5 seconds for policy-based recording scenarios.
metadata:
  external help file: Microsoft.Graph.CloudCommunications-help.xml
  Module Name: Microsoft.Graph.CloudCommunications
  online version: https://learn.microsoft.com/powershell/module/microsoft.graph.cloudcommunications/invoke-mganswercommunicationcall
  schema: 2.0.0
