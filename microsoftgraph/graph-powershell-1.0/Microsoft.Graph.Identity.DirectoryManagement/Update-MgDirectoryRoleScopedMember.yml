### YamlMime:PowershellCmdlet
summary: |-
  Update the navigation property scopedMembers in directoryRoles

  > [!NOTE]
  > To view the beta release of this cmdlet, view [Update-MgBetaDirectoryRoleScopedMember](/powershell/module/Microsoft.Graph.Beta.Identity.DirectoryManagement/Update-MgBetaDirectoryRoleScopedMember?view=graph-powershell-beta)
module: Microsoft.Graph.Identity.DirectoryManagement
notes: |-
  ALIASES

  COMPLEX PARAMETER PROPERTIES

  To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.


  `BODYPARAMETER <IMicrosoftGraphScopedRoleMembership>`: scopedRoleMembership
    - `[(Any) <Object>]`: This indicates any property can be added to this object.
    - `[Id <String>]`: The unique idenfier for an entity. Read-only.
    - `[AdministrativeUnitId <String>]`: Unique identifier for the administrative unit that the directory role is scoped to
    - `[RoleId <String>]`: Unique identifier for the directory role that the member is in.
    - `[RoleMemberInfo <IMicrosoftGraphIdentity>]`: identity
      - `[(Any) <Object>]`: This indicates any property can be added to this object.
      - `[DisplayName <String>]`: The display name of the identity. Note that this might not always be available or up to date. For example, if a user changes their display name, the API might show the new value in a future response, but the items associated with the user won't show up as having changed when using delta.
      - `[Id <String>]`: Unique identifier for the identity.

  `INPUTOBJECT <IIdentityDirectoryManagementIdentity>`: Identity Parameter
    - `[AdministrativeUnitId <String>]`: The unique identifier of administrativeUnit
    - `[AllowedValueId <String>]`: The unique identifier of allowedValue
    - `[AttributeSetId <String>]`: The unique identifier of attributeSet
    - `[ContractId <String>]`: The unique identifier of contract
    - `[CustomSecurityAttributeDefinitionId <String>]`: The unique identifier of customSecurityAttributeDefinition
    - `[DeviceId <String>]`: The unique identifier of device
    - `[DirectoryObjectId <String>]`: The unique identifier of directoryObject
    - `[DirectoryRoleId <String>]`: The unique identifier of directoryRole
    - `[DirectoryRoleTemplateId <String>]`: The unique identifier of directoryRoleTemplate
    - `[DomainDnsRecordId <String>]`: The unique identifier of domainDnsRecord
    - `[DomainId <String>]`: The unique identifier of domain
    - `[ExtensionId <String>]`: The unique identifier of extension
    - `[IdentityProviderBaseId <String>]`: The unique identifier of identityProviderBase
    - `[InternalDomainFederationId <String>]`: The unique identifier of internalDomainFederation
    - `[OnPremisesDirectorySynchronizationId <String>]`: The unique identifier of onPremisesDirectorySynchronization
    - `[OrgContactId <String>]`: The unique identifier of orgContact
    - `[OrganizationId <String>]`: The unique identifier of organization
    - `[OrganizationalBrandingLocalizationId <String>]`: The unique identifier of organizationalBrandingLocalization
    - `[RoleTemplateId <String>]`: Alternate key of directoryRole
    - `[ScopedRoleMembershipId <String>]`: The unique identifier of scopedRoleMembership
    - `[SubscribedSkuId <String>]`: The unique identifier of subscribedSku
    - `[UserId <String>]`: The unique identifier of user

  `ROLEMEMBERINFO <IMicrosoftGraphIdentity>`: identity
    - `[(Any) <Object>]`: This indicates any property can be added to this object.
    - `[DisplayName <String>]`: The display name of the identity. Note that this might not always be available or up to date. For example, if a user changes their display name, the API might show the new value in a future response, but the items associated with the user won't show up as having changed when using delta.
    - `[Id <String>]`: Unique identifier for the identity.
inputs:
- name: <xref href="Microsoft.Graph.PowerShell.Models.IIdentityDirectoryManagementIdentity" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="Microsoft.Graph.PowerShell.Models.IMicrosoftGraphScopedRoleMembership" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.Graph.PowerShell.Models.IMicrosoftGraphScopedRoleMembership" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: Update-MgBetaDirectoryRoleScopedMember
  href: /powershell/module/Microsoft.Graph.Beta.Identity.DirectoryManagement/Update-MgBetaDirectoryRoleScopedMember?view=graph-powershell-beta
syntaxes:
- >-
  Update-MgDirectoryRoleScopedMember -DirectoryRoleId <String> -ScopedRoleMembershipId <String>

   [-AdditionalProperties <Hashtable>] [-AdministrativeUnitId <String>] [-Id <String>] [-RoleId <String>]

   [-RoleMemberInfo <IMicrosoftGraphIdentity>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Update-MgDirectoryRoleScopedMember -DirectoryRoleId <String> -ScopedRoleMembershipId <String>

   -BodyParameter <IMicrosoftGraphScopedRoleMembership> [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Update-MgDirectoryRoleScopedMember -InputObject <IIdentityDirectoryManagementIdentity>

   [-AdditionalProperties <Hashtable>] [-AdministrativeUnitId <String>] [-Id <String>] [-RoleId <String>]

   [-RoleMemberInfo <IMicrosoftGraphIdentity>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Update-MgDirectoryRoleScopedMember -InputObject <IIdentityDirectoryManagementIdentity>

   -BodyParameter <IMicrosoftGraphScopedRoleMembership> [-WhatIf] [-Confirm] [<CommonParameters>]
parameters:
- type: <xref href="Hashtable" data-throw-if-not-resolved="False" />
  name: AdditionalProperties
  description: |+
    Additional Parameters

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: AdministrativeUnitId
  description: |+
    Unique identifier for the administrative unit that the directory role is scoped to

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="IMicrosoftGraphScopedRoleMembership" data-throw-if-not-resolved="False" />
  name: BodyParameter
  isRequired: true
  description: |+
    scopedRoleMembership
    To construct, see NOTES section for BODYPARAMETER properties and create a hash table.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: None
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: DirectoryRoleId
  isRequired: true
  description: |+
    The unique identifier of directoryRole

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Id
  description: |+
    The unique idenfier for an entity.
    Read-only.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="IIdentityDirectoryManagementIdentity" data-throw-if-not-resolved="False" />
  name: InputObject
  isRequired: true
  description: |+
    Identity Parameter
    To construct, see NOTES section for INPUTOBJECT properties and create a hash table.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: RoleId
  description: |+
    Unique identifier for the directory role that the member is in.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="IMicrosoftGraphIdentity" data-throw-if-not-resolved="False" />
  name: RoleMemberInfo
  description: |+
    identity
    To construct, see NOTES section for ROLEMEMBERINFO properties and create a hash table.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: ScopedRoleMembershipId
  isRequired: true
  description: |+
    The unique identifier of scopedRoleMembership

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: None
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: Microsoft.Graph.Identity.DirectoryManagement.Update-MgDirectoryRoleScopedMember
name: Update-MgDirectoryRoleScopedMember
description: |-
  Update the navigation property scopedMembers in directoryRoles
metadata:
  external help file: Microsoft.Graph.Identity.DirectoryManagement-help.xml
  Module Name: Microsoft.Graph.Identity.DirectoryManagement
  online version: https://learn.microsoft.com/powershell/module/microsoft.graph.identity.directorymanagement/update-mgdirectoryrolescopedmember
  schema: 2.0.0
