### YamlMime:PowershellCmdlet
summary: |-
  Get the number of the resource

  > [!NOTE]
  > To view the beta release of this cmdlet, view [Get-MgBetaUserCalendarEvent](/powershell/module/Microsoft.Graph.Beta.Calendar/Get-MgBetaUserCalendarEvent?view=graph-powershell-beta)
module: Microsoft.Graph.Calendar
notes: |-
  ALIASES

  COMPLEX PARAMETER PROPERTIES

  To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.


  `INPUTOBJECT <ICalendarIdentity>`: Identity Parameter
    - `[AttachmentId <String>]`: The unique identifier of attachment
    - `[CalendarGroupId <String>]`: The unique identifier of calendarGroup
    - `[CalendarId <String>]`: The unique identifier of calendar
    - `[CalendarPermissionId <String>]`: The unique identifier of calendarPermission
    - `[EventId <String>]`: The unique identifier of event
    - `[EventId1 <String>]`: The unique identifier of event
    - `[ExtensionId <String>]`: The unique identifier of extension
    - `[GroupId <String>]`: The unique identifier of group
    - `[PlaceId <String>]`: The unique identifier of place
    - `[UserId <String>]`: The unique identifier of user
inputs:
- name: <xref href="Microsoft.Graph.PowerShell.Models.ICalendarIdentity" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="System.Int32" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: Get-MgBetaUserCalendarEvent
  href: /powershell/module/Microsoft.Graph.Beta.Calendar/Get-MgBetaUserCalendarEvent?view=graph-powershell-beta
syntaxes:
- Get-MgUserCalendarCount -UserId <String> [-Filter <String>] [<CommonParameters>]
- Get-MgUserCalendarCount -InputObject <ICalendarIdentity> [-Filter <String>] [<CommonParameters>]
examples:
- title: 'Example 1: Create an event in a specific calendar'
  code: |-
    Import-Module Microsoft.Graph.Calendar

    $params = @{
    	Subject = "Let's go for lunch"
    	Body = @{
    		ContentType = "HTML"
    		Content = "Does mid month work for you?"
    	}
    	Start = @{
    		DateTime = "2019-03-15T12:00:00"
    		TimeZone = "Pacific Standard Time"
    	}
    	End = @{
    		DateTime = "2019-03-15T14:00:00"
    		TimeZone = "Pacific Standard Time"
    	}
    	Location = @{
    		DisplayName = "Harry's Bar"
    	}
    	Attendees = @(
    		@{
    			EmailAddress = @{
    				Address = "adelev@contoso.onmicrosoft.com"
    				Name = "Adele Vance"
    			}
    			Type = "required"
    		}
    	)
    	TransactionId = "7E163156-7762-4BEB-A1C6-729EA81755A7"
    }

    # A UPN can also be used as -UserId.
    New-MgUserCalendarEvent -UserId $userId -CalendarId $calendarId -BodyParameter $params
  description: |-
    This example shows how to use the Get-MgUserCalendarEvent Cmdlet.

    To learn about permissions for this resource, see the [permissions reference](/graph/permissions-reference).
  summary: ""
- title: 'Example 2: Create and enable an event as an online meeting'
  code: |-
    Import-Module Microsoft.Graph.Calendar

    $params = @{
    	Subject = "Let's go for lunch"
    	Body = @{
    		ContentType = "HTML"
    		Content = "Does next month work for you?"
    	}
    	Start = @{
    		DateTime = "2019-03-10T12:00:00"
    		TimeZone = "Pacific Standard Time"
    	}
    	End = @{
    		DateTime = "2019-03-10T14:00:00"
    		TimeZone = "Pacific Standard Time"
    	}
    	Location = @{
    		DisplayName = "Harry's Bar"
    	}
    	Attendees = @(
    		@{
    			EmailAddress = @{
    				Address = "adelev@contoso.onmicrosoft.com"
    				Name = "Adele Vance"
    			}
    			Type = "required"
    		}
    	)
    	IsOnlineMeeting = $true
    	OnlineMeetingProvider = "teamsForBusiness"
    }

    # A UPN can also be used as -UserId.
    New-MgUserCalendarEvent -UserId $userId -CalendarId $calendarId -BodyParameter $params
  description: |-
    This example shows how to use the Get-MgUserCalendarEvent Cmdlet.

    To learn about permissions for this resource, see the [permissions reference](/graph/permissions-reference).
  summary: ""
parameters:
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Filter
  description: |+
    Filter items by property values

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="ICalendarIdentity" data-throw-if-not-resolved="False" />
  name: InputObject
  isRequired: true
  description: |+
    Identity Parameter
    To construct, see NOTES section for INPUTOBJECT properties and create a hash table.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: UserId
  isRequired: true
  description: |+
    The unique identifier of user

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
uid: Microsoft.Graph.Calendar.Get-MgUserCalendarEvent
name: Get-MgUserCalendarEvent
description: |-
  Get the number of the resource
metadata:
  external help file: Microsoft.Graph.Calendar-help.xml
  Module Name: Microsoft.Graph.Calendar
  online version: https://learn.microsoft.com/powershell/module/microsoft.graph.calendar/get-mgusercalendarcount
  schema: 2.0.0
