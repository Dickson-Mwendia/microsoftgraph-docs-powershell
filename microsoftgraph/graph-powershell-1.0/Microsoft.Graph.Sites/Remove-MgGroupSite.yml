### YamlMime:PowershellCmdlet
summary: |-
  The list of SharePoint sites in this group.
  Access the default site with /sites/root.

  > [!NOTE]
  > To view the beta release of this cmdlet, view [Remove-MgBetaGroupSite](/powershell/module/Microsoft.Graph.Beta.Sites/Remove-MgBetaGroupSite?view=graph-powershell-beta)
module: Microsoft.Graph.Sites
notes: |-
  ALIASES

  COMPLEX PARAMETER PROPERTIES

  To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.


  INPUTOBJECT `<ISitesIdentity>`: Identity Parameter
    - `[ColumnDefinitionId <String>]`: key: id of columnDefinition
    - `[ColumnLinkId <String>]`: key: id of columnLink
    - `[ContentTypeId <String>]`: key: id of contentType
    - `[EndDateTime <String>]`: Usage: endDateTime={endDateTime}
    - `[GroupId <String>]`: key: id of group
    - `[IncludePersonalNotebooks <Boolean?>]`: Usage: includePersonalNotebooks={includePersonalNotebooks}
    - `[Interval <String>]`: Usage: interval={interval}
    - `[ListId <String>]`: key: id of list
    - `[ListId1 <String>]`: Usage: listId={listId}
    - `[ListItemId <String>]`: key: id of listItem
    - `[ListItemVersionId <String>]`: key: id of listItemVersion
    - `[NotebookId <String>]`: key: id of notebook
    - `[OnenotePageId <String>]`: key: id of onenotePage
    - `[OnenoteSectionId <String>]`: key: id of onenoteSection
    - `[Path <String>]`: Usage: path={path}
    - `[PermissionId <String>]`: key: id of permission
    - `[RelationId <String>]`: key: id of relation
    - `[RichLongRunningOperationId <String>]`: key: id of richLongRunningOperation
    - `[SetId <String>]`: key: id of set
    - `[SetId1 <String>]`: key: id of set
    - `[SiteId <String>]`: key: id of site
    - `[SitePageId <String>]`: key: id of sitePage
    - `[StartDateTime <String>]`: Usage: startDateTime={startDateTime}
    - `[StoreId <String>]`: key: id of store
    - `[SubscriptionId <String>]`: key: id of subscription
    - `[TermId <String>]`: key: id of term
    - `[TermId1 <String>]`: key: id of term
    - `[Token <String>]`: Usage: token={token}
    - `[UserId <String>]`: key: id of user
inputs:
- name: <xref href="Microsoft.Graph.PowerShell.Models.IGroupsIdentity" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="Microsoft.Graph.PowerShell.Models.IPaths8J6HbtGroupsGroupIdSitesMicrosoftGraphRemovePostRequestbodyContentApplicationJsonSchema" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.Graph.PowerShell.Models.IMicrosoftGraphSite" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: Remove-MgBetaGroupSite
  href: /powershell/module/Microsoft.Graph.Beta.Sites/Remove-MgBetaGroupSite?view=graph-powershell-beta
syntaxes:
- >-
  Remove-MgGroupSite -GroupId <String> [-AdditionalProperties <Hashtable>] [-Value <IMicrosoftGraphSite[]>]

   [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Remove-MgGroupSite -GroupId <String>

   -BodyParameter <IPaths8J6HbtGroupsGroupIdSitesMicrosoftGraphRemovePostRequestbodyContentApplicationJsonSchema>

   [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Remove-MgGroupSite -InputObject <IGroupsIdentity> [-AdditionalProperties <Hashtable>]

   [-Value <IMicrosoftGraphSite[]>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Remove-MgGroupSite -InputObject <IGroupsIdentity>

   -BodyParameter <IPaths8J6HbtGroupsGroupIdSitesMicrosoftGraphRemovePostRequestbodyContentApplicationJsonSchema>

   [-WhatIf] [-Confirm] [<CommonParameters>]
parameters:
- type: <xref href="Hashtable" data-throw-if-not-resolved="False" />
  name: AdditionalProperties
  description: |+
    Additional Parameters

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="IPaths8J6HbtGroupsGroupIdSitesMicrosoftGraphRemovePostRequestbodyContentApplicationJsonSchema" data-throw-if-not-resolved="False" />
  name: BodyParameter
  isRequired: true
  description: |+
    .
    To construct, please use Get-Help -Online and see NOTES section for BODYPARAMETER properties and create a hash table.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: None
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: GroupId
  isRequired: true
  description: |+
    key: id of group

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="IGroupsIdentity" data-throw-if-not-resolved="False" />
  name: InputObject
  isRequired: true
  description: |+
    Identity Parameter
    To construct, please use Get-Help -Online and see NOTES section for INPUTOBJECT properties and create a hash table.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="IMicrosoftGraphSite" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Value
  description: |+
    .
    To construct, please use Get-Help -Online and see NOTES section for VALUE properties and create a hash table.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: None
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: Microsoft.Graph.Sites.Remove-MgGroupSite
name: Remove-MgGroupSite
description: |-
  The list of SharePoint sites in this group.
  Access the default site with /sites/root.
metadata:
  external help file: Microsoft.Graph.Groups-help.xml
  Module Name: Microsoft.Graph.Groups
  online version: https://docs.microsoft.com/en-us/powershell/module/microsoft.graph.sites/remove-mggroupsite
  schema: 2.0.0
