### YamlMime:PowershellCmdlet
summary: |-
  Create new navigation property to inheritsPermissionsFrom for roleManagement

  > [!NOTE]
  > To view the beta release of this cmdlet, view [New-MgBetaRoleManagementDirectoryRoleDefinitionInheritPermissionFrom](/powershell/module/Microsoft.Graph.Beta.Identity.Governance/New-MgBetaRoleManagementDirectoryRoleDefinitionInheritPermissionFrom?view=graph-powershell-beta)
module: Microsoft.Graph.Identity.Governance
notes: |-
  ALIASES

  COMPLEX PARAMETER PROPERTIES

  To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.


  `BODYPARAMETER <IMicrosoftGraphUnifiedRoleDefinition>`: unifiedRoleDefinition
    - `[(Any) <Object>]`: This indicates any property can be added to this object.
    - `[Id <String>]`: The unique idenfier for an entity. Read-only.
    - `[Description <String>]`: The description for the unifiedRoleDefinition. Read-only when isBuiltIn is true.
    - `[DisplayName <String>]`: The display name for the unifiedRoleDefinition. Read-only when isBuiltIn is true. Required.  Supports $filter (eq, in).
    - `[InheritsPermissionsFrom <IMicrosoftGraphUnifiedRoleDefinition[]>]`: Read-only collection of role definitions that the given role definition inherits from. Only Azure AD built-in roles (isBuiltIn is true) support this attribute. Supports $expand.
    - `[IsBuiltIn <Boolean?>]`: Flag indicating whether the role definition is part of the default set included in Azure Active Directory (Azure AD) or a custom definition. Read-only. Supports $filter (eq, in).
    - `[IsEnabled <Boolean?>]`: Flag indicating whether the role is enabled for assignment. If false the role is not available for assignment. Read-only when isBuiltIn is true.
    - `[ResourceScopes <String[]>]`: List of the scopes or permissions the role definition applies to. Currently only / is supported. Read-only when isBuiltIn is true. DO NOT USE. This will be deprecated soon. Attach scope to role assignment.
    - `[RolePermissions <IMicrosoftGraphUnifiedRolePermission[]>]`: List of permissions included in the role. Read-only when isBuiltIn is true. Required.
      - `[AllowedResourceActions <String[]>]`: Set of tasks that can be performed on a resource. Required.
      - `[Condition <String>]`: Optional constraints that must be met for the permission to be effective. Not supported for custom roles.
      - `[ExcludedResourceActions <String[]>]`: Set of tasks that may not be performed on a resource. Not yet supported.
    - `[TemplateId <String>]`: Custom template identifier that can be set when isBuiltIn is false but is read-only when isBuiltIn is true. This identifier is typically used if one needs an identifier to be the same across different directories.
    - `[Version <String>]`: Indicates version of the role definition. Read-only when isBuiltIn is true.

  `INHERITSPERMISSIONSFROM <IMicrosoftGraphUnifiedRoleDefinition[]>`: Read-only collection of role definitions that the given role definition inherits from. Only Azure AD built-in roles (isBuiltIn is true) support this attribute. Supports $expand.
    - `[Id <String>]`: The unique idenfier for an entity. Read-only.
    - `[Description <String>]`: The description for the unifiedRoleDefinition. Read-only when isBuiltIn is true.
    - `[DisplayName <String>]`: The display name for the unifiedRoleDefinition. Read-only when isBuiltIn is true. Required.  Supports $filter (eq, in).
    - `[InheritsPermissionsFrom <IMicrosoftGraphUnifiedRoleDefinition[]>]`: Read-only collection of role definitions that the given role definition inherits from. Only Azure AD built-in roles (isBuiltIn is true) support this attribute. Supports $expand.
    - `[IsBuiltIn <Boolean?>]`: Flag indicating whether the role definition is part of the default set included in Azure Active Directory (Azure AD) or a custom definition. Read-only. Supports $filter (eq, in).
    - `[IsEnabled <Boolean?>]`: Flag indicating whether the role is enabled for assignment. If false the role is not available for assignment. Read-only when isBuiltIn is true.
    - `[ResourceScopes <String[]>]`: List of the scopes or permissions the role definition applies to. Currently only / is supported. Read-only when isBuiltIn is true. DO NOT USE. This will be deprecated soon. Attach scope to role assignment.
    - `[RolePermissions <IMicrosoftGraphUnifiedRolePermission[]>]`: List of permissions included in the role. Read-only when isBuiltIn is true. Required.
      - `[AllowedResourceActions <String[]>]`: Set of tasks that can be performed on a resource. Required.
      - `[Condition <String>]`: Optional constraints that must be met for the permission to be effective. Not supported for custom roles.
      - `[ExcludedResourceActions <String[]>]`: Set of tasks that may not be performed on a resource. Not yet supported.
    - `[TemplateId <String>]`: Custom template identifier that can be set when isBuiltIn is false but is read-only when isBuiltIn is true. This identifier is typically used if one needs an identifier to be the same across different directories.
    - `[Version <String>]`: Indicates version of the role definition. Read-only when isBuiltIn is true.

  `INPUTOBJECT <IIdentityGovernanceIdentity>`: Identity Parameter
    - `[AccessPackageAssignmentId <String>]`: The unique identifier of accessPackageAssignment
    - `[AccessPackageAssignmentPolicyId <String>]`: The unique identifier of accessPackageAssignmentPolicy
    - `[AccessPackageAssignmentRequestId <String>]`: The unique identifier of accessPackageAssignmentRequest
    - `[AccessPackageCatalogId <String>]`: The unique identifier of accessPackageCatalog
    - `[AccessPackageId <String>]`: The unique identifier of accessPackage
    - `[AccessPackageId1 <String>]`: The unique identifier of accessPackage
    - `[AccessPackageQuestionId <String>]`: The unique identifier of accessPackageQuestion
    - `[AccessPackageResourceEnvironmentId <String>]`: The unique identifier of accessPackageResourceEnvironment
    - `[AccessPackageResourceId <String>]`: The unique identifier of accessPackageResource
    - `[AccessPackageResourceRequestId <String>]`: The unique identifier of accessPackageResourceRequest
    - `[AccessPackageResourceRoleId <String>]`: The unique identifier of accessPackageResourceRole
    - `[AccessPackageResourceRoleId1 <String>]`: The unique identifier of accessPackageResourceRole
    - `[AccessPackageResourceRoleScopeId <String>]`: The unique identifier of accessPackageResourceRoleScope
    - `[AccessPackageResourceScopeId <String>]`: The unique identifier of accessPackageResourceScope
    - `[AccessPackageResourceScopeId1 <String>]`: The unique identifier of accessPackageResourceScope
    - `[AccessReviewHistoryDefinitionId <String>]`: The unique identifier of accessReviewHistoryDefinition
    - `[AccessReviewHistoryInstanceId <String>]`: The unique identifier of accessReviewHistoryInstance
    - `[AccessReviewInstanceDecisionItemId <String>]`: The unique identifier of accessReviewInstanceDecisionItem
    - `[AccessReviewInstanceId <String>]`: The unique identifier of accessReviewInstance
    - `[AccessReviewReviewerId <String>]`: The unique identifier of accessReviewReviewer
    - `[AccessReviewScheduleDefinitionId <String>]`: The unique identifier of accessReviewScheduleDefinition
    - `[AccessReviewStageId <String>]`: The unique identifier of accessReviewStage
    - `[AgreementAcceptanceId <String>]`: The unique identifier of agreementAcceptance
    - `[AgreementFileLocalizationId <String>]`: The unique identifier of agreementFileLocalization
    - `[AgreementFileVersionId <String>]`: The unique identifier of agreementFileVersion
    - `[AgreementId <String>]`: The unique identifier of agreement
    - `[AppConsentRequestId <String>]`: The unique identifier of appConsentRequest
    - `[ApprovalId <String>]`: The unique identifier of approval
    - `[ApprovalStageId <String>]`: The unique identifier of approvalStage
    - `[ConnectedOrganizationId <String>]`: The unique identifier of connectedOrganization
    - `[CustomCalloutExtensionId <String>]`: The unique identifier of customCalloutExtension
    - `[CustomExtensionStageSettingId <String>]`: The unique identifier of customExtensionStageSetting
    - `[CustomTaskExtensionId <String>]`: The unique identifier of customTaskExtension
    - `[DirectoryObjectId <String>]`: The unique identifier of directoryObject
    - `[EndDateTime <DateTime?>]`: Usage: endDateTime={endDateTime}
    - `[GovernanceInsightId <String>]`: The unique identifier of governanceInsight
    - `[GroupId <String>]`: The unique identifier of group
    - `[IncompatibleAccessPackageId <String>]`: Usage: incompatibleAccessPackageId='{incompatibleAccessPackageId}'
    - `[On <String>]`: Usage: on='{on}'
    - `[RunId <String>]`: The unique identifier of run
    - `[StartDateTime <DateTime?>]`: Usage: startDateTime={startDateTime}
    - `[TaskDefinitionId <String>]`: The unique identifier of taskDefinition
    - `[TaskId <String>]`: The unique identifier of task
    - `[TaskProcessingResultId <String>]`: The unique identifier of taskProcessingResult
    - `[TaskReportId <String>]`: The unique identifier of taskReport
    - `[UnifiedRbacResourceActionId <String>]`: The unique identifier of unifiedRbacResourceAction
    - `[UnifiedRbacResourceNamespaceId <String>]`: The unique identifier of unifiedRbacResourceNamespace
    - `[UnifiedRoleAssignmentId <String>]`: The unique identifier of unifiedRoleAssignment
    - `[UnifiedRoleAssignmentScheduleId <String>]`: The unique identifier of unifiedRoleAssignmentSchedule
    - `[UnifiedRoleAssignmentScheduleInstanceId <String>]`: The unique identifier of unifiedRoleAssignmentScheduleInstance
    - `[UnifiedRoleAssignmentScheduleRequestId <String>]`: The unique identifier of unifiedRoleAssignmentScheduleRequest
    - `[UnifiedRoleDefinitionId <String>]`: The unique identifier of unifiedRoleDefinition
    - `[UnifiedRoleDefinitionId1 <String>]`: The unique identifier of unifiedRoleDefinition
    - `[UnifiedRoleEligibilityScheduleId <String>]`: The unique identifier of unifiedRoleEligibilitySchedule
    - `[UnifiedRoleEligibilityScheduleInstanceId <String>]`: The unique identifier of unifiedRoleEligibilityScheduleInstance
    - `[UnifiedRoleEligibilityScheduleRequestId <String>]`: The unique identifier of unifiedRoleEligibilityScheduleRequest
    - `[UserConsentRequestId <String>]`: The unique identifier of userConsentRequest
    - `[UserId <String>]`: The unique identifier of user
    - `[UserProcessingResultId <String>]`: The unique identifier of userProcessingResult
    - `[WorkflowId <String>]`: The unique identifier of workflow
    - `[WorkflowTemplateId <String>]`: The unique identifier of workflowTemplate
    - `[WorkflowVersionNumber <Int32?>]`: The unique identifier of workflowVersion

  `ROLEPERMISSIONS <IMicrosoftGraphUnifiedRolePermission[]>`: List of permissions included in the role. Read-only when isBuiltIn is true. Required.
    - `[AllowedResourceActions <String[]>]`: Set of tasks that can be performed on a resource. Required.
    - `[Condition <String>]`: Optional constraints that must be met for the permission to be effective. Not supported for custom roles.
    - `[ExcludedResourceActions <String[]>]`: Set of tasks that may not be performed on a resource. Not yet supported.

  ## RELATED LINKS
  [New-MgBetaRoleManagementDirectoryRoleDefinitionInheritPermissionFrom](/powershell/module/Microsoft.Graph.Beta.Identity.Governance/New-MgBetaRoleManagementDirectoryRoleDefinitionInheritPermissionFrom?view=graph-powershell-beta)

  ## RELATED LINKS
  [New-MgBetaRoleManagementDirectoryRoleDefinitionInheritPermissionFrom](/powershell/module/Microsoft.Graph.Beta.Identity.Governance/New-MgBetaRoleManagementDirectoryRoleDefinitionInheritPermissionFrom?view=graph-powershell-beta)
inputs:
- name: <xref href="Microsoft.Graph.PowerShell.Models.IIdentityGovernanceIdentity" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="Microsoft.Graph.PowerShell.Models.IMicrosoftGraphUnifiedRoleDefinition" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.Graph.PowerShell.Models.IMicrosoftGraphUnifiedRoleDefinition" data-throw-if-not-resolved="False" />
  description: ""
syntaxes:
- >-
  New-MgRoleManagementDirectoryRoleDefinitionInheritPermissionFrom -UnifiedRoleDefinitionId <String>

   [-AdditionalProperties <Hashtable>] [-Description <String>] [-DisplayName <String>] [-Id <String>]

   [-InheritsPermissionsFrom <IMicrosoftGraphUnifiedRoleDefinition[]>] [-IsBuiltIn] [-IsEnabled]

   [-ResourceScopes <String[]>] [-RolePermissions <IMicrosoftGraphUnifiedRolePermission[]>]

   [-TemplateId <String>] [-Version <String>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  New-MgRoleManagementDirectoryRoleDefinitionInheritPermissionFrom -UnifiedRoleDefinitionId <String>

   -BodyParameter <IMicrosoftGraphUnifiedRoleDefinition> [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  New-MgRoleManagementDirectoryRoleDefinitionInheritPermissionFrom -InputObject <IIdentityGovernanceIdentity>

   [-AdditionalProperties <Hashtable>] [-Description <String>] [-DisplayName <String>] [-Id <String>]

   [-InheritsPermissionsFrom <IMicrosoftGraphUnifiedRoleDefinition[]>] [-IsBuiltIn] [-IsEnabled]

   [-ResourceScopes <String[]>] [-RolePermissions <IMicrosoftGraphUnifiedRolePermission[]>]

   [-TemplateId <String>] [-Version <String>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  New-MgRoleManagementDirectoryRoleDefinitionInheritPermissionFrom -InputObject <IIdentityGovernanceIdentity>

   -BodyParameter <IMicrosoftGraphUnifiedRoleDefinition> [-WhatIf] [-Confirm] [<CommonParameters>]
parameters:
- type: <xref href="Hashtable" data-throw-if-not-resolved="False" />
  name: AdditionalProperties
  description: |+
    Additional Parameters

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="IMicrosoftGraphUnifiedRoleDefinition" data-throw-if-not-resolved="False" />
  name: BodyParameter
  isRequired: true
  description: |+
    unifiedRoleDefinition
    To construct, see NOTES section for BODYPARAMETER properties and create a hash table.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: None
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Description
  description: |+
    The description for the unifiedRoleDefinition.
    Read-only when isBuiltIn is true.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: DisplayName
  description: |+
    The display name for the unifiedRoleDefinition.
    Read-only when isBuiltIn is true.
    Required.
    Supports $filter (eq, in).

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Id
  description: |+
    The unique idenfier for an entity.
    Read-only.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="IMicrosoftGraphUnifiedRoleDefinition" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: InheritsPermissionsFrom
  description: |+
    Read-only collection of role definitions that the given role definition inherits from.
    Only Azure AD built-in roles (isBuiltIn is true) support this attribute.
    Supports $expand.
    To construct, see NOTES section for INHERITSPERMISSIONSFROM properties and create a hash table.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="IIdentityGovernanceIdentity" data-throw-if-not-resolved="False" />
  name: InputObject
  isRequired: true
  description: |+
    Identity Parameter
    To construct, see NOTES section for INPUTOBJECT properties and create a hash table.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: IsBuiltIn
  description: |+
    Flag indicating whether the role definition is part of the default set included in Azure Active Directory (Azure AD) or a custom definition.
    Read-only.
    Supports $filter (eq, in).

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: IsEnabled
  description: |+
    Flag indicating whether the role is enabled for assignment.
    If false the role is not available for assignment.
    Read-only when isBuiltIn is true.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: ResourceScopes
  description: |+
    List of the scopes or permissions the role definition applies to.
    Currently only / is supported.
    Read-only when isBuiltIn is true.
    DO NOT USE.
    This will be deprecated soon.
    Attach scope to role assignment.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="IMicrosoftGraphUnifiedRolePermission" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: RolePermissions
  description: |+
    List of permissions included in the role.
    Read-only when isBuiltIn is true.
    Required.
    To construct, see NOTES section for ROLEPERMISSIONS properties and create a hash table.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: TemplateId
  description: |+
    Custom template identifier that can be set when isBuiltIn is false but is read-only when isBuiltIn is true.
    This identifier is typically used if one needs an identifier to be the same across different directories.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: UnifiedRoleDefinitionId
  isRequired: true
  description: |+
    The unique identifier of unifiedRoleDefinition

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Version
  description: |+
    Indicates version of the role definition.
    Read-only when isBuiltIn is true.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: None
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: Microsoft.Graph.Identity.Governance.New-MgRoleManagementDirectoryRoleDefinitionInheritPermissionFrom
name: New-MgRoleManagementDirectoryRoleDefinitionInheritPermissionFrom
description: |-
  Create new navigation property to inheritsPermissionsFrom for roleManagement
metadata:
  external help file: Microsoft.Graph.Identity.Governance-help.xml
  Module Name: Microsoft.Graph.Identity.Governance
  online version: https://learn.microsoft.com/powershell/module/microsoft.graph.identity.governance/new-mgrolemanagementdirectoryroledefinitioninheritpermissionfrom
  schema: 2.0.0
