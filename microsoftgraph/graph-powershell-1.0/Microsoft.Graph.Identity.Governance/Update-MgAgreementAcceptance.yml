### YamlMime:PowershellCmdlet
summary: |-
  Update the navigation property acceptances in agreements

  > [!NOTE]
  > To view the beta release of this cmdlet, view [Update-MgBetaAgreementAcceptance](/powershell/module/Microsoft.Graph.Beta.Identity.Governance/Update-MgBetaAgreementAcceptance?view=graph-powershell-beta)
module: Microsoft.Graph.Identity.Governance
notes: |-
  ALIASES

  COMPLEX PARAMETER PROPERTIES

  To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.


  `BODYPARAMETER <IMicrosoftGraphAgreementAcceptance>`: agreementAcceptance
    - `[(Any) <Object>]`: This indicates any property can be added to this object.
    - `[Id <String>]`: The unique idenfier for an entity. Read-only.
    - `[AgreementFileId <String>]`: The identifier of the agreement file accepted by the user.
    - `[AgreementId <String>]`: The identifier of the agreement.
    - `[DeviceDisplayName <String>]`: The display name of the device used for accepting the agreement.
    - `[DeviceId <String>]`: The unique identifier of the device used for accepting the agreement. Supports $filter (eq) and eq for null values.
    - `[DeviceOSType <String>]`: The operating system used to accept the agreement.
    - `[DeviceOSVersion <String>]`: The operating system version of the device used to accept the agreement.
    - `[ExpirationDateTime <DateTime?>]`: The expiration date time of the acceptance. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Supports $filter (eq, ge, le) and eq for null values.
    - `[RecordedDateTime <DateTime?>]`: The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
    - `[State <String>]`: agreementAcceptanceState
    - `[UserDisplayName <String>]`: Display name of the user when the acceptance was recorded.
    - `[UserEmail <String>]`: Email of the user when the acceptance was recorded.
    - `[UserId <String>]`: The identifier of the user who accepted the agreement. Supports $filter (eq).
    - `[UserPrincipalName <String>]`: UPN of the user when the acceptance was recorded.

  `INPUTOBJECT <IIdentityGovernanceIdentity>`: Identity Parameter
    - `[AccessPackageAssignmentId <String>]`: The unique identifier of accessPackageAssignment
    - `[AccessPackageAssignmentPolicyId <String>]`: The unique identifier of accessPackageAssignmentPolicy
    - `[AccessPackageAssignmentRequestId <String>]`: The unique identifier of accessPackageAssignmentRequest
    - `[AccessPackageCatalogId <String>]`: The unique identifier of accessPackageCatalog
    - `[AccessPackageId <String>]`: The unique identifier of accessPackage
    - `[AccessPackageId1 <String>]`: The unique identifier of accessPackage
    - `[AccessPackageQuestionId <String>]`: The unique identifier of accessPackageQuestion
    - `[AccessPackageResourceEnvironmentId <String>]`: The unique identifier of accessPackageResourceEnvironment
    - `[AccessPackageResourceId <String>]`: The unique identifier of accessPackageResource
    - `[AccessPackageResourceRequestId <String>]`: The unique identifier of accessPackageResourceRequest
    - `[AccessPackageResourceRoleId <String>]`: The unique identifier of accessPackageResourceRole
    - `[AccessPackageResourceRoleId1 <String>]`: The unique identifier of accessPackageResourceRole
    - `[AccessPackageResourceRoleScopeId <String>]`: The unique identifier of accessPackageResourceRoleScope
    - `[AccessPackageResourceScopeId <String>]`: The unique identifier of accessPackageResourceScope
    - `[AccessPackageResourceScopeId1 <String>]`: The unique identifier of accessPackageResourceScope
    - `[AccessReviewHistoryDefinitionId <String>]`: The unique identifier of accessReviewHistoryDefinition
    - `[AccessReviewHistoryInstanceId <String>]`: The unique identifier of accessReviewHistoryInstance
    - `[AccessReviewInstanceDecisionItemId <String>]`: The unique identifier of accessReviewInstanceDecisionItem
    - `[AccessReviewInstanceId <String>]`: The unique identifier of accessReviewInstance
    - `[AccessReviewReviewerId <String>]`: The unique identifier of accessReviewReviewer
    - `[AccessReviewScheduleDefinitionId <String>]`: The unique identifier of accessReviewScheduleDefinition
    - `[AccessReviewStageId <String>]`: The unique identifier of accessReviewStage
    - `[AgreementAcceptanceId <String>]`: The unique identifier of agreementAcceptance
    - `[AgreementFileLocalizationId <String>]`: The unique identifier of agreementFileLocalization
    - `[AgreementFileVersionId <String>]`: The unique identifier of agreementFileVersion
    - `[AgreementId <String>]`: The unique identifier of agreement
    - `[AppConsentRequestId <String>]`: The unique identifier of appConsentRequest
    - `[ApprovalId <String>]`: The unique identifier of approval
    - `[ApprovalStageId <String>]`: The unique identifier of approvalStage
    - `[ConnectedOrganizationId <String>]`: The unique identifier of connectedOrganization
    - `[CustomCalloutExtensionId <String>]`: The unique identifier of customCalloutExtension
    - `[CustomExtensionStageSettingId <String>]`: The unique identifier of customExtensionStageSetting
    - `[CustomTaskExtensionId <String>]`: The unique identifier of customTaskExtension
    - `[DirectoryObjectId <String>]`: The unique identifier of directoryObject
    - `[EndDateTime <DateTime?>]`: Usage: endDateTime={endDateTime}
    - `[GovernanceInsightId <String>]`: The unique identifier of governanceInsight
    - `[GroupId <String>]`: The unique identifier of group
    - `[IncompatibleAccessPackageId <String>]`: Usage: incompatibleAccessPackageId='{incompatibleAccessPackageId}'
    - `[On <String>]`: Usage: on='{on}'
    - `[RunId <String>]`: The unique identifier of run
    - `[StartDateTime <DateTime?>]`: Usage: startDateTime={startDateTime}
    - `[TaskDefinitionId <String>]`: The unique identifier of taskDefinition
    - `[TaskId <String>]`: The unique identifier of task
    - `[TaskProcessingResultId <String>]`: The unique identifier of taskProcessingResult
    - `[TaskReportId <String>]`: The unique identifier of taskReport
    - `[UnifiedRbacResourceActionId <String>]`: The unique identifier of unifiedRbacResourceAction
    - `[UnifiedRbacResourceNamespaceId <String>]`: The unique identifier of unifiedRbacResourceNamespace
    - `[UnifiedRoleAssignmentId <String>]`: The unique identifier of unifiedRoleAssignment
    - `[UnifiedRoleAssignmentScheduleId <String>]`: The unique identifier of unifiedRoleAssignmentSchedule
    - `[UnifiedRoleAssignmentScheduleInstanceId <String>]`: The unique identifier of unifiedRoleAssignmentScheduleInstance
    - `[UnifiedRoleAssignmentScheduleRequestId <String>]`: The unique identifier of unifiedRoleAssignmentScheduleRequest
    - `[UnifiedRoleDefinitionId <String>]`: The unique identifier of unifiedRoleDefinition
    - `[UnifiedRoleDefinitionId1 <String>]`: The unique identifier of unifiedRoleDefinition
    - `[UnifiedRoleEligibilityScheduleId <String>]`: The unique identifier of unifiedRoleEligibilitySchedule
    - `[UnifiedRoleEligibilityScheduleInstanceId <String>]`: The unique identifier of unifiedRoleEligibilityScheduleInstance
    - `[UnifiedRoleEligibilityScheduleRequestId <String>]`: The unique identifier of unifiedRoleEligibilityScheduleRequest
    - `[UserConsentRequestId <String>]`: The unique identifier of userConsentRequest
    - `[UserId <String>]`: The unique identifier of user
    - `[UserProcessingResultId <String>]`: The unique identifier of userProcessingResult
    - `[WorkflowId <String>]`: The unique identifier of workflow
    - `[WorkflowTemplateId <String>]`: The unique identifier of workflowTemplate
    - `[WorkflowVersionNumber <Int32?>]`: The unique identifier of workflowVersion
inputs:
- name: <xref href="Microsoft.Graph.PowerShell.Models.IIdentityGovernanceIdentity" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="Microsoft.Graph.PowerShell.Models.IMicrosoftGraphAgreementAcceptance" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.Graph.PowerShell.Models.IMicrosoftGraphAgreementAcceptance" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: Update-MgBetaAgreementAcceptance
  href: /powershell/module/Microsoft.Graph.Beta.Identity.Governance/Update-MgBetaAgreementAcceptance?view=graph-powershell-beta
syntaxes:
- >-
  Update-MgAgreementAcceptance -AgreementAcceptanceId <String> -AgreementId <String>

   [-AdditionalProperties <Hashtable>] [-AgreementFileId <String>] [-AgreementId1 <String>]

   [-DeviceDisplayName <String>] [-DeviceId <String>] [-DeviceOSType <String>] [-DeviceOSVersion <String>]

   [-ExpirationDateTime <DateTime>] [-Id <String>] [-RecordedDateTime <DateTime>] [-State <String>]

   [-UserDisplayName <String>] [-UserEmail <String>] [-UserId <String>] [-UserPrincipalName <String>] [-WhatIf]

   [-Confirm] [<CommonParameters>]
- >-
  Update-MgAgreementAcceptance -AgreementAcceptanceId <String> -AgreementId <String>

   -BodyParameter <IMicrosoftGraphAgreementAcceptance> [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Update-MgAgreementAcceptance [-AgreementId <String>] -InputObject <IIdentityGovernanceIdentity>

   [-AdditionalProperties <Hashtable>] [-AgreementFileId <String>] [-DeviceDisplayName <String>]

   [-DeviceId <String>] [-DeviceOSType <String>] [-DeviceOSVersion <String>] [-ExpirationDateTime <DateTime>]

   [-Id <String>] [-RecordedDateTime <DateTime>] [-State <String>] [-UserDisplayName <String>]

   [-UserEmail <String>] [-UserId <String>] [-UserPrincipalName <String>] [-WhatIf] [-Confirm]

   [<CommonParameters>]
- >-
  Update-MgAgreementAcceptance -InputObject <IIdentityGovernanceIdentity>

   -BodyParameter <IMicrosoftGraphAgreementAcceptance> [-WhatIf] [-Confirm] [<CommonParameters>]
parameters:
- type: <xref href="Hashtable" data-throw-if-not-resolved="False" />
  name: AdditionalProperties
  description: |+
    Additional Parameters

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: AgreementAcceptanceId
  isRequired: true
  description: |+
    The unique identifier of agreementAcceptance

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: AgreementFileId
  description: |+
    The identifier of the agreement file accepted by the user.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: AgreementId
  isRequired: true
  description: |+
    The unique identifier of agreement

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: AgreementId1
  description: |+
    The identifier of the agreement.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="IMicrosoftGraphAgreementAcceptance" data-throw-if-not-resolved="False" />
  name: BodyParameter
  isRequired: true
  description: |+
    agreementAcceptance
    To construct, see NOTES section for BODYPARAMETER properties and create a hash table.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: None
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: DeviceDisplayName
  description: |+
    The display name of the device used for accepting the agreement.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: DeviceId
  description: |+
    The unique identifier of the device used for accepting the agreement.
    Supports $filter (eq) and eq for null values.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: DeviceOSType
  description: |+
    The operating system used to accept the agreement.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: DeviceOSVersion
  description: |+
    The operating system version of the device used to accept the agreement.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="DateTime" data-throw-if-not-resolved="False" />
  name: ExpirationDateTime
  description: |+
    The expiration date time of the acceptance.
    The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time.
    For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
    Supports $filter (eq, ge, le) and eq for null values.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Id
  description: |+
    The unique idenfier for an entity.
    Read-only.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="IIdentityGovernanceIdentity" data-throw-if-not-resolved="False" />
  name: InputObject
  isRequired: true
  description: |+
    Identity Parameter
    To construct, see NOTES section for INPUTOBJECT properties and create a hash table.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="DateTime" data-throw-if-not-resolved="False" />
  name: RecordedDateTime
  description: |+
    The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time.
    For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: State
  description: |+
    agreementAcceptanceState

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: UserDisplayName
  description: |+
    Display name of the user when the acceptance was recorded.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: UserEmail
  description: |+
    Email of the user when the acceptance was recorded.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: UserId
  description: |+
    The identifier of the user who accepted the agreement.
    Supports $filter (eq).

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: UserPrincipalName
  description: |+
    UPN of the user when the acceptance was recorded.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: None
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: Microsoft.Graph.Identity.Governance.Update-MgAgreementAcceptance
name: Update-MgAgreementAcceptance
description: |-
  Update the navigation property acceptances in agreements
metadata:
  external help file: Microsoft.Graph.Identity.Governance-help.xml
  Module Name: Microsoft.Graph.Identity.Governance
  online version: https://learn.microsoft.com/powershell/module/microsoft.graph.identity.governance/update-mgagreementacceptance
  schema: 2.0.0
