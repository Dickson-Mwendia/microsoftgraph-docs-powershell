### YamlMime:PowershellCmdlet
summary: |-
  Get the properties and relationships of an application object.

  > [!NOTE]
  > To view the beta release of this cmdlet, view [Get-MgBetaApplication](/powershell/module/Microsoft.Graph.Beta.Applications/Get-MgBetaApplication?view=graph-powershell-beta)
module: Microsoft.Graph.Applications
notes: |-
  ALIASES

  COMPLEX PARAMETER PROPERTIES

  To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.


  `INPUTOBJECT <IApplicationsIdentity>`: Identity Parameter
    - `[AppId <String>]`: Alternate key of application
    - `[AppManagementPolicyId <String>]`: The unique identifier of appManagementPolicy
    - `[AppRoleAssignmentId <String>]`: The unique identifier of appRoleAssignment
    - `[ApplicationId <String>]`: The unique identifier of application
    - `[ApplicationTemplateId <String>]`: The unique identifier of applicationTemplate
    - `[ClaimsMappingPolicyId <String>]`: The unique identifier of claimsMappingPolicy
    - `[DelegatedPermissionClassificationId <String>]`: The unique identifier of delegatedPermissionClassification
    - `[DirectoryDefinitionId <String>]`: The unique identifier of directoryDefinition
    - `[DirectoryObjectId <String>]`: The unique identifier of directoryObject
    - `[EndpointId <String>]`: The unique identifier of endpoint
    - `[ExtensionPropertyId <String>]`: The unique identifier of extensionProperty
    - `[FederatedIdentityCredentialId <String>]`: The unique identifier of federatedIdentityCredential
    - `[GroupId <String>]`: The unique identifier of group
    - `[HomeRealmDiscoveryPolicyId <String>]`: The unique identifier of homeRealmDiscoveryPolicy
    - `[OAuth2PermissionGrantId <String>]`: The unique identifier of oAuth2PermissionGrant
    - `[ServicePrincipalId <String>]`: The unique identifier of servicePrincipal
    - `[SynchronizationJobId <String>]`: The unique identifier of synchronizationJob
    - `[SynchronizationTemplateId <String>]`: The unique identifier of synchronizationTemplate
    - `[TokenIssuancePolicyId <String>]`: The unique identifier of tokenIssuancePolicy
    - `[TokenLifetimePolicyId <String>]`: The unique identifier of tokenLifetimePolicy
    - `[UserId <String>]`: The unique identifier of user
inputs:
- name: <xref href="Microsoft.Graph.PowerShell.Models.IApplicationsIdentity" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.Graph.PowerShell.Models.IMicrosoftGraphApplication" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: Get-MgBetaApplication
  href: /powershell/module/Microsoft.Graph.Beta.Applications/Get-MgBetaApplication?view=graph-powershell-beta
syntaxes:
- >-
  Get-MgApplication [-ExpandProperty <String[]>] [-Property <String[]>] [-Filter <String>] [-Search <String>]

   [-Skip <Int32>] [-Sort <String[]>] [-Top <Int32>] [-ConsistencyLevel <String>] [-PageSize <Int32>] [-All]

   [-CountVariable <String>] [<CommonParameters>]
- >-
  Get-MgApplication -ApplicationId <String> [-ExpandProperty <String[]>] [-Property <String[]>]

   [<CommonParameters>]
- >-
  Get-MgApplication -InputObject <IApplicationsIdentity> [-ExpandProperty <String[]>] [-Property <String[]>]

   [<CommonParameters>]
examples:
- title: 'Example 1: Get a list of applications'
  code: |-
    Connect-MgGraph -Scopes 'Application.Read.All'
    Get-MgApplication | 
      Format-List Id, DisplayName, AppId, SignInAudience, PublisherDomain

    Id              : 8ea936e0-cb74-46c0-8408-d4614a596267
    DisplayName     : Test App
    AppId           : 39b09640-ec3e-44c9-b3de-f52db4e1cf66
    SignInAudience  : AzureADandPersonalMicrosoftAccount
    PublisherDomain : Contoso.com
  description: |-
    This examples gets a list of all the applications.

    To learn about other permissions for this resource, see the [permissions reference](/graph/permissions-reference).

    To consent to any of these permissions run `Connect-MgGraph -Scopes Permission`. For example, `Connect-MgGraph -Scopes Application.Read.All, Application.ReadWrite.All`.
  summary: ""
- title: 'Example 2: Get an application by Id'
  code: |-
    Connect-MgGraph -Scopes 'Application.Read.All'
    Get-MgApplication -Filter "AppId eq '39b09640-ec3e-44c9-b3de-f52db4e1cf66'" | 
      Format-List Id, DisplayName, AppId, SignInAudience, PublisherDomain

    DisplayName     : Test App
    AppId           : 39b09640-ec3e-44c9-b3de-f52db4e1cf66
    SignInAudience  : AzureADandPersonalMicrosoftAccount
    PublisherDomain : Contoso.com
  description: |-
    This examples gets the application by the specified Id.

    To learn about other permissions for this resource, see the [permissions reference](/graph/permissions-reference).

    To consent to any of these permissions run `Connect-MgGraph -Scopes Permission`. For example, `Connect-MgGraph -Scopes Application.Read.All, Application.ReadWrite.All`.
  summary: ""
- title: 'Example 3: Get a count of all applications'
  code: |-
    Connect-MgGraph -Scopes 'Application.Read.All'
    Get-MgApplication -ConsistencyLevel eventual -Count appCount

    Id                                   DisplayName        AppId                                SignInAudience                     PublisherDomain
    --                                   -----------        -----                                --------------                     ---------------
    4f6f867b-4c34-44b2-9680-fe49d024ce74 New apps           bb6e3bbc-8048-412e-a55f-a6bbd8bac525 AzureADandPersonalMicrosoftAccount Contoso.com
    bce20771-2a69-41e5-a0dd-125ac2fa2708 Example 3 App      ffdf268a-2fe2-49e1-8cd7-66ecb61641ec AzureADandPersonalMicrosoftAccount Contoso.com
    dcaa0c3a-8dfa-4b47-bc04-0edbab42043a Principal-Test App bd38ad43-6c46-4cc6-b65c-a0db533a2a6f AzureADMyOrg                       Contoso.com
    f6b30057-7095-4e2c-89f8-224149f591b7 Testing App        00e80963-9bc0-4147-b9e0-2ba56093e7e6 AzureADandPersonalMicrosoftAccount Contoso.com
    fe4caed6-6182-4aca-b70b-b114c5334a8a New app            641992e9-d176-4aff-a3b6-a867b3ba48c4 AzureADandPersonalMicrosoftAccount Contoso.com
  description: |-
    This example gets a list of all applications. The $appCount variable contains the count of the objects in the result. Advanced query requires the ConsistencyLevel parameter set to `eventual` and the Count parameter in the command. For more information about *ConsistencyLevel* and *Count*, see [Advanced query capabilities on Azure AD directory objects](/graph/aad-advanced-queries).

    To learn about other permissions for this resource, see the [permissions reference](/graph/permissions-reference).

    To consent to any of these permissions run `Connect-MgGraph -Scopes Permission`. For example, `Connect-MgGraph -Scopes Application.Read.All, Application.ReadWrite.All`.
  summary: ""
- title: "Example 4: Use -Search to get all the applications whose display name contains 'Test' including a count of the returned applications"
  code: |-
    Connect-MgGraph -Scopes 'Application.Read.All'
    Get-MgApplication -ConsistencyLevel eventual -Count appCount -Search '"DisplayName:Test"'

    Id                                   DisplayName        AppId                                SignInAudience                     PublisherDomain
    --                                   -----------        -----                                --------------                     ---------------
    dcaa0c3a-8dfa-4b47-bc04-0edbab42043a Principal-Test App bd38ad43-6c46-4cc6-b65c-a0db533a2a6f AzureADMyOrg                       Contoso.com
    f6b30057-7095-4e2c-89f8-224149f591b7 Testing App        00e80963-9bc0-4147-b9e0-2ba56093e7e6 AzureADandPersonalMicrosoftAccount Contoso.com
  description: |-
    This example returns all applications whose display name contains 'Test'. The $appCount variable contains the count of the objects in the result. Advanced query requires the ConsistencyLevel parameter set to `eventual` and the Count parameter in the command. For more information about *ConsistencyLevel* and *Count*, see [Advanced query capabilities on Azure AD directory objects](/graph/aad-advanced-queries).

    To learn about other permissions for this resource, see the [permissions reference](/graph/permissions-reference).

    To consent to any of these permissions run `Connect-MgGraph -Scopes Permission`. For example, `Connect-MgGraph -Scopes Application.Read.All, Application.ReadWrite.All`.
  summary: ""
- title: "Example 5: Use -Filter to get all the applications with a display name that starts with 'New' including a count of the returned applications, with the results ordered by display name"
  code: |-
    Connect-MgGraph -Scopes 'Application.Read.All'
    Get-MgApplication -ConsistencyLevel eventual -Count appCount -Filter "startsWith(DisplayName, 'New')" -OrderBy DisplayName

    Id                                   DisplayName AppId                                SignInAudience                     PublisherDomain
    --                                   ----------- -----                                --------------                     ---------------
    fe4caed6-6182-4aca-b70b-b114c5334a8a New app     641992e9-d176-4aff-a3b6-a867b3ba48c4 AzureADandPersonalMicrosoftAccount Contoso.com
    0672d487-4c0c-475a-bf22-0e714f015597 New apps    ced14895-14ac-4dcf-8b93-0779f60c000d AzureADandPersonalMicrosoftAccount Contoso.com
  description: |-
    This example returns all applications whose display name starts with 'New'. The $appCount variable contains the count of the objects in the result. Advanced query requires the ConsistencyLevel parameter set to `eventual` and the Count parameter in the command. For more information about *ConsistencyLevel* and *Count*, see [Advanced query capabilities on Azure AD directory objects](/graph/aad-advanced-queries).

    To learn about other permissions for this resource, see the [permissions reference](/graph/permissions-reference).

    To consent to any of these permissions run `Connect-MgGraph -Scopes Permission`. For example, `Connect-MgGraph -Scopes Application.Read.All, Application.ReadWrite.All`.
  summary: ""
parameters:
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: All
  description: |+
    List all pages.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: ApplicationId
  isRequired: true
  description: |+
    The unique identifier of application

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: ConsistencyLevel
  description: |+
    Indicates the requested consistency level.
    Documentation URL: https://docs.microsoft.com/graph/aad-advanced-queries

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: CountVariable
  description: |+
    Specifies a count of the total number of items in a collection.
    By default, this variable will be set in the global scope.

  defaultValue: None
  position: Named
  aliases: CV
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: ExpandProperty
  description: |+
    Expand related entities

  defaultValue: None
  position: Named
  aliases: Expand
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Filter
  description: |+
    Filter items by property values

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="IApplicationsIdentity" data-throw-if-not-resolved="False" />
  name: InputObject
  isRequired: true
  description: |+
    Identity Parameter
    To construct, see NOTES section for INPUTOBJECT properties and create a hash table.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: PageSize
  description: |+
    Sets the page size of results.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Property
  description: |+
    Select properties to be returned

  defaultValue: None
  position: Named
  aliases: Select
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Search
  description: |+
    Search items by search phrases

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: Skip
  description: |+
    Skip the first n items

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Sort
  description: |+
    Order items by property values

  defaultValue: None
  position: Named
  aliases: OrderBy
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: Top
  description: |+
    Show only the first n items

  defaultValue: None
  position: Named
  aliases: Limit
  parameterValueGroup: ""
uid: Microsoft.Graph.Applications.Get-MgApplication
name: Get-MgApplication
description: |-
  Get the properties and relationships of an application object.
metadata:
  external help file: Microsoft.Graph.Applications-help.xml
  Module Name: Microsoft.Graph.Applications
  online version: https://learn.microsoft.com/powershell/module/microsoft.graph.applications/get-mgapplication
  schema: 2.0.0
