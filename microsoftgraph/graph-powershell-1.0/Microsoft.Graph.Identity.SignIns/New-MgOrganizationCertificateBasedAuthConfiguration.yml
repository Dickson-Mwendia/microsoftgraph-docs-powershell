### YamlMime:PowershellCmdlet
summary: |-
  Create a new certificateBasedAuthConfiguration object.

  > [!NOTE]
  > To view the beta release of this cmdlet, view [New-MgBetaOrganizationCertificateBasedAuthConfiguration](/powershell/module/Microsoft.Graph.Beta.Identity.SignIns/New-MgBetaOrganizationCertificateBasedAuthConfiguration?view=graph-powershell-beta)
module: Microsoft.Graph.Identity.SignIns
notes: |-
  ALIASES

  COMPLEX PARAMETER PROPERTIES

  To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.


  `BODYPARAMETER <IMicrosoftGraphCertificateBasedAuthConfiguration>`: certificateBasedAuthConfiguration
    - `[(Any) <Object>]`: This indicates any property can be added to this object.
    - `[Id <String>]`: The unique idenfier for an entity. Read-only.
    - `[CertificateAuthorities <IMicrosoftGraphCertificateAuthority[]>]`: Collection of certificate authorities which creates a trusted certificate chain.
      - `[Certificate <Byte[]>]`: Required. The base64 encoded string representing the public certificate.
      - `[CertificateRevocationListUrl <String>]`: The URL of the certificate revocation list.
      - `[DeltaCertificateRevocationListUrl <String>]`: The URL contains the list of all revoked certificates since the last time a full certificate revocaton list was created.
      - `[IsRootAuthority <Boolean?>]`: Required. true if the trusted certificate is a root authority, false if the trusted certificate is an intermediate authority.
      - `[Issuer <String>]`: The issuer of the certificate, calculated from the certificate value. Read-only.
      - `[IssuerSki <String>]`: The subject key identifier of the certificate, calculated from the certificate value. Read-only.

  `CERTIFICATEAUTHORITIES <IMicrosoftGraphCertificateAuthority[]>`: Collection of certificate authorities which creates a trusted certificate chain.
    - `[Certificate <Byte[]>]`: Required. The base64 encoded string representing the public certificate.
    - `[CertificateRevocationListUrl <String>]`: The URL of the certificate revocation list.
    - `[DeltaCertificateRevocationListUrl <String>]`: The URL contains the list of all revoked certificates since the last time a full certificate revocaton list was created.
    - `[IsRootAuthority <Boolean?>]`: Required. true if the trusted certificate is a root authority, false if the trusted certificate is an intermediate authority.
    - `[Issuer <String>]`: The issuer of the certificate, calculated from the certificate value. Read-only.
    - `[IssuerSki <String>]`: The subject key identifier of the certificate, calculated from the certificate value. Read-only.

  `INPUTOBJECT <IIdentitySignInsIdentity>`: Identity Parameter
    - `[ActivityBasedTimeoutPolicyId <String>]`: The unique identifier of activityBasedTimeoutPolicy
    - `[AppManagementPolicyId <String>]`: The unique identifier of appManagementPolicy
    - `[AuthenticationCombinationConfigurationId <String>]`: The unique identifier of authenticationCombinationConfiguration
    - `[AuthenticationContextClassReferenceId <String>]`: The unique identifier of authenticationContextClassReference
    - `[AuthenticationMethodConfigurationId <String>]`: The unique identifier of authenticationMethodConfiguration
    - `[AuthenticationMethodId <String>]`: The unique identifier of authenticationMethod
    - `[AuthenticationMethodModeDetailId <String>]`: The unique identifier of authenticationMethodModeDetail
    - `[AuthenticationStrengthPolicyId <String>]`: The unique identifier of authenticationStrengthPolicy
    - `[B2XIdentityUserFlowId <String>]`: The unique identifier of b2xIdentityUserFlow
    - `[BitlockerRecoveryKeyId <String>]`: The unique identifier of bitlockerRecoveryKey
    - `[CertificateBasedAuthConfigurationId <String>]`: The unique identifier of certificateBasedAuthConfiguration
    - `[ClaimsMappingPolicyId <String>]`: The unique identifier of claimsMappingPolicy
    - `[ConditionalAccessPolicyId <String>]`: The unique identifier of conditionalAccessPolicy
    - `[ConditionalAccessTemplateId <String>]`: The unique identifier of conditionalAccessTemplate
    - `[CrossTenantAccessPolicyConfigurationPartnerTenantId <String>]`: The unique identifier of crossTenantAccessPolicyConfigurationPartner
    - `[DataPolicyOperationId <String>]`: The unique identifier of dataPolicyOperation
    - `[DirectoryObjectId <String>]`: The unique identifier of directoryObject
    - `[EmailAuthenticationMethodId <String>]`: The unique identifier of emailAuthenticationMethod
    - `[FeatureRolloutPolicyId <String>]`: The unique identifier of featureRolloutPolicy
    - `[Fido2AuthenticationMethodId <String>]`: The unique identifier of fido2AuthenticationMethod
    - `[HomeRealmDiscoveryPolicyId <String>]`: The unique identifier of homeRealmDiscoveryPolicy
    - `[IdentityApiConnectorId <String>]`: The unique identifier of identityApiConnector
    - `[IdentityProviderBaseId <String>]`: The unique identifier of identityProviderBase
    - `[IdentityProviderId <String>]`: The unique identifier of identityProvider
    - `[IdentityUserFlowAttributeAssignmentId <String>]`: The unique identifier of identityUserFlowAttributeAssignment
    - `[IdentityUserFlowAttributeId <String>]`: The unique identifier of identityUserFlowAttribute
    - `[InvitationId <String>]`: The unique identifier of invitation
    - `[LongRunningOperationId <String>]`: The unique identifier of longRunningOperation
    - `[MicrosoftAuthenticatorAuthenticationMethodId <String>]`: The unique identifier of microsoftAuthenticatorAuthenticationMethod
    - `[NamedLocationId <String>]`: The unique identifier of namedLocation
    - `[OAuth2PermissionGrantId <String>]`: The unique identifier of oAuth2PermissionGrant
    - `[OrganizationId <String>]`: The unique identifier of organization
    - `[PasswordAuthenticationMethodId <String>]`: The unique identifier of passwordAuthenticationMethod
    - `[PermissionGrantConditionSetId <String>]`: The unique identifier of permissionGrantConditionSet
    - `[PermissionGrantPolicyId <String>]`: The unique identifier of permissionGrantPolicy
    - `[PhoneAuthenticationMethodId <String>]`: The unique identifier of phoneAuthenticationMethod
    - `[RiskDetectionId <String>]`: The unique identifier of riskDetection
    - `[RiskyServicePrincipalHistoryItemId <String>]`: The unique identifier of riskyServicePrincipalHistoryItem
    - `[RiskyServicePrincipalId <String>]`: The unique identifier of riskyServicePrincipal
    - `[RiskyUserHistoryItemId <String>]`: The unique identifier of riskyUserHistoryItem
    - `[RiskyUserId <String>]`: The unique identifier of riskyUser
    - `[ServicePrincipalRiskDetectionId <String>]`: The unique identifier of servicePrincipalRiskDetection
    - `[SoftwareOathAuthenticationMethodId <String>]`: The unique identifier of softwareOathAuthenticationMethod
    - `[TemporaryAccessPassAuthenticationMethodId <String>]`: The unique identifier of temporaryAccessPassAuthenticationMethod
    - `[ThreatAssessmentRequestId <String>]`: The unique identifier of threatAssessmentRequest
    - `[ThreatAssessmentResultId <String>]`: The unique identifier of threatAssessmentResult
    - `[TokenIssuancePolicyId <String>]`: The unique identifier of tokenIssuancePolicy
    - `[TokenLifetimePolicyId <String>]`: The unique identifier of tokenLifetimePolicy
    - `[UnifiedRoleManagementPolicyAssignmentId <String>]`: The unique identifier of unifiedRoleManagementPolicyAssignment
    - `[UnifiedRoleManagementPolicyId <String>]`: The unique identifier of unifiedRoleManagementPolicy
    - `[UnifiedRoleManagementPolicyRuleId <String>]`: The unique identifier of unifiedRoleManagementPolicyRule
    - `[UserFlowLanguageConfigurationId <String>]`: The unique identifier of userFlowLanguageConfiguration
    - `[UserFlowLanguagePageId <String>]`: The unique identifier of userFlowLanguagePage
    - `[UserId <String>]`: The unique identifier of user
    - `[WindowsHelloForBusinessAuthenticationMethodId <String>]`: The unique identifier of windowsHelloForBusinessAuthenticationMethod
inputs:
- name: <xref href="Microsoft.Graph.PowerShell.Models.IIdentitySignInsIdentity" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="Microsoft.Graph.PowerShell.Models.IMicrosoftGraphCertificateBasedAuthConfiguration" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.Graph.PowerShell.Models.IMicrosoftGraphCertificateBasedAuthConfiguration" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: New-MgBetaOrganizationCertificateBasedAuthConfiguration
  href: /powershell/module/Microsoft.Graph.Beta.Identity.SignIns/New-MgBetaOrganizationCertificateBasedAuthConfiguration?view=graph-powershell-beta
syntaxes:
- >-
  New-MgOrganizationCertificateBasedAuthConfiguration -OrganizationId <String>

   [-AdditionalProperties <Hashtable>] [-CertificateAuthorities <IMicrosoftGraphCertificateAuthority[]>]

   [-Id <String>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  New-MgOrganizationCertificateBasedAuthConfiguration -OrganizationId <String>

   -BodyParameter <IMicrosoftGraphCertificateBasedAuthConfiguration> [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  New-MgOrganizationCertificateBasedAuthConfiguration -InputObject <IIdentitySignInsIdentity>

   [-AdditionalProperties <Hashtable>] [-CertificateAuthorities <IMicrosoftGraphCertificateAuthority[]>]

   [-Id <String>] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  New-MgOrganizationCertificateBasedAuthConfiguration -InputObject <IIdentitySignInsIdentity>

   -BodyParameter <IMicrosoftGraphCertificateBasedAuthConfiguration> [-WhatIf] [-Confirm] [<CommonParameters>]
parameters:
- type: <xref href="Hashtable" data-throw-if-not-resolved="False" />
  name: AdditionalProperties
  description: |+
    Additional Parameters

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="IMicrosoftGraphCertificateBasedAuthConfiguration" data-throw-if-not-resolved="False" />
  name: BodyParameter
  isRequired: true
  description: |+
    certificateBasedAuthConfiguration
    To construct, see NOTES section for BODYPARAMETER properties and create a hash table.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="IMicrosoftGraphCertificateAuthority" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: CertificateAuthorities
  description: |+
    Collection of certificate authorities which creates a trusted certificate chain.
    To construct, see NOTES section for CERTIFICATEAUTHORITIES properties and create a hash table.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: None
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Id
  description: |+
    The unique idenfier for an entity.
    Read-only.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="IIdentitySignInsIdentity" data-throw-if-not-resolved="False" />
  name: InputObject
  isRequired: true
  description: |+
    Identity Parameter
    To construct, see NOTES section for INPUTOBJECT properties and create a hash table.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: OrganizationId
  isRequired: true
  description: |+
    The unique identifier of organization

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: None
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: Microsoft.Graph.Identity.SignIns.New-MgOrganizationCertificateBasedAuthConfiguration
name: New-MgOrganizationCertificateBasedAuthConfiguration
description: |-
  Create a new certificateBasedAuthConfiguration object.
metadata:
  external help file: Microsoft.Graph.Identity.SignIns-help.xml
  Module Name: Microsoft.Graph.Identity.SignIns
  online version: https://learn.microsoft.com/powershell/module/microsoft.graph.identity.signins/new-mgorganizationcertificatebasedauthconfiguration
  schema: 2.0.0
