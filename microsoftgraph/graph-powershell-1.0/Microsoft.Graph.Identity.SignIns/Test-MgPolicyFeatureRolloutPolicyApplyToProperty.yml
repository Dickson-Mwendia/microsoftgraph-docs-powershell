### YamlMime:PowershellCmdlet
summary: |-
  Validate that a Microsoft 365 group's display name or mail nickname complies with naming policies.
  Clients can use this API to determine whether a display name or mail nickname is valid before trying to create a Microsoft 365 group.
  To validate the properties of an existing group, use the group: validateProperties function.
  The following policy validations are performed for the display name and mail nickname properties:\n1.
  Validate the prefix and suffix naming policy\n2.
  Validate the custom banned words policy\n3.
  Validate that the mail nickname is unique This API only returns the first validation failure that is encountered.
  If the properties fail multiple validations, only the first validation failure is returned.
  However, you can validate both the mail nickname and the display name and receive a collection of validation errors if you are only validating the prefix and suffix naming policy.
  To learn more about configuring naming policies, see Configure naming policy.

  > [!NOTE]
  > To view the beta release of this cmdlet, view [Test-MgBetaPolicyFeatureRolloutPolicyApplyToProperty](/powershell/module/Microsoft.Graph.Beta.Identity.SignIns/Test-MgBetaPolicyFeatureRolloutPolicyApplyToProperty?view=graph-powershell-beta)
module: Microsoft.Graph.Identity.SignIns
notes: |-
  ALIASES

  COMPLEX PARAMETER PROPERTIES

  To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.


  `BODYPARAMETER <IPathsYhq3DgPoliciesFeaturerolloutpoliciesFeaturerolloutpolicyIdAppliestoMicrosoftGraphValidatepropertiesPostRequestbodyContentApplicationJsonSchema>`: .
    - `[(Any) <Object>]`: This indicates any property can be added to this object.
    - `[DisplayName <String>]`: 
    - `[EntityType <String>]`: 
    - `[MailNickname <String>]`: 
    - `[OnBehalfOfUserId <String>]`: 

  `INPUTOBJECT <IIdentitySignInsIdentity>`: Identity Parameter
    - `[ActivityBasedTimeoutPolicyId <String>]`: The unique identifier of activityBasedTimeoutPolicy
    - `[AppManagementPolicyId <String>]`: The unique identifier of appManagementPolicy
    - `[AuthenticationCombinationConfigurationId <String>]`: The unique identifier of authenticationCombinationConfiguration
    - `[AuthenticationContextClassReferenceId <String>]`: The unique identifier of authenticationContextClassReference
    - `[AuthenticationMethodConfigurationId <String>]`: The unique identifier of authenticationMethodConfiguration
    - `[AuthenticationMethodId <String>]`: The unique identifier of authenticationMethod
    - `[AuthenticationMethodModeDetailId <String>]`: The unique identifier of authenticationMethodModeDetail
    - `[AuthenticationStrengthPolicyId <String>]`: The unique identifier of authenticationStrengthPolicy
    - `[B2XIdentityUserFlowId <String>]`: The unique identifier of b2xIdentityUserFlow
    - `[BitlockerRecoveryKeyId <String>]`: The unique identifier of bitlockerRecoveryKey
    - `[CertificateBasedAuthConfigurationId <String>]`: The unique identifier of certificateBasedAuthConfiguration
    - `[ClaimsMappingPolicyId <String>]`: The unique identifier of claimsMappingPolicy
    - `[ConditionalAccessPolicyId <String>]`: The unique identifier of conditionalAccessPolicy
    - `[ConditionalAccessTemplateId <String>]`: The unique identifier of conditionalAccessTemplate
    - `[CrossTenantAccessPolicyConfigurationPartnerTenantId <String>]`: The unique identifier of crossTenantAccessPolicyConfigurationPartner
    - `[DataPolicyOperationId <String>]`: The unique identifier of dataPolicyOperation
    - `[DirectoryObjectId <String>]`: The unique identifier of directoryObject
    - `[EmailAuthenticationMethodId <String>]`: The unique identifier of emailAuthenticationMethod
    - `[FeatureRolloutPolicyId <String>]`: The unique identifier of featureRolloutPolicy
    - `[Fido2AuthenticationMethodId <String>]`: The unique identifier of fido2AuthenticationMethod
    - `[HomeRealmDiscoveryPolicyId <String>]`: The unique identifier of homeRealmDiscoveryPolicy
    - `[IdentityApiConnectorId <String>]`: The unique identifier of identityApiConnector
    - `[IdentityProviderBaseId <String>]`: The unique identifier of identityProviderBase
    - `[IdentityProviderId <String>]`: The unique identifier of identityProvider
    - `[IdentityUserFlowAttributeAssignmentId <String>]`: The unique identifier of identityUserFlowAttributeAssignment
    - `[IdentityUserFlowAttributeId <String>]`: The unique identifier of identityUserFlowAttribute
    - `[InvitationId <String>]`: The unique identifier of invitation
    - `[LongRunningOperationId <String>]`: The unique identifier of longRunningOperation
    - `[MicrosoftAuthenticatorAuthenticationMethodId <String>]`: The unique identifier of microsoftAuthenticatorAuthenticationMethod
    - `[NamedLocationId <String>]`: The unique identifier of namedLocation
    - `[OAuth2PermissionGrantId <String>]`: The unique identifier of oAuth2PermissionGrant
    - `[OrganizationId <String>]`: The unique identifier of organization
    - `[PasswordAuthenticationMethodId <String>]`: The unique identifier of passwordAuthenticationMethod
    - `[PermissionGrantConditionSetId <String>]`: The unique identifier of permissionGrantConditionSet
    - `[PermissionGrantPolicyId <String>]`: The unique identifier of permissionGrantPolicy
    - `[PhoneAuthenticationMethodId <String>]`: The unique identifier of phoneAuthenticationMethod
    - `[RiskDetectionId <String>]`: The unique identifier of riskDetection
    - `[RiskyServicePrincipalHistoryItemId <String>]`: The unique identifier of riskyServicePrincipalHistoryItem
    - `[RiskyServicePrincipalId <String>]`: The unique identifier of riskyServicePrincipal
    - `[RiskyUserHistoryItemId <String>]`: The unique identifier of riskyUserHistoryItem
    - `[RiskyUserId <String>]`: The unique identifier of riskyUser
    - `[ServicePrincipalRiskDetectionId <String>]`: The unique identifier of servicePrincipalRiskDetection
    - `[SoftwareOathAuthenticationMethodId <String>]`: The unique identifier of softwareOathAuthenticationMethod
    - `[TemporaryAccessPassAuthenticationMethodId <String>]`: The unique identifier of temporaryAccessPassAuthenticationMethod
    - `[ThreatAssessmentRequestId <String>]`: The unique identifier of threatAssessmentRequest
    - `[ThreatAssessmentResultId <String>]`: The unique identifier of threatAssessmentResult
    - `[TokenIssuancePolicyId <String>]`: The unique identifier of tokenIssuancePolicy
    - `[TokenLifetimePolicyId <String>]`: The unique identifier of tokenLifetimePolicy
    - `[UnifiedRoleManagementPolicyAssignmentId <String>]`: The unique identifier of unifiedRoleManagementPolicyAssignment
    - `[UnifiedRoleManagementPolicyId <String>]`: The unique identifier of unifiedRoleManagementPolicy
    - `[UnifiedRoleManagementPolicyRuleId <String>]`: The unique identifier of unifiedRoleManagementPolicyRule
    - `[UserFlowLanguageConfigurationId <String>]`: The unique identifier of userFlowLanguageConfiguration
    - `[UserFlowLanguagePageId <String>]`: The unique identifier of userFlowLanguagePage
    - `[UserId <String>]`: The unique identifier of user
    - `[WindowsHelloForBusinessAuthenticationMethodId <String>]`: The unique identifier of windowsHelloForBusinessAuthenticationMethod
inputs:
- name: <xref href="Microsoft.Graph.PowerShell.Models.IIdentitySignInsIdentity" data-throw-if-not-resolved="False" />
  description: ""
- name: <xref href="Microsoft.Graph.PowerShell.Models.IPathsYhq3DgPoliciesFeaturerolloutpoliciesFeaturerolloutpolicyIdAppliestoMicrosoftGraphValidatepropertiesPostRequestbodyContentApplicationJsonSchema" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="System.Boolean" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: Test-MgBetaPolicyFeatureRolloutPolicyApplyToProperty
  href: /powershell/module/Microsoft.Graph.Beta.Identity.SignIns/Test-MgBetaPolicyFeatureRolloutPolicyApplyToProperty?view=graph-powershell-beta
syntaxes:
- >-
  Test-MgPolicyFeatureRolloutPolicyApplyToProperty -FeatureRolloutPolicyId <String>

   [-AdditionalProperties <Hashtable>] [-DisplayName <String>] [-EntityType <String>] [-MailNickname <String>]

   [-OnBehalfOfUserId <String>] [-PassThru] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Test-MgPolicyFeatureRolloutPolicyApplyToProperty -FeatureRolloutPolicyId <String>

   -BodyParameter <IPathsYhq3DgPoliciesFeaturerolloutpoliciesFeaturerolloutpolicyIdAppliestoMicrosoftGraphValidatepropertiesPostRequestbodyContentApplicationJsonSchema>

   [-PassThru] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Test-MgPolicyFeatureRolloutPolicyApplyToProperty -InputObject <IIdentitySignInsIdentity>

   [-AdditionalProperties <Hashtable>] [-DisplayName <String>] [-EntityType <String>] [-MailNickname <String>]

   [-OnBehalfOfUserId <String>] [-PassThru] [-WhatIf] [-Confirm] [<CommonParameters>]
- >-
  Test-MgPolicyFeatureRolloutPolicyApplyToProperty -InputObject <IIdentitySignInsIdentity>

   -BodyParameter <IPathsYhq3DgPoliciesFeaturerolloutpoliciesFeaturerolloutpolicyIdAppliestoMicrosoftGraphValidatepropertiesPostRequestbodyContentApplicationJsonSchema>

   [-PassThru] [-WhatIf] [-Confirm] [<CommonParameters>]
examples:
- title: 'Example 1: Code snippet'
  code: |-
    Import-Module Microsoft.Graph.DirectoryObjects

    $params = @{
    	EntityType = "Group"
    	DisplayName = "Myprefix_test_mysuffix"
    	MailNickname = "Myprefix_test_mysuffix"
    	OnBehalfOfUserId = "onBehalfOfUserId-value"
    }

    Test-MgDirectoryObjectProperty -BodyParameter $params
  description: |-
    This example shows how to use the Test-MgPolicyFeatureRolloutPolicyApplyToProperty Cmdlet.

    To learn about permissions for this resource, see the [permissions reference](/graph/permissions-reference).
  summary: ""
parameters:
- type: <xref href="Hashtable" data-throw-if-not-resolved="False" />
  name: AdditionalProperties
  description: |+
    Additional Parameters

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="IPathsYhq3DgPoliciesFeaturerolloutpoliciesFeaturerolloutpolicyIdAppliestoMicrosoftGraphValidatepropertiesPostRequestbodyContentApplicationJsonSchema" data-throw-if-not-resolved="False" />
  name: BodyParameter
  isRequired: true
  description: |+
    .
    To construct, see NOTES section for BODYPARAMETER properties and create a hash table.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Confirm
  description: |+
    Prompts you for confirmation before running the cmdlet.

  defaultValue: None
  position: Named
  aliases: cf
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: DisplayName
  description: |+
    .

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: EntityType
  description: |+
    .

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: FeatureRolloutPolicyId
  isRequired: true
  description: |+
    The unique identifier of featureRolloutPolicy

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="IIdentitySignInsIdentity" data-throw-if-not-resolved="False" />
  name: InputObject
  isRequired: true
  description: |+
    Identity Parameter
    To construct, see NOTES section for INPUTOBJECT properties and create a hash table.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: MailNickname
  description: |+
    .

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: OnBehalfOfUserId
  description: |+
    .

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: PassThru
  description: |+
    Returns true when the command succeeds

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: WhatIf
  description: |+
    Shows what would happen if the cmdlet runs.
    The cmdlet is not run.

  defaultValue: None
  position: Named
  aliases: wi
  parameterValueGroup: ""
uid: Microsoft.Graph.Identity.SignIns.Test-MgPolicyFeatureRolloutPolicyApplyToProperty
name: Test-MgPolicyFeatureRolloutPolicyApplyToProperty
description: |-
  Validate that a Microsoft 365 group's display name or mail nickname complies with naming policies.
  Clients can use this API to determine whether a display name or mail nickname is valid before trying to create a Microsoft 365 group.
  To validate the properties of an existing group, use the group: validateProperties function.
  The following policy validations are performed for the display name and mail nickname properties:\n1.
  Validate the prefix and suffix naming policy\n2.
  Validate the custom banned words policy\n3.
  Validate that the mail nickname is unique This API only returns the first validation failure that is encountered.
  If the properties fail multiple validations, only the first validation failure is returned.
  However, you can validate both the mail nickname and the display name and receive a collection of validation errors if you are only validating the prefix and suffix naming policy.
  To learn more about configuring naming policies, see Configure naming policy.
metadata:
  external help file: Microsoft.Graph.Identity.SignIns-help.xml
  Module Name: Microsoft.Graph.Identity.SignIns
  online version: https://learn.microsoft.com/powershell/module/microsoft.graph.identity.signins/test-mgpolicyfeaturerolloutpolicyapplytoproperty
  schema: 2.0.0
