### YamlMime:PowershellCmdlet
summary: |-
  Get a set of event resources that have been added, deleted, or updated in a **calendarView** (a range of events defined by start and end dates) of the user's primary calendar.
  Typically, synchronizing events in a **calendarView** in a local store entails a round of multiple **delta** function calls.
  The initial call is a full synchronization, and every subsequent **delta** call in the same round gets the incremental changes (additions, deletions, or updates).
  This allows you to maintain and synchronize a local store of events in the specified **calendarView**, without having to fetch all the events of that calendar from the server every time.

  > [!NOTE]
  > To view the beta release of this cmdlet, view [Get-MgBetaGroupCalendarSchedule](/powershell/module/Microsoft.Graph.Beta.Groups/Get-MgBetaGroupCalendarSchedule?view=graph-powershell-beta)
module: Microsoft.Graph.Groups
notes: |-
  ALIASES

  COMPLEX PARAMETER PROPERTIES

  To create the parameters described below, construct a hash table containing the appropriate properties. For information on hash tables, run Get-Help about_Hash_Tables.


  `INPUTOBJECT <IGroupsIdentity>`: Identity Parameter
    - `[AttachmentId <String>]`: The unique identifier of attachment
    - `[ContentTypeId <String>]`: The unique identifier of contentType
    - `[ConversationId <String>]`: The unique identifier of conversation
    - `[ConversationThreadId <String>]`: The unique identifier of conversationThread
    - `[DirectoryObjectId <String>]`: The unique identifier of directoryObject
    - `[DocumentSetVersionId <String>]`: The unique identifier of documentSetVersion
    - `[DriveId <String>]`: The unique identifier of drive
    - `[DriveItemId <String>]`: The unique identifier of driveItem
    - `[DriveItemVersionId <String>]`: The unique identifier of driveItemVersion
    - `[EndDateTime <String>]`: Usage: endDateTime='{endDateTime}'
    - `[EventId <String>]`: The unique identifier of event
    - `[ExtensionId <String>]`: The unique identifier of extension
    - `[GroupId <String>]`: The unique identifier of group
    - `[GroupLifecyclePolicyId <String>]`: The unique identifier of groupLifecyclePolicy
    - `[GroupSettingId <String>]`: The unique identifier of groupSetting
    - `[GroupSettingTemplateId <String>]`: The unique identifier of groupSettingTemplate
    - `[IncludePersonalNotebooks <Boolean?>]`: Usage: includePersonalNotebooks={includePersonalNotebooks}
    - `[Interval <String>]`: Usage: interval='{interval}'
    - `[ListId <String>]`: The unique identifier of list
    - `[ListItemId <String>]`: The unique identifier of listItem
    - `[ListItemVersionId <String>]`: The unique identifier of listItemVersion
    - `[NotebookId <String>]`: The unique identifier of notebook
    - `[OnenotePageId <String>]`: The unique identifier of onenotePage
    - `[OnenoteSectionId <String>]`: The unique identifier of onenoteSection
    - `[Path <String>]`: Usage: path='{path}'
    - `[PermissionId <String>]`: The unique identifier of permission
    - `[PostId <String>]`: The unique identifier of post
    - `[ProfilePhotoId <String>]`: The unique identifier of profilePhoto
    - `[Q <String>]`: Usage: q='{q}'
    - `[ResourceSpecificPermissionGrantId <String>]`: The unique identifier of resourceSpecificPermissionGrant
    - `[SiteId <String>]`: The unique identifier of site
    - `[StartDateTime <String>]`: Usage: startDateTime='{startDateTime}'
    - `[SubscriptionId <String>]`: The unique identifier of subscription
    - `[Token <String>]`: Usage: token='{token}'
    - `[User <String>]`: Usage: User='{User}'
inputs:
- name: <xref href="Microsoft.Graph.PowerShell.Models.IGroupsIdentity" data-throw-if-not-resolved="False" />
  description: ""
outputs:
- name: <xref href="Microsoft.Graph.PowerShell.Models.IMicrosoftGraphEvent" data-throw-if-not-resolved="False" />
  description: ""
links:
- text: Get-MgBetaGroupCalendarSchedule
  href: /powershell/module/Microsoft.Graph.Beta.Groups/Get-MgBetaGroupCalendarSchedule?view=graph-powershell-beta
syntaxes:
- >-
  Get-MgGroupCalendarEventDelta -GroupId <String> -EndDateTime <String> -StartDateTime <String>

   [-Filter <String>] [-Property <String[]>] [-Search <String>] [-Skip <Int32>] [-Sort <String[]>] [-Top <Int32>]

   [-PageSize <Int32>] [-All] [-CountVariable <String>] [<CommonParameters>]
- >-
  Get-MgGroupCalendarEventDelta -InputObject <IGroupsIdentity> -EndDateTime <String> -StartDateTime <String>

   [-Filter <String>] [-Property <String[]>] [-Search <String>] [-Skip <Int32>] [-Sort <String[]>] [-Top <Int32>]

   [-Count] [<CommonParameters>]
examples:
- title: 'Example 1: Code snippet'
  code: |-
    Import-Module Microsoft.Graph.Users.Actions

    $params = @{
    	Schedules = @(
    		"adelev@contoso.onmicrosoft.com"
    		"meganb@contoso.onmicrosoft.com"
    	)
    	StartTime = @{
    		DateTime = "2019-03-15T09:00:00"
    		TimeZone = "Pacific Standard Time"
    	}
    	EndTime = @{
    		DateTime = "2019-03-15T18:00:00"
    		TimeZone = "Pacific Standard Time"
    	}
    	AvailabilityViewInterval = 60
    }

    # A UPN can also be used as -UserId.
    Get-MgUserDefaultCalendarSchedule -UserId $userId -BodyParameter $params
  description: |-
    This example shows how to use the Get-MgGroupCalendarSchedule Cmdlet.

    To learn about permissions for this resource, see the [permissions reference](/graph/permissions-reference).
  summary: ""
parameters:
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: All
  description: |+
    List all pages.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="SwitchParameter" data-throw-if-not-resolved="False" />
  name: Count
  description: |+
    Include count of items

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: CountVariable
  description: |+
    Specifies a count of the total number of items in a collection.
    By default, this variable will be set in the global scope.

  defaultValue: None
  position: Named
  aliases: CV
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: EndDateTime
  isRequired: true
  description: |+
    The end date and time of the time range in the function, represented in ISO 8601 format.
    For example, 2019-11-08T20:00:00-08:00

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Filter
  description: |+
    Filter items by property values

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: GroupId
  isRequired: true
  description: |+
    The unique identifier of group

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="IGroupsIdentity" data-throw-if-not-resolved="False" />
  name: InputObject
  isRequired: true
  description: |+
    Identity Parameter
    To construct, see NOTES section for INPUTOBJECT properties and create a hash table.

  defaultValue: None
  pipelineInput: true
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: PageSize
  description: |+
    Sets the page size of results.

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Property
  description: |+
    Select properties to be returned

  defaultValue: None
  position: Named
  aliases: Select
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: Search
  description: |+
    Search items by search phrases

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: Skip
  description: |+
    Skip the first n items

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" /><span>[</span><span>]</span>
  name: Sort
  description: |+
    Order items by property values

  defaultValue: None
  position: Named
  aliases: OrderBy
  parameterValueGroup: ""
- type: <xref href="String" data-throw-if-not-resolved="False" />
  name: StartDateTime
  isRequired: true
  description: |+
    The start date and time of the time range in the function, represented in ISO 8601 format.
    For example, 2019-11-08T20:00:00-08:00

  defaultValue: None
  position: Named
  aliases: ""
  parameterValueGroup: ""
- type: <xref href="Int32" data-throw-if-not-resolved="False" />
  name: Top
  description: |+
    Show only the first n items

  defaultValue: None
  position: Named
  aliases: Limit
  parameterValueGroup: ""
uid: Microsoft.Graph.Groups.Get-MgGroupCalendarSchedule
name: Get-MgGroupCalendarSchedule
description: |-
  Get a set of event resources that have been added, deleted, or updated in a **calendarView** (a range of events defined by start and end dates) of the user's primary calendar.
  Typically, synchronizing events in a **calendarView** in a local store entails a round of multiple **delta** function calls.
  The initial call is a full synchronization, and every subsequent **delta** call in the same round gets the incremental changes (additions, deletions, or updates).
  This allows you to maintain and synchronize a local store of events in the specified **calendarView**, without having to fetch all the events of that calendar from the server every time.
metadata:
  external help file: Microsoft.Graph.Groups-help.xml
  Module Name: Microsoft.Graph.Groups
  online version: https://learn.microsoft.com/powershell/module/microsoft.graph.groups/get-mggroupcalendareventdelta
  schema: 2.0.0
